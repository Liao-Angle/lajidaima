<?xml version="1.0"?>
<doc>
    <assembly>
        <name>com</name>
    </assembly>
    <members>
        <member name="T:com.dsc.kernal.sso.client.DisableSSOClient">
            <summary>
            SSO驗證機制的客戶端元件
            </summary>
        </member>
        <member name="T:com.dsc.kernal.sso.client.AbstractSSOClient">
            <summary>
            SSO驗證機制的客戶端元件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.sso.client.AbstractSSOClient.verify(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.Web.HttpRequest)">
            <summary>
            根據驗證來源VerifySite參數以及SSOToken的值, 去判定該Token是否合理. 若合理回傳true, 否則回傳false. 所傳入系統的URL參數可使用request參數的QueryString取得
            </summary>
            <param name="engine">資料庫連線物件</param>
            <param name="VerifySite">驗證資料來源</param>
            <param name="SSOToken">驗證碼</param>
            <param name="UserID">要判定的使用者代號</param>
            <param name="request">傳入系統頁面的request物件, 可由此取得其他的參數值</param>
            <returns>true:驗證成功; false:驗證失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.sso.client.DisableSSOClient.verify(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.Web.HttpRequest)">
            <summary>
            根據驗證來源VerifySite參數以及SSOToken的值, 去判定該Token是否合理. 若合理回傳true, 否則回傳false. 所傳入系統的URL參數可使用request參數的QueryString取得
            </summary>
            <param name="engine">資料庫連線物件</param>
            <param name="VerifySite">驗證資料來源</param>
            <param name="SSOToken">驗證碼</param>
            <param name="UserID">要判定的使用者代號</param>
            <param name="request">傳入系統頁面的request物件, 可由此取得其他的參數值</param>
            <returns>true:驗證成功; false:驗證失敗</returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPFileParser">
            <summary>  
            Root class of all file parsers
            </summary>
            <author>       
            Bruce Blackshaw
            </author>
            <version>      
            $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileParser.parserCulture">
            <summary>Culture used for parsing file details</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFileParser.Parse(System.String)">
            <summary> 
            Parse server supplied string
            </summary>
            <param name="raw">  raw string to parse
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFileParser.Split(System.String)">
            <summary>
            Splits string consisting of fields separated by
            whitespace into an array of strings
            </summary>
            <param name="str">
            string to split
            </param>   
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileParser.ParsingCulture">
            <summary>
            Get/set the culture info for parsing
            </summary>
        </member>
        <member name="T:com.dsc.kernal.agent.DoubleAgent">
            <summary>
            取得單頭包含單一單身資料物件的代理器. 此類別為基底類別, 需撰寫各自的代理器繼承此類別, 並在建構子中設定存取參數.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.agent.AbstractAgent">
            <summary>
            資料物件存取代理器基底類別, 為各種Agent之父類別. 不可直接建立此類別實體, 請使用繼承類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.AbstractAgent.engine">
            <summary>
            I/O存取物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.AbstractAgent.defaultData">
            <summary>
            所處理的資料物件, 可由此取得或者指定DataObjectSet
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.queryHead(System.String)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料. 此方法需由繼承類別實作
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.queryHead(System.String,System.Int32)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料. 此方法需由繼承類別實作
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.queryChild(com.dsc.kernal.databean.DataObject)">
            <summary>
            取得單身資料. 此方法需由繼承類別實作
            </summary>
            <param name="whereClause">要取得單身資料的單頭物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.queryChild(com.dsc.kernal.databean.DataObject,System.String)">
            <summary>
            取得單身資料, 並可下達單身資料where條件子句. 此方法需由繼承類別實作. 此方法僅能取得單一單身.
            </summary>
            <param name="data">要取得單身資料的單頭物件</param>
            <param name="whereClause">查詢的where條件子句</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.queryChild(com.dsc.kernal.databean.DataObject,System.String[])">
            <summary>
            取得單身資料, 並可下達單身資料where條件子句. 此方法需由繼承類別實作.
            </summary>
            <param name="data">要取得單身資料的單頭物件</param>
            <param name="whereClause">查詢各單身的where條件子句</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.update">
            <summary>
            更新資料物件. 此方法需由繼承類別實作.
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.updateFormMode">
            <summary>
            快速更新資料物件, 不需檢查TimeStamp, 直接覆蓋舊有資料. 此方法需由繼承類別實作.
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.query(System.String)">
            <summary>
            取得完整資料物件. 此方法需由繼承類別實作.
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.query(System.String,System.Int32)">
            <summary>
            取得完整資料物件. 此方法需由繼承類別實作.
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.createEmptyDataObjectSet(System.String)">
            <summary>
            根據tableName建立空的DataObjectSet. 此DataObjectSet已經設定好相關參數
            </summary>
            <param name="tableName">要建立的DataObjectSet物件參考的tableName</param>
            <returns>DataObjectSet</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.queryDB(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            根據whereCalause條件查詢Table資料,並限制資料筆數
            </summary>
            <param name="engine">Engine</param>
            <param name="whereClause">條件句</param>
            <param name="tableName">資料表名稱</param>
            <param name="assemblyName">類別名稱</param>
            <param name="childClassString">完整類別名稱</param>
            <param name="rowCount">限制筆數</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.queryDB(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String)">
            <summary>
            根據whereCalause條件查詢Table資料
            </summary>
            <param name="engine">Engine</param>
            <param name="whereClause">條件句</param>
            <param name="tableName">資料表名稱</param>
            <param name="assemblyName">類別名稱</param>
            <param name="childClassString">完整類別名稱</param>
            <returns>查詢結果的DataObject</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.queryDBNameLess(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            根據whereCalause條件查詢Table資料,並限制資料筆數
            </summary>
            <param name="engine">Engine</param>
            <param name="whereClause">條件句</param>
            <param name="tableName">資料表名稱</param>
            <param name="assemblyName">類別名稱</param>
            <param name="childClassString">完整類別名稱</param>
            <param name="rowCount">限制筆數</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractAgent.queryDBNameLess(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String)">
            <summary>
            根據whereCalause條件查詢Table資料
            </summary>
            <param name="engine">Engine</param>
            <param name="whereClause">條件句</param>
            <param name="tableName">資料表名稱</param>
            <param name="assemblyName">類別名稱</param>
            <param name="childClassString">完整類別名稱</param>
            <returns></returns>
        </member>
        <member name="F:com.dsc.kernal.agent.DoubleAgent.tableName">
            <summary>
            此代理器所存取的單頭資料表名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.DoubleAgent.subTableName">
            <summary>
            此代理器所存取的單身資料表名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.DoubleAgent.childClassString">
            <summary>
            單頭資料物件的類別名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.DoubleAgent.subChildClassString">
            <summary>
            單身資料物件的類別名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.DoubleAgent.assemblyName">
            <summary>
            單頭資料物件所位在的組件名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.DoubleAgent.subAssemblyName">
            <summary>
            單身資料物件所位在的組件名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.DoubleAgent.relationString">
            <summary>
            單頭資料與單身資料關聯欄位對應, [x,0]:關聯單頭資料表欄位名稱; [x,1]:關聯單身資料表欄位名稱
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.#ctor(System.String)">
            <summary>
            建構子, 根據傳入的參數建立SQL Server存取引擎物件
            </summary>
            <param name="param">SQL Server資料庫連結參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.#ctor(System.String,System.String)">
            <summary>
            建構子, 根據傳入的參數建立不同的I/O存取引擎
            </summary>
            <param name="engineType">I/O引擎識別字串, 參考com.dsc.kernal.factory.EngineConstants類別</param>
            <param name="param">參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.#ctor(com.dsc.kernal.factory.AbstractEngine)">
            <summary>
            根據所建立的I/O存取引擎參數建立此代理器物件
            </summary>
            <param name="engine">I/O存取引擎物件</param>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.createEmptyDataObjectSet(System.String)">
            <summary>
            根據tableName建立空的DataObjectSet. 此DataObjectSet已經設定好相關參數
            </summary>
            <param name="tableName">要建立的DataObjectSet物件參考的tableName</param>
            <returns>DataObjectSet</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.update">
            <summary>
            更新資料物件. 此方法速度慢, 但資料庫已有存在資料時, 會以更新方式進行
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.updateFormMode">
            <summary>
            更新資料庫資料. 此方法速度快, 但資料庫不得存在該筆資料. 使用於表單資料更新
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.queryHead(System.String)">
            <summary>
            取得資料物件單頭資料. 此方法建立的DataObjectSet僅包含單頭資料物件, 可配合queryChild使用
            </summary>
            <param name="whereClause">條件字串</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.queryHead(System.String,System.Int32)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料. 此方法需由繼承類別實作
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.queryChild(com.dsc.kernal.databean.DataObject)">
            <summary>
            查詢data單頭的所有單身資料
            </summary>
            <param name="data">單頭資料物件</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.queryChild(com.dsc.kernal.databean.DataObject,System.String)">
            <summary>
            以whereClause為條件查詢data單頭的單身資料
            </summary>
            <param name="data">單頭物件</param>
            <param name="whereClause">查詢條件</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.query(System.String)">
            <summary>
            取得資料物件
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DoubleAgent.query(System.String,System.Int32)">
            <summary>
            取得完整資料物件. 此方法需由繼承類別實作.
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="T:com.dsc.flow.data.Activity">
            <summary>
            活動資訊
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.Activity.id">
            <summary>
            活動代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.Activity.name">
            <summary>
            活動名稱
            </summary>
        </member>
        <member name="T:com.dsc.exception.FormProcessException">
            <summary>
            當表單處理發生錯誤的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.FormProcessException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.exception.FormProcessException.#ctor(System.String)">
            <summary>
            建構子
            </summary>
            <param name="message">錯誤訊息</param>
        </member>
        <member name="T:com.dsc.kernal.utility.ExceptionProcessor">
            <summary>
            例外物件儲存類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionProcessor.push(System.String,System.String,System.String,System.String)">
            <summary>
            將例外推入此儲存物件, 並且擲出例外
            </summary>
            <param name="version">版本</param>
            <param name="objname">物件名稱</param>
            <param name="methodname">方法名稱</param>
            <param name="message">錯誤訊息</param>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionProcessor.push(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            將例外推入此物件
            </summary>
            <param name="version">版本</param>
            <param name="objname">物件名稱</param>
            <param name="methodname">方法名稱</param>
            <param name="message">錯誤訊息</param>
            <param name="isThrowException">true: 擲出例外; false: 不擲出例外</param>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionProcessor.flush">
            <summary>
            將所儲存的例外訊息回傳後, 清空所儲存的例外
            </summary>
            <returns>例外訊息</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionProcessor.hasError">
            <summary>
            判斷此儲存實體是否有推入的例外物件
            </summary>
            <returns>true: 包含例外物件; false: 無例外物件推入</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.BrowserProcessor.getBrowserInfo(System.Web.UI.Page)">
            <summary>
            關於瀏覽器端細節資訊(於.net2.0執行須小心Chrome誤判為Safari)
            </summary>
            <param name="Page"></param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.BrowserProcessor.detectBrowser(System.Web.UI.Page)">
            <summary>
            偵測瀏覽器版本
            </summary>
            <param name="Page"></param>
            <returns>瀏覽器種類</returns>
        </member>
        <member name="T:com.dsc.kernal.factory.XMLEngine">
            <summary>
            XML檔案 I/O存取引擎物件(尚未實作)
            </summary>
        </member>
        <member name="T:com.dsc.kernal.factory.AbstractEngine">
            <summary>
            I/O存取引擎的基底類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.AbstractEngine.connectString">
            <summary>
            連線字串
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.AbstractEngine.TransactionKey">
            <summary>
            交易識別鍵
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.AbstractEngine.executeTime">
            <summary>
            執行的當下時間
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.AbstractEngine.userGUID">
            <summary>
            執行的使用者代號
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.AbstractEngine.spReturnValue">
            <summary>
            StoreProcedure呼叫後(執行exec方法)的回傳值
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.AbstractEngine.spOutput">
            <summary>
            StoreProcedure呼叫後(執行exec方法)的Output參數內容值
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.AbstractEngine.errorString">
            <summary>
            操作後的錯誤訊息
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.#ctor(System.String)">
            <summary>
            建構子
            </summary>
            <param name="param">建構引擎所需參數</param>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟Transaction
            </summary>
            <param name="isolevel">開啟方式, 參閱System.Data.SqlClient.IsolationLevel</param>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.close">
            <summary>
            關閉此I/O
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.executeSQL(System.String)">
            <summary>
            執行SQL語句
            </summary>
            <param name="sql">SQL</param>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.executeScalar(System.String)">
            <summary>
            執行回傳單一資料的SQL語句
            </summary>
            <param name="sql">SQL</param>
            <returns>第一欄,第一列</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.getDataSet(System.String,System.String)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.getDataSetLimit(System.String,System.String,System.Int32)">
            <summary>
            回傳限制資料筆數的DataSet
            </summary>
            <param name="sql">SQL</param>
            <param name="tableName">Table Name</param>
            <param name="rowCount">限制筆數</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據傳入的SQL字串取得DataSet
            </summary>
            <param name="sqlString">SQL字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <param name="param">
            在Inline模式下，會直接使用param[i,0]置換sqlString中的所有參數並去掉頭一個字元，
            在Parameter模式中，param[i,0]為參數名稱,param[i,1]為參數型態，分為STRING與非STRING,param[i,2]為參數值</param>
            <param name="parseMode">參數模式，true為Inline模式，false為Parameter模式</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.updateData(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.updateDataFormMode(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.updateData(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.updateDataFormMode(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.refreshData(com.dsc.kernal.databean.DataObject)">
            <summary>
            從I/O方面取得資料更新data資料物件內容
            </summary>
            <param name="data">被更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.updateDataSet(System.Data.DataSet)">
            <summary>
            更新DataSet至資料庫
            </summary>
            <param name="ds">要更新的DataSet</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.AbstractEngine.exec(System.String)">
            <summary>
            執行StoreProcedure. 可直接撰寫command text, 包含output參數. 不論該storeprocedure是否有回傳值, 可直接寫成 sp_myProc 'xx',@myout output.......
            若該StoreProcedure有回傳DataSet, 則直接取得. 若無, 回傳null
            若該StoreProcedure有return值, 此值會寫在spReturnValue
            若該StoreProceudre有output參數, 回傳參數會以Hashtable放在spOutput中, key為參數名稱, value為值
            </summary>
            <param name="cmdText">要執行的StoreProcedure名稱以及參數. 可不寫上exec或者Execute開頭</param>
            <returns>取得的DataSet</returns>
            <example>
                <code>
               DataSet ds;
               ds = engine.exec("exec testDSO '1808', @name output");
               //取得回傳DataSet
               if (ds == null)
               {
                   Console.WriteLine("ds null");
               }
               else
               {
                   Console.WriteLine(ds.Tables[0].Rows[0]["RESAK001"].ToString());
               }
               //取得回傳值
               Console.WriteLine(engine.spReturnValue.ToString());
               //取得Output參數
               IDictionaryEnumerator ie = engine.spOutput.GetEnumerator();
               while (ie.MoveNext())
               {
                   Console.WriteLine(ie.Key.ToString() + ": " + ie.Value.ToString());
               }
                </code>
            </example>
        </member>
        <member name="M:com.dsc.kernal.factory.XMLEngine.#ctor(System.String)">
            <summary>
            建構子, 根據param建立XML I/O存取引擎物件
            </summary>
            <param name="param"></param>
        </member>
        <member name="T:com.dsc.kernal.document.DocumentAdapterFactory">
            <summary>
            取得處理檔案儲存機制類別的工廠類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.document.DocumentAdapterFactory.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.document.DocumentAdapterFactory.getDocumentAdapter(System.String,System.String)">
            <summary>
            取得檔案處理機制元件
            </summary>
            <param name="assemblyName">檔案處理機制組件名稱</param>
            <param name="childClassString">檔案處理機制物件類別名稱</param>
            <returns>檔案處理機制物件</returns>
        </member>
        <member name="T:com.dsc.kernal.document.LocalFileAdapter">
            <summary>
            將上傳檔案儲存到setting.ini檔案中所設定的filepath參數路徑下的實作方法. setting.ini必須位於AP端虛擬目錄
            下的SettingFiles/setting.ini, filepath參數後方必定以\結尾, 位於[global]中.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.document.AbstractDocumentAdapter">
            <summary>
            此類別為上傳檔案後伺服器處理動作的抽象類別. 包含兩個需定義方法, saveFile以及getFile. 若系統上傳檔案後需要處理其他動作, 例如與其他子系統銜接, 請實作此類別
            在實作此類別時, 可使用GlobalProperty靜態類別由setting.ini取得額外參數資訊
            </summary>
        </member>
        <member name="M:com.dsc.kernal.document.AbstractDocumentAdapter.saveFile(System.String,System.String,System.String,System.String)">
            <summary>
            將上傳後所暫存的檔案處理至其他檔案實體儲存機制
            </summary>
            <param name="tempFilePath">目前檔案所暫存的路徑</param>
            <param name="level1">目的儲存路徑層級1</param>
            <param name="level2">目的儲存路徑層級2</param>
            <param name="fileGUID">檔案識別碼</param>
        </member>
        <member name="M:com.dsc.kernal.document.AbstractDocumentAdapter.getFile(System.String,System.String,System.String,System.String)">
            <summary>
            由實際儲存機制取得檔案的方法
            </summary>
            <param name="tempFilePath">取得實體檔案後所需暫存的路徑</param>
            <param name="level1">目的儲存路徑層級1</param>
            <param name="level2">目的儲存路徑層級2</param>
            <param name="fileGUID">檔案識別碼</param>
        </member>
        <member name="M:com.dsc.kernal.document.AbstractDocumentAdapter.deleteFile(System.String,System.String,System.String)">
            <summary>
            由實際儲存機制刪除檔案的方法
            </summary>
            <param name="level1">目的儲存路徑層級1</param>
            <param name="level2">目的儲存路徑層級2</param>
            <param name="fileGUID">檔案識別碼</param>
        </member>
        <member name="M:com.dsc.kernal.document.AbstractDocumentAdapter.saveFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            將上傳後所暫存的檔案處理至其他檔案實體儲存機制. 此方法為virtual method, 多傳入fileExt(延伸檔名), 預設執行內容為直接呼叫saveFile(捨棄延伸檔名)
            </summary>
            <param name="tempFilePath">目前檔案所暫存的路徑</param>
            <param name="level1">目的儲存路徑層級1</param>
            <param name="level2">目的儲存路徑層級2</param>
            <param name="fileGUID">檔案識別碼</param>
            <param name="fileExt">檔案的延伸檔名</param>
        </member>
        <member name="M:com.dsc.kernal.document.LocalFileAdapter.saveFile(System.String,System.String,System.String,System.String)">
            <summary>
            將上傳後所暫存的檔案儲存到設定檔下filepath參數設定路徑
            </summary>
            <param name="tempFilePath">目前檔案所暫存的路徑</param>
            <param name="level1">filepath參數指定的目錄下第一層名稱</param>
            <param name="level2">參數指定的目錄下第二層名稱</param>
            <param name="fileGUID">檔案識別碼</param>
        </member>
        <member name="M:com.dsc.kernal.document.LocalFileAdapter.getFile(System.String,System.String,System.String,System.String)">
            <summary>
            由setting.ini中的filepath參數指定的路徑取得檔案的方法
            </summary>
            <param name="tempFilePath">取得實體檔案後所需暫存的路徑</param>
            <param name="level1">filepath參數指定的目錄下第一層名稱</param>
            <param name="level2">參數指定的目錄下第二層名稱</param>
            <param name="fileGUID">檔案識別碼</param>
        </member>
        <member name="M:com.dsc.kernal.document.LocalFileAdapter.deleteFile(System.String,System.String,System.String)">
            <summary>
            由實際儲存機制刪除檔案的方法
            </summary>
            <param name="level1">目的儲存路徑層級1</param>
            <param name="level2">目的儲存路徑層級2</param>
            <param name="fileGUID">檔案識別碼</param>
        </member>
        <member name="T:com.dsc.kernal.agent.SingleAgent">
            <summary>
            存取單一資料表資料物件的代理器基底類別. 此類別為基底類別, 需撰寫各自的代理器繼承此類別, 並在建構子中設定存取參數.
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.SingleAgent.tableName">
            <summary>
            存取的資料表名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.SingleAgent.childClassString">
            <summary>
            資料物件類別名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.SingleAgent.assemblyName">
            <summary>
            資料物件所位於的組件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.#ctor(System.String)">
            <summary>
            建構子, 根據傳入的參數建立SQL Server存取引擎物件
            </summary>
            <param name="param">SQL Server資料庫連結參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.#ctor(System.String,System.String)">
            <summary>
            建構子, 根據傳入的參數建立不同的I/O存取引擎
            </summary>
            <param name="engineType">I/O引擎識別字串, 參考com.dsc.kernal.factory.EngineConstants類別</param>
            <param name="param">參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.#ctor(com.dsc.kernal.factory.AbstractEngine)">
            <summary>
            根據所建立的I/O存取引擎參數建立此代理器物件
            </summary>
            <param name="engine">I/O存取引擎物件</param>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.update">
            <summary>
            更新資料物件
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.updateFormMode">
            <summary>
            更新資料庫資料. 此方法速度快, 但資料庫不得存在該筆資料. 使用於表單資料更新
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.queryHead(System.String)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.queryHead(System.String,System.Int32)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料. 此方法需由繼承類別實作
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.queryChild(com.dsc.kernal.databean.DataObject)">
            <summary>
            查詢data單頭的所有單身資料
            </summary>
            <param name="data">單頭資料物件</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.query(System.String)">
            <summary>
            取得資料物件
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.query(System.String,System.Int32)">
            <summary>
            取得完整資料物件. 此方法需由繼承類別實作.
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.SingleAgent.createEmptyDataObjectSet(System.String)">
            <summary>
            根據tableName建立空的DataObjectSet. 此DataObjectSet已經設定好相關參數
            </summary>
            <param name="tableName">要建立的DataObjectSet物件參考的tableName</param>
            <returns>DataObjectSet</returns>
        </member>
        <member name="T:com.dsc.kernal.agent.OpenWindowClientAgent">
            <summary>
            開窗元件所使用的資料物件存取器. 此類別為系統內部使用.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.agent.AbstractOpenWindowAgent">
            <summary>
            開窗元件所使用的資料物件存取器. 此類別為系統內部使用.
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.AbstractOpenWindowAgent.errorString">
            <summary>
            資料庫存取錯誤訊息
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.AbstractOpenWindowAgent.clientEngineType">
            <summary>
            I/O引擎類別. 參考EngineConstants, 預設為 EngineConstants.CLIENT
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractOpenWindowAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractOpenWindowAgent.queryData(System.String,System.String,System.String,System.String,System.String,System.String,System.String[0:,0:],System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根據設定表TPABYA的設定, 取得開窗後的資料
            </summary>
            <param name="mainEngineType">多資料庫系統中, TPABYA資料庫所位於的資料庫類型</param>
            <param name="mainConnectionString">多資料庫系統中, TPABYA資料庫所位於的資料庫連結字串</param>
            <param name="tableEngineType">欲開窗查詢的資料庫類型</param>
            <param name="tableConnectionString">欲開窗查詢的資料庫連結字串</param>
            <param name="tableID">識別欲開窗的資料表代號, 對應TPABYA001欄位</param>
            <param name="serialNum">識別欲開窗的識別碼, 對應TPABYA002欄位</param>
            <param name="param">指定開窗SQL語法中(TPABYA005), 內部參數(@開頭)的欄位名稱</param>
            <param name="whereClause">需增加的限制條件SQL語句, 不包含where</param>
            <param name="parseMode">是否將param所指定的名稱更新TPABYA005的SQL語句. true:取代; false:保留</param>
            <param name="page">頁碼</param>
            <param name="pagesize">每頁筆數</param>
            <returns>ArrayList: 0: DataObjectSet物件; 1: 各欄位顯示名稱; 2: 各欄位主要屬性; 3: 各欄位次要屬性; 4: 各欄位資料表欄位名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractOpenWindowAgent.queryData(System.String,System.String,System.String,System.String[0:,0:],System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根據設定表TPABYA的設定, 取得開窗後的資料
            </summary>
            <param name="mainConnectionString">多資料庫系統中, TPABYA資料庫所位於的資料庫連結字串</param>
            <param name="tableID">識別欲開窗的資料表代號, 對應TPABYA001欄位</param>
            <param name="serialNum">識別欲開窗的識別碼, 對應TPABYA002欄位</param>
            <param name="param">指定開窗SQL語法中(TPABYA005), 內部參數(@開頭)的欄位名稱</param>
            <param name="whereClause">需增加的限制條件SQL語句, 不包含where</param>
            <param name="parseMode">是否將param所指定的名稱更新TPABYA005的SQL語句. true:取代; false:保留</param>
            <param name="page">頁碼</param>
            <param name="pagesize">每頁筆數</param>
            <returns>ArrayList: 0: DataObjectSet物件; 1: 各欄位顯示名稱; 2: 各欄位主要屬性; 3: 各欄位次要屬性; 4: 各欄位資料表欄位名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.AbstractOpenWindowAgent.queryData(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根據設定表TPABYA的設定, 取得開窗後的資料
            </summary>
            <param name="mainConnectionString">多資料庫系統中, TPABYA資料庫所位於的資料庫連結字串</param>
            <param name="tableID">識別欲開窗的資料表代號, 對應TPABYA001欄位</param>
            <param name="serialNum">識別欲開窗的識別碼, 對應TPABYA002欄位</param>
            <param name="param">指定開窗SQL語法中(TPABYA005), 內部參數(@開頭)的欄位名稱</param>
            <param name="whereClause">需增加的限制條件SQL語句, 不包含where</param>
            <param name="parseMode">是否將param所指定的名稱更新TPABYA005的SQL語句. true:取代; false:保留</param>
            <param name="page">頁碼</param>
            <param name="pagesize">每頁筆數</param>
            <returns>ArrayList: 0: DataObjectSet物件; 1: 各欄位顯示名稱; 2: 各欄位主要屬性; 3: 各欄位次要屬性; 4: 各欄位資料表欄位名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.OpenWindowClientAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.OpenWindowClientAgent.queryData(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根據設定表TPABYA的設定, 取得開窗後的資料
            </summary>
            <param name="mainConnectionString">多資料庫系統中, TPABYA資料庫所位於的資料庫連結字串</param>
            <param name="tableID">識別欲開窗的資料表代號, 對應TPABYA001欄位</param>
            <param name="serialNum">識別欲開窗的識別碼, 對應TPABYA002欄位</param>
            <param name="param">指定開窗SQL語法中(TPABYA005), 內部參數(@開頭)的欄位名稱</param>
            <param name="whereClause">需增加的限制條件SQL語句, 不包含where</param>
            <param name="parseMode">是否將param所指定的名稱更新TPABYA005的SQL語句. true:取代; false:保留</param>
            <param name="page">頁碼</param>
            <param name="pagesize">每頁筆數</param>
            <returns>ArrayList: 0: DataObjectSet物件; 1: 各欄位顯示名稱; 2: 各欄位主要屬性; 3: 各欄位次要屬性; 4: 各欄位資料表欄位名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.OpenWindowClientAgent.queryData(System.String,System.String,System.String,System.String[0:,0:],System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根據設定表TPABYA的設定, 取得開窗後的資料
            </summary>
            <param name="mainConnectionString">多資料庫系統中, TPABYA資料庫所位於的資料庫連結字串</param>
            <param name="tableID">識別欲開窗的資料表代號, 對應TPABYA001欄位</param>
            <param name="serialNum">識別欲開窗的識別碼, 對應TPABYA002欄位</param>
            <param name="param">指定開窗SQL語法中(TPABYA005), 內部參數(@開頭)的欄位名稱</param>
            <param name="whereClause">需增加的限制條件SQL語句, 不包含where</param>
            <param name="parseMode">是否將param所指定的名稱更新TPABYA005的SQL語句. true:取代; false:保留</param>
            <param name="page">頁碼</param>
            <param name="pagesize">每頁筆數</param>
            <returns>ArrayList: 0: DataObjectSet物件; 1: 各欄位顯示名稱; 2: 各欄位主要屬性; 3: 各欄位次要屬性; 4: 各欄位資料表欄位名稱</returns>
        </member>
        <member name="T:com.dsc.flow.data.SubmitInfo">
            <summary>
            送單資訊類別
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.LOW">
            <summary>
            重要性: 低
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.MEDIUM">
            <summary>
            重要性: 中
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.HIGH">
            <summary>
            重要性: 高
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.important">
            <summary>
            重要性. 預設為 SubmitInfo.LOW
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.fillerID">
            <summary>
            填表人代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.fillerName">
            <summary>
            填表人姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.fillerOrgID">
            <summary>
            填表單位代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.fillerOrgName">
            <summary>
            填表單位名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.ownerID">
            <summary>
            關係人代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.ownerName">
            <summary>
            關係人姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.ownerOrgID">
            <summary>
            關係人單位代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.ownerOrgName">
            <summary>
            關係人單位名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.submitOrgID">
            <summary>
            流程發起單位代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SubmitInfo.objectGUID">
            <summary>
            資料物件單頭識別號
            </summary>
        </member>
        <member name="T:com.dsc.flow.client.ByPassForm">
            <summary>
            EasyFlow Client端ByPass公用程序元件. 此版本使用ClientEngine呼叫
            </summary>
        </member>
        <member name="M:com.dsc.flow.client.ByPassForm.byPassForm(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            ByPass
            </summary>
            <param name="engine">所使用的ClientEngine</param>
            <param name="FormID">EasyFlow端表單代號</param>
            <param name="SheetNo">EasyFlow端表單單號</param>
            <param name="UserID">抽單人員編</param>
            <param name="FlowNo">EasyFlow端關號</param>
            <param name="BranchNo">EasyFlow端支號</param>
            <param name="SerialNo">EasyFlow端簽核序號</param>
            <returns>一維字串陣列, 包含兩個元素. 若第一個元素值為error, 則第二個元素為錯誤訊息. 否則此兩個元素值皆為success</returns>
        </member>
        <member name="T:com.dsc.kernal.utility.Utility">
            <summary>
            公用工具之類別。此類別所有方法皆為靜態。
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.G_GetTempPath">
            <summary>
            取得Windows暫存目錄
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.G_GetWindowsDir">
            <summary>
            取得Windows安裝目錄, 例如C:\Windows\
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.recoverSpecialString(System.String)">
            <summary>
            還原字串中特殊字元
            </summary>
            <param name="str">替換後字串</param>
            <returns>替換前字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.replaceSpecialString(System.String)">
            <summary>
            替換字串中特殊字元
            </summary>
            <param name="str">替換前字串</param>
            <returns>替換後字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.getGUIDS(System.String)">
            <summary>
            取得流水號
            </summary>
            <param name="conString">資料庫連線字串</param>
            <returns>流水號</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.composeResultXML(System.String)">
            <summary>
            根據輸入的字串回傳一標準xml格式字串。用於所有aspx檔案回傳值。
            </summary>
            <param name="result">欲回傳的字串</param>
            <returns>格式化後的XML</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.composeReturnXML(System.String,System.String,System.String)">
            <summary>
            根據輸入的訊息代碼建立回傳訊息XML格式內容
            </summary>
            <param name="errorCode">訊息代碼</param>
            <param name="errorParam">錯誤參數</param>
            <returns>訊息XML格式回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.checkAbsolutePath(System.String)">
            <summary>
            檢查路徑是否符合絕對路徑格式(以/開頭並且以/結尾)。若路徑檢查發生錯誤，則回傳false。
            </summary>
            <param name="path">欲檢查的路徑</param>
            <returns>true: 合法;false: 不合法</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.checkAbsoluteFile(System.String)">
            <summary>
            檢查檔案路徑是否符合絕對路徑格式(以/開頭並且不以/結尾)。若路徑檢查發生錯誤，則回傳false。
            </summary>
            <param name="path">欲檢查的檔案路徑</param>
            <returns>true: 合法;false: 不合法</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.checkSlash(System.String)">
            <summary>
            檢查輸入的名稱是否包含/字元。若發生檢查錯誤，則回傳false。
            </summary>
            <param name="path">欲檢查的名稱</param>
            <returns>true: 包含;false: 不包含</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.getPathArray(System.String)">
            <summary>
            根據輸入的路徑字串，回傳代表各路徑字元的字串陣列。第一個陣列值必定為/。若路徑不合法，則回傳null。
            </summary>
            <param name="path">路徑字串</param>
            <returns>路徑字元的字串陣列</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.extractPath2(System.String)">
            <summary>
            根據輸入的檔案路徑，切割為路徑部分以及檔名部分。若path以/結尾，則檔名部分為空字串。若無/字元，則路徑部分為空字串。發生錯誤則回傳null。
            此方法針對呼叫WebService 產生之組件名稱加上WebSerice主機IP與Port
            </summary>
            <param name="path">欲切割的檔案路徑</param>
            <returns>string[0]:路徑部分(包含/); string[1]:檔名部分</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.extractPath(System.String)">
            <summary>
            根據輸入的檔案路徑，切割為路徑部分以及檔名部分。若path以/結尾，則檔名部分為空字串。若無/字元，則路徑部分為空字串。發生錯誤則回傳null。
            </summary>
            <param name="path">欲切割的檔案路徑</param>
            <returns>string[0]:路徑部分(包含/); string[1]:檔名部分</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.getFileName(System.String)">
            <summary>
            取得檔案名稱
            </summary>
            <param name="fileName">檔案名稱（可包含路徑）</param>
            <returns>延伸檔名（不包含.字元）</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.getExtName(System.String)">
            <summary>
            取得檔案（可包含路徑）之延伸檔名。發生錯誤回傳null。
            </summary>
            <param name="fileName">檔案名稱（可包含路徑）</param>
            <returns>延伸檔名（不包含.字元）</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.replaceFileExt(System.String,System.String)">
            <summary>
            將延伸檔名替換成replaceName。若發生錯誤回傳原始檔名。
            </summary>
            <param name="fileName">原始檔名</param>
            <param name="replaceName">替換的延伸檔名</param>
            <returns>替換後之檔名</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.Round(System.Decimal,System.Int32)">
            <summary>
            標準四捨五入givenumber到小數點以下第givenr位數. 此方法若位數不足會補零
            </summary>
            <param name="givenumber">要計算的數字</param>
            <param name="givenr">保留位數</param>
            <returns>四捨五入後結果</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.Round(System.Decimal)">
            <summary>
            標準四捨五入givenumber到整數位. 
            </summary>
            <param name="givenumber">要計算的數字</param>
            <returns>四捨五入後結果</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.Round(System.Double)">
            <summary>
            標準四捨五入givenumber到整數位. 
            </summary>
            <param name="givenumber">要計算的數字</param>
            <returns>四捨五入後結果</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.Round(System.Double,System.Int32)">
            <summary>
            標準四捨五入givenumber到小數點以下第givenr位數. 此方法若位數不足會補零
            </summary>
            <param name="givenumber">要計算的數字</param>
            <param name="givenr">保留位數</param>
            <returns>四捨五入後結果</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.Floor(System.Double,System.Int32)">
            <summary>
            無條件捨去givennumber到givenr小數點以下第givenr位數. 此方法位數不足會補零
            </summary>
            <param name="givennumber"></param>
            <param name="givenr"></param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.replaceFileName(System.String,System.String)">
            <summary>
            將oriName的檔案名稱更改為replaceName，保留檔案延伸檔名。發生錯誤回傳null。
            </summary>
            <param name="oriName">原始檔案名稱（可包含路徑）</param>
            <param name="replaceName">欲取代之檔案名稱（不包含延伸檔名）</param>
            <returns>取代後之檔案名稱（包含路徑）</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.writeFileLog(System.String,System.String)">
            <summary>
            將錯誤訊息寫入工作目錄/ErrorLog.txt檔案中
            </summary>
            <param name="workPath">呼叫者工作路徑</param>
            <param name="content">錯誤訊息內容</param>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.writeFileLogTime(System.String,System.String)">
            <summary>
            將錯誤訊息寫入工作目錄/ErrorLog.txt檔案中, 同時會在content訊息前加入時間
            </summary>
            <param name="workPath">呼叫者工作路徑</param>
            <param name="content">錯誤訊息內容</param>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.getResultString(System.String)">
            <summary>
            從composeResultXML中取得結果
            </summary>
            <param name="xmlString">resultXML</param>
            <returns>內容值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.testError(System.String)">
            <summary>
            測試回傳XML字串中是否為錯誤訊息
            </summary>
            <param name="xml">需測試之XML字串</param>
            <returns>true: 為錯誤訊息; false:正常</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.runProgram(System.String,System.String,System.String)">
            <summary>
            執行外部程式. 執行時此方法會等待結果
            </summary>
            <param name="programpath">要執行的程式路徑</param>
            <param name="workingdir">指定的工作目錄</param>
            <param name="arguments">命令列參數</param>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.runProgramSync(System.String,System.String,System.String)">
            <summary>
            執行外部程式. 執行時此方法不會等待結果, 立刻返回
            </summary>
            <param name="programpath">要執行的程式路徑</param>
            <param name="workingdir">指定的工作目錄</param>
            <param name="arguments">命令列參數</param>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.checkID(System.String,System.Boolean)">
            <summary>
            身分證字號檢查函式
            </summary>
            <param name="id">欲檢查的身分證字號</param>
            <param name="isMan">性別</param>
            <returns>true: 合法; false: 不合法</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.UrlEncode(System.String)">
            <summary>
            將輸入字串以URLEncode方式編碼
            </summary>
            <param name="str">要編碼的字串</param>
            <returns>編碼後的字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.UrlDecode(System.String)">
            <summary>
            將輸入的URL編碼字串還原
            </summary>
            <param name="str">已編碼的URL字串</param>
            <returns>還原後的原始字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.isWildcardMatch(System.String,System.String,System.Boolean)">
            <summary>
            比對萬用字元
            </summary>
            <param name="compStr">要被比對的字串</param>
            <param name="pattern">包含萬用字元的字串</param>
            <param name="isIgnoreCase">true: 不分大小寫; false:區分大小寫</param>
            <returns>true: 符合; false: 不符合</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.isRegularMatch(System.String,System.String,System.Boolean)">
            <summary>
            正規式比對
            </summary>
            <param name="compStr">要被比對的字串</param>
            <param name="pattern">正規式字串</param>
            <param name="isIgnoreCase">true: 不分大小寫; false:區分大小寫</param>
            <returns>true: 符合; false: 不符合</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.getClasses_Old(System.String,System.String)">
            <summary>
            產生類別實體之方法(舊方法)
            </summary>
            <param name="assemblyName">組件名稱</param>
            <param name="childClassString">子類別名稱空間</param>
            <returns>產生之物件實體</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.getClasses(System.String,System.String)">
            <summary>
            產生類別實體之方法
            </summary>
            <param name="assemblyName">組件名稱</param>
            <param name="childClassString">子類別名稱空間</param>
            <returns>產生之物件實體</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.MarkFileToDeleteOnReboot(System.String)">
            <summary>
            將檔案標記成為重開機後刪除
            </summary>
            <param name="fileName">要刪除的檔案</param>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.getLocale">
            <summary>
            取得目前語系. 若com.dll是在Web下運作, 則由Session["Locale"]取得, 若否, 則由GlobalCache("Locale")取得. 若兩者都沒有, 回傳zh_TW
            </summary>
            <returns>語系代號</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.filter(System.String)">
            <summary>
            取得參數，加以過濾有SQL Injection疑慮的字元符號以及T-SQL關鍵字
            </summary>
            <returns>過濾後的字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.Sanitize(System.String)">
            <summary>
            以白名單方式修正HTML_INPUT
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.URLParameterEncode(System.String)">
            <summary>
            將URL參數編碼 ; 再放到網頁內容中 ; 防止XSS
            </summary>
            <param name="rawURL">URL</param>
            <returns>URL with HTML Encode Parameter</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Utility.CheckCrossSiteScripting(System.String)">
            <summary>
            將有CrossSiteScripting疑慮的字串過濾
            </summary>
            <param name="str">疑慮的字串</param>
            <returns></returns>
        </member>
        <member name="T:com.dsc.kernal.mail.VirtualSMTP">
            <summary>
            以匿名虛擬SMTP作為寄發EMAIL的類別
            </summary>
        </member>
        <member name="T:com.dsc.kernal.mail.AbstractMailUtility">
            <summary>
            寄發Email的抽象類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.mail.AbstractMailUtility.sendMail(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            以一般文字模式寄發Email
            </summary>
            <param name="userID">收件者代號</param>
            <param name="SMTP">SMTP主機</param>
            <param name="TO">收件者EMAIL</param>
            <param name="FROM">寄件者EMAIL</param>
            <param name="SUBJECT">寄件主旨</param>
            <param name="BODY">本文</param>
        </member>
        <member name="M:com.dsc.kernal.mail.AbstractMailUtility.sendMailHTML(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            以HTML模式寄發Email
            </summary>
            <param name="userID">收件者代號</param>
            <param name="SMTP">SMTP主機</param>
            <param name="TO">收件者EMAIL</param>
            <param name="CC">附件EMAIL</param>
            <param name="FROM">寄件者EMAIL</param>
            <param name="SUBJECT">寄件主旨</param>
            <param name="BODY">本文</param>
        </member>
        <member name="M:com.dsc.kernal.mail.AbstractMailUtility.sendMailHTMLAttach(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            以HTML模式寄發Email, 且寄發附件
            </summary>
            <param name="userID">收件者代號</param>
            <param name="SMTP">SMTP主機</param>
            <param name="TO">收件者EMAIL</param>
            <param name="CC">附件EMAIL</param>
            <param name="FROM">寄件者EMAIL</param>
            <param name="SUBJECT">寄件主旨</param>
            <param name="BODY">本文</param>
            <param name="attachFilePath">附件檔案位置</param>
        </member>
        <member name="M:com.dsc.kernal.mail.VirtualSMTP.sendMail(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            以一般文字模式寄發Email
            </summary>
            <param name="userID">收件者代號</param>
            <param name="SMTP">SMTP主機</param>
            <param name="TO">收件者EMAIL</param>
            <param name="FROM">寄件者EMAIL</param>
            <param name="SUBJECT">寄件主旨</param>
            <param name="BODY">本文</param>
        </member>
        <member name="M:com.dsc.kernal.mail.VirtualSMTP.sendMailHTML(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            以HTML模式寄發Email
            </summary>
            <param name="userID">收件者代號</param>
            <param name="SMTP">SMTP主機</param>
            <param name="TO">收件者EMAIL</param>
            <param name="CC">附件EMAIL</param>
            <param name="FROM">寄件者EMAIL</param>
            <param name="SUBJECT">寄件主旨</param>
            <param name="BODY">本文</param>
        </member>
        <member name="M:com.dsc.kernal.mail.VirtualSMTP.sendMailHTMLAttach(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            以HTML模式寄發Email, 且寄發附件
            </summary>
            <param name="userID">收件者代號</param>
            <param name="SMTP">SMTP主機</param>
            <param name="TO">收件者EMAIL</param>
            <param name="CC">附件EMAIL</param>
            <param name="FROM">寄件者EMAIL</param>
            <param name="SUBJECT">寄件主旨</param>
            <param name="BODY">本文</param>
            <param name="attachFilePath">附件檔案位置</param>
        </member>
        <member name="T:com.dsc.kernal.ftp.Level">
            <summary>  
            Simple debug level class. Uses the same interface (but
            not implementation) as log4net, so that the debug
            classes could be easily replaced by log4net 
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.Level.OFF">
            <summary> Off level</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Level.FATAL">
            <summary> Fatal level</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Level.ERROR">
            <summary> OFF level</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Level.WARN">
            <summary> Warn level</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Level.INFO">
            <summary> Info level</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Level.DEBUG">
            <summary> Debug level</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Level.ALL">
            <summary> All level</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Level.level">
            <summary> The level's integer value</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Level.levelStr">
            <summary> The level's string representation</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.Level.#ctor(System.Int32,System.String)">
            <summary> 
            Private constructor so no-one outside the class can
            create any more instances
            </summary>
            <param name="level">    level to set this instance at
            </param>
            <param name="levelStr">   string representation
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Level.GetLevel">
            <summary> 
            Get integer log level
            </summary>
            <returns> log level
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.Level.IsGreaterOrEqual(com.dsc.kernal.ftp.Level)">
            <summary> 
            Is this level greater or equal to the supplied level
            </summary>
            <param name="l">     level to test against
            </param>
            <returns>  true if greater or equal to, false if less than
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.Level.GetLevel(System.String)">
            <summary> 
            Get level from supplied string
            </summary>
            <param name="level">level as a string
            </param>
            <returns> level object or null if not found
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.Level.ToString">
            <summary> 
            String representation
            </summary>
            <returns> string
            </returns>
        </member>
        <member name="T:com.dsc.kernal.databean.DataObject">
            <summary>
            資料物件基底類別. 必須建立不同資料物件並繼承此類別, 並在建構子中設定各項參數.
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.FILEVERSION">
            <summary>
            版號，預設為 2.0.0.0
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.dataObjectRow">
            <summary>
            儲存資料用資料列物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.errorFields">
            <summary>
            儲存錯誤欄位資訊的陣列
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.classString">
            <summary>
            完整類別名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.parentDos">
            <summary>
            所屬的DataObjectSet參照
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.data">
            <summary>
            儲存資料內容的物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.deleteFlag">
            <summary>
            刪除旗標
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.dirtyFlag">
            <summary>
            已被修改旗標
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.clientNewFlag">
            <summary>
            識別是否由代理器自行建立之物件, 或者由系統端自行建立
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.m_child">
            <summary>
            存放單身的DataObjectSet物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.queryStr">
            <summary>
            讀取欄位內容的SQL COMMAND
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.dataField">
             <summary>
            欄位名稱陣列
             </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.keyField">
             <summary>
            不重複欄位名稱
             </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.identityField">
             <summary>
            識別欄位名稱
             </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.nonUpdateField">
             <summary>
            不被update, insert欄位名稱, 用於被join進來的欄位
             </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.allowEmptyField">
             <summary>
            允許空白欄位名稱
             </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.isCheckTimeStamp">
             <summary>
            是否檢查TimeStamp
             </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.fieldDefinition">
            <summary>
            欄位描述，[i,0]:欄位型態; [i,1]:欄位長度; [i,2]:欄位預設值; [i,3]:欄位顯示名稱; [i,4]:定義欄位內容對應顯示值
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.timeStamp">
            <summary>
            此資料物件的time stamp
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.tableName">
            <summary>
            此資料物件所代表的資料表名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObject.Tag">
            <summary>
            可放置指向參考物件的指標
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.#ctor">
            <summary>
            建構子, 初始化各項旗標
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.resetFlag">
            <summary>
            重新設定旗標, 包含: 將刪除旗標設定為否, 已修改旗標設定為否, 物件建立方式設定為由代理器建立
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.unDelete">
            <summary>
            不刪除此資料物件. 此方法僅設定此物件的刪除旗標
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.clone">
            <summary>
            複製此資料物件並傳回
            </summary>
            <returns>複製後的新資料物件</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.restore(com.dsc.kernal.databean.DataObject)">
            <summary>
            將dot資料物件的內容還原至此資料物件中, 但不包含各項旗標以及設定
            </summary>
            <param name="dot">欲還原之資料物件</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.getChild(System.String)">
            <summary>
            取得單身的資料物件集DataObjectSet物件
            </summary>
            <param name="childName">識別單身的字串參數</param>
            <returns>代表該單身的DataObjectSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.setChild(System.String,com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將單身資料物件DataObjectSet設定至此資料物件中
            </summary>
            <param name="childName">識別此單身DataObjectSet的字串參數</param>
            <param name="childs">代表單身物件的DataObjectSet</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.getDisplayName(System.String)">
            <summary>
            取得fieldName欄位的顯示名稱
            </summary>
            <param name="fieldName">欄位名稱</param>
            <returns>顯示名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.getDisplayName(System.Int32)">
            <summary>
            根據欄位Index取得顯示名稱
            </summary>
            <param name="index">欄位Index</param>
            <returns>顯示名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.getData(System.String)">
            <summary>
            根據欄位名稱取得欄位值
            </summary>
            <param name="fieldName">欄位名稱</param>
            <returns>欄位值</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.getShowData(System.String)">
            <summary>
            取得FieldName欄位的顯示內容值. 回傳的值預設為資料欄位實際內容, 但若資料物件繼承類別有定義對應顯示值, 則回傳顯示值
            </summary>
            <param name="fieldName">欄位名稱</param>
            <returns>顯示內容. 若欄位不存在回傳null</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.setDataWithoutUpdateDR(System.String,System.String,System.Int32)">
            <summary>
            此方法為系統內部方法，目的在於初次從資料庫取得資料後建立目前物件內容，但是不執行更新dataRow。此方法相同於
            setData, 但是不呼叫updateDataRow。
            另外，由於初次從DB進行SQL讀取，所以欄位名稱順序會與定義一致，所以可以直接傳入indexs，不需尋找。
            </summary>
            <param name="fieldName">欄位名稱</param>
            <param name="fieldValue">欄位內容</param>
            <param name="indexs">此欄位位於第幾個index</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.setData(System.String,System.String)">
            <summary>
            設定欄位內容值. 此方法會轉換特殊字元
            </summary>
            <param name="fieldName">欄位名稱</param>
            <param name="fieldValue">欄位內容</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.setRawDataWithoutTrim(System.String,System.String)">
            <summary>
            設定欄位內容值. 此方法不會轉換特殊字元並不自動消除空白字元
            </summary>
            <param name="fieldName">欄位名稱</param>
            <param name="fieldValue">欄位內容</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.setRawData(System.String,System.String)">
            <summary>
            設定欄位內容值. 此方法不會轉換特殊字元
            </summary>
            <param name="fieldName">欄位名稱</param>
            <param name="fieldValue">欄位內容</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.recoverSpecialChar(System.String)">
            <summary>
            轉換特殊字元
            </summary>
            <param name="oldvalue">原始內容</param>
            <returns>轉換後內容</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.replaceSpecialChar(System.String)">
            <summary>
            還原特殊字元
            </summary>
            <param name="oldvalue">轉換後內容</param>
            <returns>原始字串</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.delete">
            <summary>
            刪除此資料物件. 此方法僅設定此物件的刪除旗標
            </summary>
            <returns>永遠為true</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.isDirty">
            <summary>
            查詢此物件內容是否已修改
            </summary>
            <returns>true: 已修改; false:未修改</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.setClientNewFlag(System.Boolean)">
            <summary>
            設定此物件建立方式旗標 
            </summary>
            <param name="flag">true:由系統建立; false: 由代理器建立</param>
            <returns>永遠為true</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.getClientNewFlag">
            <summary>
            取得此物件建立方式旗標
            </summary>
            <returns>true:由系統建立; false: 由代理器建立</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.isDelete">
            <summary>
            取得此物件是否刪除
            </summary>
            <returns>true: 已標記刪除; false: 未刪除</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.initData">
            <summary>
            初始化各項設定. 在建立各自的資料物件時, 建構子必須呼叫此方法
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.initData(System.Boolean)">
            <summary>
            初始化各項設定. 在建立各自的資料物件時, 建構子必須呼叫此方法
            </summary>
            <param name="isLoadLanguage">是否載入多語系設定</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.loadLanguage">
            <summary>
            載入多語系設定至顯示名稱中
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.checkData">
            <summary>
            檢查此資料物件內容是否合法. 所檢查的項目為: 資料型態; 資料長度; 是否允許空白
            </summary>
            <returns>所檢查出的錯誤描述, 若完全合法則回傳零長度字串</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.getHashtable">
            <summary>
            取得代表此物件內容值得Hashtable. 此方法為系統內部使用, 正確存取方法應使用getData, 或是在繼承資料物件中建立屬性
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.setHashtable(System.Collections.Hashtable)">
            <summary>
            設定代表此物件內容的HashTale. 此方法為系統內部使用, 正確存取方法應使用setData, 或是在繼承資料物件中建立屬性
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.saveXML">
            <summary>
            序列化此資料物件, 包含單身的資料物件. 此方法為深層序列化
            </summary>
            <returns>序列化後的XML字串</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.loadXML(System.String)">
            <summary>
            反序列化物件.
            </summary>
            <param name="xml">代表此物件的序列化XML字串</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.loadXML2(System.String)">
            <summary>
            反序列化物件.僅由內部使用(開窗)
            </summary>
            <param name="xml">代表此物件的序列化XML字串</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.saveXML3">
            <summary>
            序列化此資料物件, 包含單身的資料物件. 此方法為深層序列化(保留物件旗標)
            </summary>
            <returns>序列化後的XML字串</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.loadXML3(System.String)">
            <summary>
            反序列化物件.
            </summary>
            <param name="xml">代表此物件的序列化XML字串</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.loadFileSchema(System.String)">
            <summary>
            根據完整類別名稱由GlobalCache中DataObjectFolder所指定的xml檔案取得資料物件結構
            </summary>
            <param name="childClassString">完整類別名稱</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObject.loadSchema(System.String)">
            <summary>
            由xml內容建立資料物件結構
            </summary>
            <param name="xml">資料物件結構xml</param>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObject.typeField">
            <summary>
            欄位型態, 參考com.dsc.kernal.databean.DataObjectConstants類別
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObject.lengthField">
            <summary>
            欄位長度
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObject.defaultValue">
            <summary>
            預設值
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObject.displayName">
            <summary>
            欄位顯示名稱
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObject.child">
            <summary>
            單身的DataObjectSet
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObject.INSERTUSER">
            <summary>
            此物件建立者GUID屬性
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObject.INSERTTIME">
            <summary>
            此物件建立時間屬性
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObject.MODIFYUSER">
            <summary>
            此物件修改者GUID屬性
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObject.MODIFYTIME">
            <summary>
            此物件修改時間屬性
            </summary>
        </member>
        <member name="T:com.dsc.kernal.batch.JobClass">
            <summary>
            Job類別的基底類別. 所有可註冊到Queue伺服器的Job Class都需繼承此類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.Created">
            <summary>
            Job狀態: 已建立
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.Running">
            <summary>
            Job狀態: 執行中
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.SaveParameter">
            <summary>
            Job狀態: 已儲存參數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.Completed">
            <summary>
            Job狀態: 已完成
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.Error">
            <summary>
            Job狀態: 發生例外
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.runThread">
            <summary>
            工作執行Thread
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.parameter">
            <summary>
            已解析參數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.oriParameter">
            <summary>
            未解析參數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.JobID">
            <summary>
            工作唯一識別碼
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.ServicePath">
            <summary>
            服務路徑
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.JobStatus">
            <summary>
            工作狀態. 0:已建立; 1:已儲存參數; 2:執行中; 3:已完成; 4:異常
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.runTimes">
            <summary>
            執行次數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClass.dependency">
            <summary>
            此JobClass所相依的Job
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.getRunTimes">
            <summary>
            取得此工作執行次數
            </summary>
            <returns>執行次數</returns>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.setDependencies(System.String)">
            <summary>
            設定此工作相依的工作識別碼
            </summary>
            <param name="jID">相依的工作識別碼</param>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.getDependency">
            <summary>
            取得此工作相依的識別碼
            </summary>
            <returns>相依的工作識別碼</returns>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.setServicePath(System.String)">
            <summary>
            設定服務工作路徑
            </summary>
            <param name="tServicePath"></param>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.destroy">
            <summary>
            摧毀此Job
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.getJobID">
            <summary>
            回傳此Job的唯一識別號
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.setJobID(System.String)">
            <summary>
            設定/還原Job唯一識別碼
            </summary>
            <param name="jobID"></param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.setParameter(System.String)">
            <summary>
            設定此Job的參數
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.saveStatus">
            <summary>
            儲存(序列化)參數以及狀態
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.getStatusPath">
            <summary>
            取得serialized檔案路徑
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.restoreStatus">
            <summary>
            取得(反序列化)參數以及狀態
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.getJobStatus">
            <summary>
            取得JOB執行的狀態碼
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.start">
            <summary>
            提供給Service執行的外部命令
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.startMethod">
            <summary>
            Thread的實際執行方法
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.run(System.String[])">
            <summary>
            Job實際執行工作內容
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClass.runException">
            <summary>
            例外發生的錯誤處理程序
            </summary>
        </member>
        <member name="T:com.dsc.flow.data.BackActivity">
            <summary>
            退回重辦時取得已處理完的活動內容
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.BackActivity.processID">
            <summary>
            流程定義代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.BackActivity.processName">
            <summary>
            流程定義名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.BackActivity.actID">
            <summary>
            活動代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.BackActivity.actName">
            <summary>
            活動名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.BackActivity.processorID">
            <summary>
            處理人代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.BackActivity.processorName">
            <summary>
            處理人姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.BackActivity.executiveResult">
            <summary>
            簽核結果
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.BackActivity.executiveComment">
            <summary>
            簽核意見
            </summary>
        </member>
        <member name="T:com.dsc.kernal.utility.OleDbProcessor">
            <summary>
            存取資料庫基本物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.OleDbProcessor.cons">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.OleDbProcessor.trans">
            <summary>
            Transaction物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.#ctor">
            <summary>
            預設建構子，請使用包含連線參數之建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.#ctor(System.Data.OleDb.OleDbConnection)">
            <summary>
            建構子, 傳入此類別所使用的OleDbConnection
            </summary>
            <param name="cons">OleDbConnection物件</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.#ctor(System.String)">
            <summary>
            傳入此類別所使用的connString
            </summary>
            <param name="conString">資料庫連線字串</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟transaction
            </summary>
            <param name="isolevel">方式</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.Finalize">
            <summary>
            解構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.Close">
            <summary>
            關閉資料庫連線
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.getDataAdapter(System.String)">
            <summary>
            取得OleDbDataAdapter
            </summary>
            <param name="OleDbString">查詢的OleDb字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.getDataSet(System.Data.OleDb.OleDbDataAdapter,System.String)">
            <summary>
            根據OleDbDataAdapter取得DataSet
            </summary>
            <param name="adapter">OleDbDataAdapter物件</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.getDataSet(System.String,System.String,System.Int32)">
            <summary>
            根據傳入的OleDb字串取得DataSet
            </summary>
            <param name="OleDbString">OleDb字串</param>
            <param name="tableName">DataSet中資料表之名稱</param>
            <param name="RowCount">限制筆數</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.getDataSet(System.String,System.String)">
            <summary>
            根據傳入的OleDb字串取得DataSet
            </summary>
            <param name="OleDbString">OleDb字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.updateDataSet(System.Data.DataSet)">
            <summary>
            更新DataSet資料至OleDb資料庫
            </summary>
            <param name="dataSet">要更新的DataSet</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.getDataAdapter(System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            取得OleDbDataAdapter
            </summary>
            <param name="OleDbString">查詢的OleDb字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據傳入的OleDb字串取得DataSet
            </summary>
            <param name="OleDbString">OleDb字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.updateDataSet(System.Data.OleDb.OleDbDataAdapter,System.Data.DataSet,System.String)">
            <summary>
            將DataSet更新回資料庫
            </summary>
            <param name="adapter">OleDbDataAdapter物件</param>
            <param name="dataSet">DataSet物件</param>
            <param name="tableName">更新之DataSet中資料表名稱。null表示全部更新</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.getDataReader(System.String)">
            <summary>
            根據OleDb字串取得OleDbDataReader物件
            </summary>
            <param name="OleDbString">OleDb字串</param>
            <returns>OleDbDataReader物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.executeScalar(System.String)">
            <summary>
            根據OleDb字串取得單一數值資料
            </summary>
            <param name="OleDbString">OleDb字串</param>
            <returns>單一回傳物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.executeSQL(System.String)">
            <summary>
            直接執行OleDb字串
            </summary>
            <param name="OleDbString">欲執行之OleDb字串</param>
            <returns>受影響之資料列數目</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.isEstablished">
            <summary>
            檢查資料庫連線物件是否建立成功
            </summary>
            <returns>true:建立成功; false:建立失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.setConnection(System.Data.OleDb.OleDbConnection)">
            <summary>
            設定此類別所使用的OleDbConnection物件
            </summary>
            <param name="connection">OleDbConnection物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.getConnection">
            <summary>
            取得資料庫連線物件
            </summary>
            <returns>資料庫連線物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OleDbProcessor.exec(System.String)">
            <summary>
            執行StoreProcedure. 回傳DataSet, 回傳值以及Output參數
            </summary>
            <param name="cmdText">要執行的StoreProcedure. 可包含回傳值, Output參數. 所有參數可不需事先宣告</param>
            <returns>ArrayList. 0:DataSet; 1:回傳值; 2:Output參數的Hashtable</returns>
        </member>
        <member name="T:com.dsc.kernal.utility.MailProcessor">
            <summary>
            關於寄發信件的公用類別。此類別皆為靜態函式。
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.MailProcessor.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.MailProcessor.sendMail(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            利用SMTP協定寄發信件
            </summary>
            <param name="SMTP">SMTP伺服器位置</param>
            <param name="TO">收件人(利用";" (分號)分隔</param>
            <param name="FROM">寄件人</param>
            <param name="SUBJECT">主題</param>
            <param name="BODY">內文</param>
        </member>
        <member name="M:com.dsc.kernal.utility.MailProcessor.sendMailHTML(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            利用SMTP協定寄發信件
            </summary>
            <param name="SMTP">SMTP伺服器位置</param>
            <param name="TO">收件人(利用";" (分號)分隔</param>
            <param name="CC">副本(利用";" (分號)分隔</param>
            <param name="FROM">寄件人</param>
            <param name="SUBJECT">主題</param>
            <param name="BODY">內文</param>
        </member>
        <member name="M:com.dsc.kernal.utility.MailProcessor.sendMailHTMLAttach(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            利用SMTP協定寄發信件, 並可傳送附件
            </summary>
            <param name="SMTP">SMTP伺服器位置</param>
            <param name="TO">收件人(利用";" (分號)分隔</param>
            <param name="CC">副本(利用";" (分號)分隔</param>
            <param name="FROM">寄件人</param>
            <param name="SUBJECT">主題</param>
            <param name="BODY">內文</param>
            <param name="attachFilePath">單一附件路徑</param>
        </member>
        <member name="M:com.dsc.kernal.utility.MailProcessor.sendClientEmail(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Client端寄發Email公用程式
            </summary>
            <param name="connectString">Server連線字串</param>
            <param name="from">寄信者</param>
            <param name="to">收件者</param>
            <param name="cc">副本</param>
            <param name="subject">主旨</param>
            <param name="body">內容</param>
        </member>
        <member name="T:com.dsc.kernal.security.AbstractSecurity">
            <summary>
            加密物件基礎類別. 此類別不可建立實體物件, 為各驗證方式之繼承基底類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.security.AbstractSecurity.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.security.AbstractSecurity.getPublicKey">
            <summary>
            取得加密鑰匙或者公開金鑰
            </summary>
            <returns>金鑰內容</returns>
        </member>
        <member name="M:com.dsc.kernal.security.AbstractSecurity.decrypt(System.String,System.Byte[])">
            <summary>
            解密資料. 此方法必須實作
            </summary>
            <param name="key">解密鑰匙.</param>
            <param name="orivalue">密碼文</param>
            <returns>明碼文</returns>
        </member>
        <member name="M:com.dsc.kernal.security.AbstractSecurity.encrypt(System.String,System.Byte[])">
            <summary>
            加密資料. 此方法必須實作
            </summary>
            <param name="key">加密鑰匙</param>
            <param name="orivalue">明碼文</param>
            <returns>密碼文</returns>
        </member>
        <member name="M:com.dsc.kernal.security.AbstractSecurity.decrypt(System.String,System.String)">
            <summary>
            解密資料
            </summary>
            <param name="key">解密鑰匙.</param>
            <param name="orivalue">密碼文</param>
            <returns>明碼文</returns>
        </member>
        <member name="M:com.dsc.kernal.security.AbstractSecurity.encrypt(System.String,System.String)">
            <summary>
            加密資料
            </summary>
            <param name="key">加密鑰匙</param>
            <param name="orivalue">明碼文</param>
            <returns>密碼文</returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.StandardOutputAppender">
            <summary>  Appends log statements to standard output
            
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="T:com.dsc.kernal.ftp.Appender">
            <summary>  Interface for classes that output log
            statements 
            
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="M:com.dsc.kernal.ftp.Appender.Close">
            <summary> Close this appender</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.Appender.Log(System.String)">
            <summary> Log a message
            
            </summary>
            <param name="msg"> message to log
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Appender.Log(System.Exception)">
            <summary> 
            Log a stack trace
            </summary>
            <param name="t"> throwable object
            </param>
        </member>
        <member name="F:com.dsc.kernal.ftp.StandardOutputAppender.log">
            <summary> 
            Destination
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardOutputAppender.#ctor">
            <summary> 
            Constructor
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardOutputAppender.Log(System.String)">
            <summary> 
            Log a message
            </summary>
            <param name="msg"> message to log
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardOutputAppender.Log(System.Exception)">
            <summary> 
            Log a stack trace
            </summary>
            <param name="t"> throwable object
            </param>		
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardOutputAppender.Close">
            <summary> 
            Close this appender
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPFileFactory">
            <summary>  
            Factory for creating FTPFile objects
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.WINDOWS_STR">
            <summary> Windows server comparison string</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.UNIX_STR">
            <summary> UNIX server comparison string</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.VMS_STR">
            <summary> VMS server comparison string</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.log">
            <summary> Logging object</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.system">
            <summary> SYST string</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.windows">
            <summary> Cached windows parser</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.unix">
            <summary> Cached unix parser</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.vms">
            <summary> Cached unix parser</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.parser">
            <summary> Does the parsing work</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.rotateParsersOnFail">
            <summary> Rotate parsers when a ParseException is thrown?</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.usingVMS">
            <summary>True if using VMS parser</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileFactory.parserCulture">
            <summary>Culture used for parsing file details</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFileFactory.#ctor(System.String)">
            <summary> Constructor
            
            </summary>
            <param name="system">   SYST string
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFileFactory.#ctor(com.dsc.kernal.ftp.FTPFileParser)">
            <summary> Constructor. User supplied parser. Note that parser
            rotation (in case of a ParseException) is disabled if
            a parser is explicitly supplied
            
            </summary>
            <param name="parser">  the parser to use
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFileFactory.SetParser(System.String)">
            <summary> Set the remote server type
            
            </summary>
            <param name="system">   SYST string
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFileFactory.Parse(System.String[])">
            <summary> Parse an array of raw file information returned from the
            FTP server
            
            </summary>
            <param name="files">    array of strings
            </param>
            <returns> array of FTPFile objects
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFileFactory.RotateParsers">
            <summary> Swap from one parser to the other. We can just check
            object references
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFileFactory.GetSystem">
            <summary> 
            Get the SYST string
            </summary>
            <returns> the system string.
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileFactory.ParsingCulture">
            <summary>
            Get/set the culture info for parsing
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPConnection">
            <summary>Provides FTP client functionality.</summary>
            <remarks>
            <p>
            <c>FTPClient</c> provides FTP client functionality.  It is a .NET Component which
            may be used in visual designers, or it may be used as a conventional class.
            </p>
            <p>
            <b>Constructing and connecting: </b>
            There are two approaches to constructing an <c>FTPClient</c>.  In one, the domain-name
            of the FTP server is provided in the constructor and the FTP client
            connects automatically.  In the other, no arguments are provided and the FTP client does
            not connect until the <see cref="M:com.dsc.kernal.ftp.FTPConnection.Connect"/> method is called.
            </p>
            <p>
            <b>Logging in: </b>
            Logging in may be done in two ways: 
            (1) by setting the properties <see cref="P:com.dsc.kernal.ftp.FTPConnection.UserName"/> and <see cref="P:com.dsc.kernal.ftp.FTPConnection.Password"/>, 
            and then calling the parameterless <see cref="M:com.dsc.kernal.ftp.FTPConnection.Login"/> method;
            (2) by first calling <see cref="M:com.dsc.kernal.ftp.FTPConnection.SendUserName(System.String)"/> and then calling <see cref="M:com.dsc.kernal.ftp.FTPConnection.SendPassword(System.String)"/>.
            </p>
            <p>
            <b>Directory listings: </b>
            Directory listings may be obtained in two basic forms: 
            (1) The method <see cref="M:com.dsc.kernal.ftp.FTPConnection.GetFiles(System.String)"/> and its siblings return string containing the file-name 
            only or, if the <c>full</c> flag of some of the methods is set, the raw listing string, which
            differs from one server to the other.
            (2) The method <see cref="M:com.dsc.kernal.ftp.FTPConnection.GetFileInfos(System.String)"/> return <see cref="T:com.dsc.kernal.ftp.FTPFile"/> objects which
            contain information about the file including name, size, and date.
            </p>
            <p>
            <b>Changing working directory: </b>
            The server maintains a "working directory" for each session.  The path of the current
            working directory may be set and retrieved using the <see cref="M:com.dsc.kernal.ftp.FTPConnection.GetWorkingDirectory"/> method.
            Changing directory to a subdirectory of the current working directory may be done using
            the <see cref="M:com.dsc.kernal.ftp.FTPConnection.ChangeWorkingDirectory(System.String)"/> method.  Changing up to a parent directory is done
            using the <see cref="M:com.dsc.kernal.ftp.FTPConnection.ChangeWorkingDirectoryUp"/> method.
            </p>
            <p>
            <b>Getting and putting files: </b>
            There are many different methods for getting (downloading) files from the server 
            and putting (uploading) them to the server.  Data may be source from or saved to:
            (1) files (<see cref="M:com.dsc.kernal.ftp.FTPConnection.DownloadFile(System.String,System.String)"/> and <see cref="M:com.dsc.kernal.ftp.FTPConnection.UploadFile(System.String,System.String)"/>; 
            (2) streams (<see cref="M:com.dsc.kernal.ftp.FTPConnection.DownloadStream(System.IO.Stream,System.String)"/> and <see cref="M:com.dsc.kernal.ftp.FTPConnection.UploadStream(System.IO.Stream,System.String)"/>); and
            (3) byte-arrays (<see cref="M:com.dsc.kernal.ftp.FTPConnection.DownloadByteArray(System.String)"/> and <see cref="M:com.dsc.kernal.ftp.FTPConnection.UploadByteArray(System.Byte[],System.String)"/>.
            </p>
            <p>
            <b>Overview of the FTP protocol: </b> FTP is defined in the Request For Comments 959 document (RFC 959), 
            which can be obtained from the Internet Engineering Task Force.
            </p>
            <p>
            FTP requires a client program (FTP client) and a server program (FTP server). The FTP client 
            can fetch files and file details from the server, and also upload files to the server. 
            The server is generally loginPassword protected.
            </p>
            <p>
            FTP commands are initiated by the FTP client, which opens a TCP connection called the control 
            connection to the server. This control connection is used for the entire duration of a 
            session between the FTP client and server. A session typically begins when the FTP client logs in, 
            and ends when the quit command is sent to the server. The control connection is used 
            exclusively for sending FTP commands and reading server replies - it is never used to 
            transfer files.
            </p>
            <p>
            Transient TCP connections called data connections are set up whenever data (normally a 
            file's contents) is to be transferred. For example, the FTP client issues a command to 
            retrieve a file from the server via the control channel. A data connection is then 
            established, and the file's contents transferred to the FTP client across it. Once the 
            transfer is complete, the data connection is closed. Meanwhile, the control connection 
            is maintained.
            </p>
            <p>
            <b>Compliance: </b> <see cref="T:com.dsc.kernal.ftp.FTPClient"/> implements
            FTP as defined by RFC959.  It attempts to match the standard as closely as possible, 
            but due to variation in the level of compliance of the numerous FTP servers available,
            it sometime allows servers some tolerance.  If the property <see cref="P:com.dsc.kernal.ftp.FTPConnection.StrictReturnCodes"/>
            is set to <c>false</c> then <see cref="T:com.dsc.kernal.ftp.FTPClient"/> is more tolerant of non-compliant servers.
            </p>
            </remarks>
            <author>Hans Andersen</author>
            <version>$Revision: 3 $</version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.log">
            <summary> Logging object</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.ftpClient">
            <summary>Instanc of <c>FTPClient</c>.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.loginUserName">
            <summary>User-name to log in with.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.loginPassword">
            <summary>Password to log in with.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.fileTransferType">
            <summary>Record of the transfer type - make the default ASCII.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.useAutoLogin">
            <summary>Determines if the components will automatically log in upon connection.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.areEventsEnabled">
            <summary>Determines if events will be fired.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.isTransferringData">
            <summary>Determines if events will be fired.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.mainWindow">
            <summary>Reference to the main window.</summary>
            <remarks>
            This reference is used for invoking delegates such that they can perform GUI-related actions.
            </remarks>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.queriedMainWindow">
            <summary>Flag used to remember whether or not we've tried to find the main window yet.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.currentFileSize">
            <summary>Size of file currently being transferred.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnection.isTransferringMultiple">
            <summary>Flag indicating whether or not we're doing a multiple file transfer.</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Creates an instance of FTPConnection within the given container.
            </summary>
            <param name="container">Container to place the new instance in.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.#ctor">
            <summary>
            Default constructor for FTPConnection.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.#ctor(com.dsc.kernal.ftp.FTPClient)">
            <summary>
            Create an FTPConnection using the given FTPClient.
            </summary>
            <param name="ftpClient"><see cref="T:com.dsc.kernal.ftp.FTPClient"/>-instance to use.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.Dispose(System.Boolean)">
            <summary>Disconnect from the server (if connected).</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.Connect">
            <summary>Connect to the FTP server and (if <see cref="P:com.dsc.kernal.ftp.FTPConnection.AutoLogin"/> is set) log into the server.</summary>
            <remarks>
            <p>The <see cref="P:com.dsc.kernal.ftp.FTPConnection.ServerAddress"/> property must be set prior to calling this method.</p>
            <p>If <see cref="P:com.dsc.kernal.ftp.FTPConnection.AutoLogin"/> is <c>true</c> then the component will attempt to
            log in immediately after successfully connecting.</p>
            <p>This method will throw an <c>FTPException</c> if the component is already connected to the server.</p>
            </remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.PerformAutoLogin">
            <summary>Attempt to log into the server if <see cref="P:com.dsc.kernal.ftp.FTPConnection.AutoLogin"/> is on.</summary>
            <remarks>A login attempt will take place only if the <see cref="P:com.dsc.kernal.ftp.FTPConnection.UserName"/> property
            and (optionally) the <see cref="P:com.dsc.kernal.ftp.FTPConnection.Password"/> property have been set.</remarks>
        </member>
        <!-- 忽略成員 "M:com.dsc.kernal.ftp.FTPConnection.Close" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:com.dsc.kernal.ftp.FTPConnection.Close(System.Boolean)" 中格式錯誤的 XML 註解 -->
        <member name="M:com.dsc.kernal.ftp.FTPConnection.Login">
            <summary>Log into an account on the FTP server using <see cref="P:com.dsc.kernal.ftp.FTPConnection.UserName"/> and <see cref="P:com.dsc.kernal.ftp.FTPConnection.Password"/>.</summary>
            <remarks>This is only necessary if <see cref="P:com.dsc.kernal.ftp.FTPConnection.AutoLogin"/> is <c>false</c>.</remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.SendUserName(System.String)">
            <summary>
            Supply the user-name to log into an account on the FTP server. 
            Must be followed by the <see cref="M:com.dsc.kernal.ftp.FTPConnection.SendPassword(System.String)"/> method.
            </summary>
            <remarks>This is only necessary if <see cref="P:com.dsc.kernal.ftp.FTPConnection.AutoLogin"/> is <c>false</c>.</remarks>
            <param name="user">User-name of the client's account on the server.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.SendPassword(System.String)">
            <summary>
            Supplies the loginPassword for a previously supplied
            user-name to log into the FTP server. Must be
            preceeded by the <see cref="M:com.dsc.kernal.ftp.FTPConnection.SendUserName(System.String)"/> method
            </summary>
            <remarks>This is only necessary if <see cref="P:com.dsc.kernal.ftp.FTPConnection.AutoLogin"/> is <c>false</c>.</remarks>
            <param name="loginPassword">Password of the client's account on the server.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.CancelTransfer">
            <summary>Cancels the current transfer.</summary>
            <remarks>This method is generally called from a separate
            thread. Note that this may leave partially written files on the
            server or on local disk, and should not be used unless absolutely
            necessary. The server is not notified.</remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.ResumeTransfer">
            <summary>Make the next file transfer (put or get) resume.</summary>
            <remarks>
            <p>
            For uploads, the
            bytes already transferred are skipped over, while for downloads, if 
            writing to a file, it is opened in append mode, and only the bytes
            required are transferred.
            </p>
            <p>
            Currently resume is only supported for BINARY transfers (which is
            generally what it is most useful for). 
            </p>
            </remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.CancelResume">
            <summary>Cancel the resume.</summary>
            <remarks>
            Use this method if something goes wrong
            and the server is left in an inconsistent state.
            </remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.UploadFile(System.String,System.String)">
            <summary>
            Upload a local file to the FTP server in the current working directory.
            </summary>
            <param name="localPath">Path of the local file.</param>
            <param name="remoteFile">Name of remote file in current working directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.UploadStream(System.IO.Stream,System.String)">
            <summary>
            Upload a stream of data to the FTP server in the current working directory.
            </summary>
            <param name="srcStream">Input stream of data to put.</param>
            <param name="remoteFile">Name of remote file in current working directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.UploadByteArray(System.Byte[],System.String)">
            <summary>
            Upload an array of bytes to the FTP server in the current working directory.
            </summary>
            <param name="bytes">Array of bytes to put.</param>
            <param name="remoteFile">Name of remote file in current working directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.UploadFile(System.String,System.String,System.Boolean)">
            <summary>
            Upload a local file to the FTP server in the current working directory. Allows appending
            if current file exists.
            </summary>
            <param name="localPath">Path of the local file.</param>
            <param name="remoteFile">Name of remote file in current working directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.UploadStream(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Upload a stream of data to the FTP server in the current working directory.  Allows appending
            if current file exists
            </summary>
            <param name="srcStream">Input stream of data to put.</param>
            <param name="remoteFile">Name of remote file in current working directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.UploadByteArray(System.Byte[],System.String,System.Boolean)">
            <summary>
            Upload data to the FTP server in the current working directory. Allows
            appending if current file exists.
            </summary>
            <param name="bytes">Array of bytes to put.</param>
            <param name="remoteFile">Name of remote file in current working directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.DownloadFile(System.String,System.String)">
            <summary>Download a file from the FTP server and save it locally.</summary>
            <remarks>Transfers in the current <see cref="P:com.dsc.kernal.ftp.FTPConnection.TransferType"/>. </remarks>
            <param name="localPath">Local file to put data in.</param>
            <param name="remoteFile">Name of remote file in current working directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.DownloadStream(System.IO.Stream,System.String)">
            <summary>Download a file from the FTP server and write it to the given stream.</summary>
            <remarks>Transfers in the current <see cref="P:com.dsc.kernal.ftp.FTPConnection.TransferType"/>. </remarks>
            <param name="destStream">Data stream to write data to.</param>
            <param name="remoteFile">Name of remote file in current working directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.DownloadByteArray(System.String)">
            <summary>Download data from the FTP server and return it as a byte-array.</summary>
            <remarks>
            Transfers in the current <see cref="P:com.dsc.kernal.ftp.FTPConnection.TransferType"/>. Note
            that we may experience memory limitations as the
            entire file must be held in memory at one time.
            </remarks>
            <param name="remoteFile">Name of remote file in current working directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.InvokeSiteCommand(System.String,System.String[])">
            <summary>
            Invokes the given site command on the server.
            </summary>
            <remarks>
            <p>
            Site-specific commands are special commands that may be defined by a server.  
            Such commands are defined on a server-by-server basis.
            </p>
            <p>
            For example, a specific FTP server might define a <c>PROCESS</c> site-command which 
            results in another piece of software on the server being directed to perform some
            sort of processing on a particular file.  The command required might be:
            </p>
            <code>
            	SITE PROCESS file-path
            </code>
            <p>
            In this case, the site-command would be invoked as follows:
            </p>
            <code>
            	ftpConnection.InvokeSiteCommand("PROCESS", filePath);
            </code>
            </remarks>
            <param name="command">Site-specific command to be invoked.</param>
            <param name="arguments">Arguments of the command to be invoked.</param>
            <returns>The reply returned by the server.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.InvokeFTPCommand(System.String,System.String[])">
            <summary>
            Invokes the given literal FTP command on the server.
            </summary>
            <remarks>
            <p>
            If a particular FTP command is not supported by <see cref="T:com.dsc.kernal.ftp.FTPConnection"/>, this
            method may sometimes be used to invoke the command.  This will only work for 
            simple commands that don't require special processing.
            </p>
            <p>
            An example of an FTP command that could be invoked using this method is the 
            <c>FEAT</c> command (which is actually behind the <see cref="M:com.dsc.kernal.ftp.FTPConnection.GetFeatures"/> method.
            This would be done as follows:
            </p>
            <code>
            	string features = ftpConnection.InvokeFTPCommand("FEAT", "211");
            </code>
            The returned <c>string</c> could then be parsed to obtain the supported features
            of the server.
            </remarks>
            <param name="command">Command to be sent.</param>
            <param name="validCodes">Valid return-codes (used for validating reply).</param>
            <returns>The reply returned by the server.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetFeatures">
            <summary>Get the server supplied features.</summary>
            <returns>
            <c>string</c>-array containing server features, or <c>null</c> if no features or not supported.
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetSystemType">
            <summary>Get the type of the operating system at the server.</summary>
            <returns>The type of server operating system.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetCommandHelp(System.String)">
            <summary>Get the help text for the specified FTP command.</summary>
            <param name="command">Name of the FTP command to get help for.</param>
            <returns>Help text from the server for the supplied command.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetFileInfos">
            <summary>
            Returns the working directory's contents as an array of <see cref="T:com.dsc.kernal.ftp.FTPFile"/> objects.
            </summary>
            <remarks>
            This method works for Windows and most Unix FTP servers.  Please inform EDT
            about unusual formats (<a href="support@enterprisedt.com">support@enterprisedt.com</a>).
            </remarks>
            <returns>An array of <see cref="T:com.dsc.kernal.ftp.FTPFile"/> objects.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetFileInfos(System.String)">
            <summary>
            Returns the given directory's contents as an array of <see cref="T:com.dsc.kernal.ftp.FTPFile"/> objects.
            </summary>
            <remarks>
            This method works for Windows and most Unix FTP servers.  Please inform EDT
            about unusual formats (<a href="support@enterprisedt.com">support@enterprisedt.com</a>).
            </remarks>
            <param name="directory">Name of directory AND/OR filemask.</param>
            <returns>An array of <see cref="T:com.dsc.kernal.ftp.FTPFile"/> objects.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetFiles">
            <summary>
            Lists current working directory's contents as an array of strings of file-names.
            </summary>
            <returns>An array of current working directory listing strings.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetFiles(System.String)">
            <summary>
            List the given directory's contents as an array of strings of file-names.
            </summary>
            <param name="directory">Name of directory AND/OR filemask.</param>
            <returns>An array of directory listing strings.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.DeleteDirectory(System.String)">
            <summary>Delete the specified remote directory.</summary>
            <remarks>
            This method does not recursively delete files.
            </remarks>
            <param name="directory">Name of remote directory to delete.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.CreateDirectory(System.String)">
            <summary>Create the specified remote directory.</summary>
            <param name="directory">Name of remote directory to create.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetWorkingDirectory">
            <summary>
            Returns the working directory on the server.
            </summary>
            <returns>The working directory on the server.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.ChangeWorkingDirectory(System.String)">
            <summary>
            Changes the working directory.
            </summary>
            <param name="directory">Directory to change to (may be relative or absolute).</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.ChangeWorkingDirectoryUp">
            <summary>
            Changes to the parent of the current working directory on the server.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.DeleteFile(System.String)">
            <summary>Delete the specified remote file.</summary>
            <param name="remoteFile">Name of remote file to delete.</param>
            <returns><c>true</c> if file was deleted successfully.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.RenameFile(System.String,System.String)">
            <summary>Rename a file or directory.</summary>
            <param name="from">Name of file or directory to rename.</param>
            <param name="to">New file-name.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetSize(System.String)">
            <summary>
            Get the size of a remote file. 
            </summary>
            <remarks>
            This is not a standard FTP command, it is defined in "Extensions to FTP", a draft RFC 
            (draft-ietf-ftpext-mlst-16.txt).
            </remarks>
            <param name="remoteFile">Name or path of remote file in current working directory.</param>
            <returns>Size of file in bytes.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.GetLastWriteTime(System.String)">
            <summary>Get modification time for a remote file.</summary>
            <param name="remoteFile">Name of remote file.</param>
            <returns>Modification time of file as a <c>DateTime</c>.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.InvokeEventHandler(System.Delegate,System.Object,System.EventArgs)">
            <summary>
            Invokes the given event-handler.
            </summary>
            <param name="eventHandler">Event-handler to invoke.</param>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.InvokeDelegate(System.Delegate,System.Object[])">
            <summary>
            Invokes the given delegate.
            </summary>
            <param name="del">Delegate to invoke.</param>
            <param name="args">Arguments with which to invoke the delegate.</param>
            <returns>Return value of delegate (if any).</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnConnecting">
            <summary>
            Called when a connection-attempt is being made.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnConnected(System.Boolean)">
            <summary>
            Called when a connection-attempt has completed.
            </summary>
            <param name="hasConnected"><c>true</c> if the connection-attempt succeeded.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnLoggingIn(System.String,System.String,System.Boolean)">
            <summary>
            Called when the client is about to log in.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnLoggedIn(System.String,System.String,System.Boolean)">
            <summary>
            Called when the client has logged in.
            </summary>
            <param name="hasLoggedIn"><c>true</c> if the client logged in successfully.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnClosing">
            <summary>
            Called when a connection is about to close.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnClosed">
            <summary>
            Called when a connection has closed.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnUploading(System.String,System.String,System.Boolean)">
            <summary>
            Called when a file is about to be uploaded.
            </summary>
            <param name="localPath">Path of local file.</param>
            <param name="remoteFile">Path of remote file.</param>
            <param name="append">Flag indicating whether or not the remote file is being appended to.</param>
            <returns><c>true</c> if the operation is to continue.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnUploaded(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Called when a file uploading operation has completed (though it may have been cancelled).
            </summary>
            <param name="localPath">Path of local file.</param>
            <param name="remoteFile">Path of remote file.</param>
            <param name="append">Flag indicating whether or not the remote file was being appended to.</param>
            <param name="cancelled">Flag indicating whether or not the upload attempt was cancelled by an event-handler.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnUploading(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Called when a stream is about to be uploaded.
            </summary>
            <param name="srcStream">Stream to upload.</param>
            <param name="remoteFile">Path of remote file.</param>
            <param name="append">Flag indicating whether or not the remote file is being appended to.</param>
            <returns><c>true</c> if the operation is to continue.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnUploaded(System.IO.Stream,System.String,System.Boolean,System.Boolean)">
            <summary>
            Called when a file uploading operation has completed (though it may have been cancelled).
            </summary>
            <param name="srcStream">Stream to upload.</param>
            <param name="remoteFile">Path of remote file.</param>
            <param name="append">Flag indicating whether or not the remote file was being appended to.</param>
            <param name="cancelled">Flag indicating whether or not the upload attempt was cancelled by an event-handler.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnUploading(System.Byte[],System.String,System.Boolean)">
            <summary>
            Called when a byte-array is about to be uploaded.
            </summary>
            <param name="bytes">Byte-array to upload.</param>
            <param name="remoteFile">Path of remote file.</param>
            <param name="append">Flag indicating whether or not the remote file is being appended to.</param>
            <returns><c>true</c> if the operation is to continue.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnUploaded(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <summary>
            Called when a file uploading operation has completed (though it may have been cancelled).
            </summary>
            <param name="bytes">Byte-array to upload.</param>
            <param name="remoteFile">Path of remote file.</param>
            <param name="append">Flag indicating whether or not the remote file was being appended to.</param>
            <param name="cancelled">Flag indicating whether or not the upload attempt was cancelled by an event-handler.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnDownloading(System.String,System.String)">
            <summary>
            Called when a file is about to be downloaded.
            </summary>
            <param name="localPath">Path of local file.</param>
            <param name="remoteFile">Path of remote file.</param>
            <returns><c>true</c> if the operation is to continue.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnDownloaded(System.String,System.String,System.Boolean)">
            <summary>
            Called when a file downloading operation has completed (though it may have been cancelled).
            </summary>
            <param name="localPath">Path of local file.</param>
            <param name="remoteFile">Path of remote file.</param>
            <param name="cancelled">Flag indicating whether or not the download attempt was cancelled by an event-handler.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnDownloading(System.IO.Stream,System.String)">
            <summary>
            Called when a file is about to be downloaded.
            </summary>
            <param name="destStream">Stream to which data will be written.</param>
            <param name="remoteFile">Path of remote file.</param>
            <returns><c>true</c> if the operation is to continue.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnDownloaded(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Called when a file downloading operation has completed (though it may have been cancelled).
            </summary>
            <param name="destStream">Stream to which data will be written.</param>
            <param name="remoteFile">Path of remote file.</param>
            <param name="cancelled">Flag indicating whether or not the download attempt was cancelled by an event-handler.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnDownloading(System.String)">
            <summary>
            Called when a file is about to be downloaded.
            </summary>
            <param name="remoteFile">Path of remote file.</param>
            <returns><c>true</c> if the operation is to continue.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnDownloaded(System.Byte[],System.String,System.Boolean)">
            <summary>
            Called when a file downloading operation has completed (though it may have been cancelled).
            </summary>
            <param name="bytes">Byte-array containing downloaded data.</param>
            <param name="remoteFile">Path of remote file.</param>
            <param name="cancelled">Flag indicating whether or not the download attempt was cancelled by an event-handler.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnChangingDirectory(System.String,System.String)">
            <summary>
            Called when the working directory is about to be changed.
            </summary>
            <param name="oldDirectory">Current directory.</param>
            <param name="newDirectory">New directory</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnChangedDirectory(System.String,System.String)">
            <summary>
            Called when the working directory has been changed.
            </summary>
            <param name="oldDirectory">Previous directory.</param>
            <param name="newDirectory">New directory</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnDeleting(System.String)">
            <summary>
            Called when a file is about to be deleted.
            </summary>
            <param name="remoteFile">File to delete.</param>
            <returns><c>false</c> if the deletion should proceed; <c>true</c> otherwise.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnDeleted(System.String,System.Boolean)">
            <summary>
            Called when a file deletion operation has completed (though it may have been cancelled).
            </summary>
            <param name="remoteFile">File deleted.</param>
            <param name="cancelled"><c>true</c> if the operation was cancelled (and the file was not deleted).</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnRenaming(System.String,System.String)">
            <summary>
            Called when a file is about to be renamed.
            </summary>
            <param name="from">Current name.</param>
            <param name="to">New name.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPConnection.OnRenamed(System.String,System.String)">
            <summary>
            Called when a file has been renamed.
            </summary>
            <param name="from">Previous name.</param>
            <param name="to">New name.</param>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.Version">
            <summary>The version of edtFTPj.</summary>
            <value>An <c>int</c> array of <c>{major,middle,minor}</c> version numbers.</value>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.BuildTimestamp">
            <summary>The edtFTPj build timestamp.</summary>
            <value>
            Timestamp of when edtFTPj was build in the format <c>d-MMM-yyyy HH:mm:ss z</c>.
            </value>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.StrictReturnCodes">
            <summary>Controls whether or not checking of return codes is strict.</summary>
            <remarks>
            <p>
            Some servers return non-standard reply-codes.  When this property is <c>false</c>
            only the first digit of the reply-code is checked, thus decreasing the sensitivity
            of edtFTPj to non-standard reply-codes.  The default is <c>true</c> meaning that
            reply-codes must match exactly.
            </p>
            </remarks>
            <value>  
            <c>true</c> if strict return code checking, <c>false</c> if non-strict.
            </value>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.Timeout">
            <summary> 
            TCP timeout on the underlying sockets.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.ConnectMode">
            <summary>
            The connection-mode (passive or active) of data-channels.
            </summary>
            <remarks>
            <p>
            When the connection-mode is active, the server will initiate connections
            to the FTP client, meaning that the FTP client must open a socket and wait for the
            server to connect to it.  This often causes problems if the ftpClient is behind
            a firewall.
            </p>
            <p>
            When the connection-mode is passive, the FTP client will initiates connections
            to the server, meaning that the FTP client will connect to a particular socket
            on the server.  This is generally used if the FTP client is behind a firewall.
            </p>
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.IsConnected">
            <summary>
            Indicates whether the FTP client is currently connect with the server.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.IsTransferring">
            <summary>
            Indicates whether the FTP client is currently uploading or downloading.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.TransferNotifyInterval">
            <summary>
            The number of bytes transferred between each notification of the
            <see cref="E:com.dsc.kernal.ftp.FTPConnection.BytesTransferred"/> event.
            </summary>
            <remarks>
            Reduce this value to receive more frequent notifications of transfer progress.
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.TransferBufferSize">
            <summary>
            The size of the buffers used in writing to and reading from the data-sockets.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.ServerAddress">
            <summary>
            The domain-name or IP address of the FTP server.
            </summary>
            <remarks>
            <p>This property may only be set if not currently connected.</p>.
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.ServerPort">
            <summary>
            The port on the server to which to connect the control-channel. 
            </summary>
            <remarks>
            <p>Most FTP servers use port 21 (the default)</p>
            <p>This property may only be set if not currently connected.</p>
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.DeleteOnFailure">
            <summary>
            Controls whether or not a file is deleted when a failure occurs.
            </summary>
            <remarks>
            <p>
            If <c>true</c>, a partially downloaded file is deleted if there
            is a failure during the download.  For example, the connection
            to the FTP server might have failed. If <c>false</c>, the partially
            downloaded file remains on the ftpClient machine - and the download
            may be resumed, if it is a binary transfer.
            </p>
            <p>
            By default this flag is set to <c>true</c>.
            </p>
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.ParsingCulture">
            <summary>The culture for parsing file listings.</summary>
            <remarks>
            <p>
            The <see cref="M:com.dsc.kernal.ftp.FTPConnection.GetFileInfos(System.String)"/> method parses the file listings returned.  The names of the file
            can contain a wide variety of characters, so it is sometimes necessary to set this
            property to match the character-set used on the server.
            </p>
            <p>
            The default is <c>Invariant Language (Invariant Country)</c>.
            </p>
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.FileInfoParser">
            <summary>
            Override the chosen file factory with a user created one - meaning
            that a specific parser has been selected
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.LastValidReply">
            <summary>The latest valid reply from the server.</summary>
            <value>
            Reply object encapsulating last valid server response.
            </value>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.TransferType">
            <summary>The current file transfer type (BINARY or ASCII).</summary>
            <value>Transfer-type to be used for uploads and downloads.</value>
            <remarks>When the transfer-type is set to <c>BINARY</c> then files
            are transferred byte-for-byte such that the transferred file will
            be identical to the original.
            When the transfer-type is set to <c>BINARY</c> then end-of-line
            characters will be translated where necessary between Windows and
            UNIX formats.</remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.UserName">
            <summary>User-name of account on the server.</summary>
            <value>The user-name of the account the FTP server that will be logged into upon connection.</value>
            <remarks>This property must be set before a connection with the server is made.</remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.Password">
            <summary>Password of account on the server.</summary>
            <value>The password of the account the FTP server that will be logged into upon connection.</value>
            <remarks>This property must be set before a connection with the server is made.</remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.AutoLogin">
            <summary>Determines if the component will automatically log in upon connection.</summary>
            <remarks>
            <p>
            If this flag if <c>true</c> (the default) then the component will automatically attempt 
            to log inwhen the <see cref="M:com.dsc.kernal.ftp.FTPConnection.Connect"/> method is called.  The <see cref="P:com.dsc.kernal.ftp.FTPConnection.UserName"/> and 
            <see cref="P:com.dsc.kernal.ftp.FTPConnection.Password"/> (if required) properties should be set previously.
            </p>
            <p>
            If the flag is <c>false</c> then the component will not log in until the <see cref="M:com.dsc.kernal.ftp.FTPConnection.Login"/>
            method is called.
            </p>
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnection.EventsEnabled">
            <summary>Determines whether or not events are currently enabled.</summary>
            <value>The <c>EventsEnabled</c> flag determines whether or not events are currently enabled.
            If the flag is <c>true</c> (the default) then events will fire as appropriate.
            If the flag is <c>false</c> then no events will be fired by this object.</value>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Connecting">
            <summary>Occurs when the component is connecting to the server.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Connected">
            <summary>Occurs when the component has connected to the server.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.LoggingIn">
            <summary>Occurs when the component is about to log in.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.LoggedIn">
            <summary>Occurs when the component has logged in.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Closing">
            <summary>Occurs when the component is about to close its connection to the server.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Closed">
            <summary>Occurs when the component has closed its connection to the server.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Uploading">
            <summary>Occurs when a file is about to be uploaded to the server.</summary>
            <remarks>The <see cref="T:com.dsc.kernal.ftp.FTPFileTransferEventArgs"/> argument passed to
            handlers has a <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Cancel"/> property,
            that, if set to <c>true</c> will result in the transfer being cancelled.</remarks>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Uploaded">
            <summary>Occurs when a file has been uploaded to the server.</summary> 
            <remarks>The <see cref="T:com.dsc.kernal.ftp.FTPFileTransferEventArgs"/> argument passed to
            handlers has a <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Cancel"/> property,
            that indicates whether or not the transfer was cancelled.</remarks>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Downloading">
            <summary>Occurs when a file is about to be downloaded from the server.</summary> 
            <remarks>The <see cref="T:com.dsc.kernal.ftp.FTPFileTransferEventArgs"/> argument passed to
            handlers has a <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Cancel"/> property,
            that, if set to <c>true</c> will result in the transfer being cancelled.</remarks>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Downloaded">
            <summary>Occurs when a file has been downloaded from the server.</summary> 
            <remarks>The <see cref="T:com.dsc.kernal.ftp.FTPFileTransferEventArgs"/> argument passed to
            handlers has a <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Cancel"/> property,
            that indicates whether or not the transfer was cancelled.</remarks>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.BytesTransferred">
            <summary>Occurs every time a specified number of bytes of data have been transferred.</summary>
            <remarks>The property, <see cref="P:com.dsc.kernal.ftp.FTPConnection.TransferNotifyInterval"/>, determines
            the number of bytes sent between notifications.</remarks>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.RenamingFile">
            <summary>Occurs when a remote file is about to be renamed.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.RenamedFile">
            <summary>Occurs when a remote file has been renamed.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Deleting">
            <summary>Occurs when a file is about to be deleted from the server.</summary> 
            <remarks>The <see cref="T:com.dsc.kernal.ftp.FTPFileTransferEventArgs"/> argument passed to
            handlers has a <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Cancel"/> property,
            that, if set to <c>true</c> will result in the deletion being cancelled.</remarks>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.Deleted">
            <summary>Occurs when a file has been deleted from the server.</summary> 
            <remarks>The <see cref="T:com.dsc.kernal.ftp.FTPFileTransferEventArgs"/> argument passed to
            handlers has a <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Cancel"/> property,
            that indicates whether or not the deletion was cancelled.</remarks>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.DirectoryChanging">
            <summary>Occurs when the working directory on the server is about to be changed.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.DirectoryChanged">
            <summary>Occurs when the working directory on the server has been changed.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.CommandSent">
            <summary>Occurs when a command is sent to the server.</summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPConnection.ReplyReceived">
            <summary>Occurs when a reply is received from the server.</summary> 
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPDirectoryEventArgs">
            <summary>
            Provides data for the <see cref="E:com.dsc.kernal.ftp.FTPConnection.DirectoryChanging"/> and
            <see cref="E:com.dsc.kernal.ftp.FTPConnection.DirectoryChanged"/> events.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPDirectoryEventArgs.OldDirectory">
            <summary>
            Working directory prior to change.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPDirectoryEventArgs.NewDirectory">
            <summary>
            Working directory after change.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPDirectoryEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:com.dsc.kernal.ftp.FTPConnection.DirectoryChanging"/>
            and <see cref="E:com.dsc.kernal.ftp.FTPConnection.DirectoryChanged"/> events.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPFileTransferEventArgs">
            <summary>
            Provides data for the <see cref="E:com.dsc.kernal.ftp.FTPConnection.Uploading"/>, <see cref="E:com.dsc.kernal.ftp.FTPConnection.Uploaded"/>,
            <see cref="E:com.dsc.kernal.ftp.FTPConnection.Downloading"/>, and <see cref="E:com.dsc.kernal.ftp.FTPConnection.Downloaded"/> events.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.LocalDataType">
            <summary>
            Type of local data source/destination.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.LocalPath">
            <summary>
            Path of local file if <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.LocalDataType"/> is <c>File</c>.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Stream">
            <summary>
            Reference to <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Stream"/> if <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.LocalDataType"/> is <c>Stream</c>.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Bytes">
            <summary>
            Reference to byte-array if <see cref="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.LocalDataType"/> is <c>ByteArray</c>.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Appended">
            <summary>
            Indicates whether or not data was appended to the remote file.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.RemoteFile">
            <summary>
            Name of remote file.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.FileSize">
            <summary>
            Size of remote file.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileTransferEventArgs.Cancel">
            <summary>
            Cancel transfer.
            </summary>
            <remarks>
            <p>
            For <see cref="E:com.dsc.kernal.ftp.FTPConnection.Uploading"/> and <see cref="E:com.dsc.kernal.ftp.FTPConnection.Downloading"/>
            this flag may be set to <c>false</c> if the operation is to be aborted.
            For <see cref="E:com.dsc.kernal.ftp.FTPConnection.Uploaded"/> and <see cref="E:com.dsc.kernal.ftp.FTPConnection.Downloaded"/>
            this flag indicates if the operation was aborted.
            </p>
            <p>
            Note that multiple file transfers cannot be cancelled.
            </p>
            </remarks>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPFileTransferEventArgs.DataType">
            <summary>
            Type of data source or destination.
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileTransferEventArgs.DataType.File">
            <summary>File data source/destination.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileTransferEventArgs.DataType.Stream">
            <summary>Stream data source/destination.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFileTransferEventArgs.DataType.ByteArray">
            <summary>Byte-array data source/destination.</summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPFileTransferEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:com.dsc.kernal.ftp.FTPConnection.Uploading"/>, 
            <see cref="E:com.dsc.kernal.ftp.FTPConnection.Uploaded"/>, <see cref="E:com.dsc.kernal.ftp.FTPConnection.Downloading"/>, 
            and <see cref="E:com.dsc.kernal.ftp.FTPConnection.Downloaded"/> events.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPFileRenameEventArgs">
            <summary>
            Provides data for the <see cref="E:com.dsc.kernal.ftp.FTPConnection.RenamingFile"/>
            and <see cref="E:com.dsc.kernal.ftp.FTPConnection.RenamedFile"/> events.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileRenameEventArgs.OldFileName">
            <summary>
            Name of file before the renaming takes place.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFileRenameEventArgs.NewFileName">
            <summary>
            Name of file after the renaming takes place.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPFileRenameEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:com.dsc.kernal.ftp.FTPConnection.RenamingFile"/>
            and <see cref="E:com.dsc.kernal.ftp.FTPConnection.RenamedFile"/> events.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPLogInEventArgs">
            <summary>
            Provides data for the <see cref="E:com.dsc.kernal.ftp.FTPConnection.LoggingIn"/>
            and <see cref="E:com.dsc.kernal.ftp.FTPConnection.LoggedIn"/> events.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPLogInEventArgs.UserName">
            <summary>
            User-name of account on server.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPLogInEventArgs.Password">
            <summary>
            Password of account on server.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPLogInEventArgs.HasLoggedIn">
            <summary>
            Indicates whether or not the client has logged in.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPLogInEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:com.dsc.kernal.ftp.FTPConnection.LoggingIn"/>
            and <see cref="E:com.dsc.kernal.ftp.FTPConnection.LoggedIn"/> events.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPConnectionEventArgs">
            <summary>
            Provides data for the <see cref="E:com.dsc.kernal.ftp.FTPConnection.Connecting"/>
            and <see cref="E:com.dsc.kernal.ftp.FTPConnection.Connected"/> events.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnectionEventArgs.ServerAddress">
            <summary>
            Address of server.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnectionEventArgs.ServerPort">
            <summary>
            FTP port on server.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPConnectionEventArgs.isConnected">
            <summary>
            Indicates whether or not the client is now connected to the server.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPConnectionEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:com.dsc.kernal.ftp.FTPConnection.Connecting"/>
            and <see cref="E:com.dsc.kernal.ftp.FTPConnection.Connected"/> events.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.GeneralOpenWinAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.GeneralOpenWinAgent.queryData(System.String,System.String,System.String,System.String,System.String,System.String,System.String[0:,0:],System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根據設定表TPABYA的設定, 取得開窗後的資料
            </summary>
            <param name="mainEngineType">多資料庫系統中, TPABYA資料庫所位於的資料庫類型</param>
            <param name="mainConnectionString">多資料庫系統中, TPABYA資料庫所位於的資料庫連結字串</param>
            <param name="tableEngineType">欲開窗查詢的資料庫類型</param>
            <param name="tableConnectionString">欲開窗查詢的資料庫連結字串</param>
            <param name="tableID">識別欲開窗的資料表代號, 對應TPABYA001欄位</param>
            <param name="serialNum">識別欲開窗的識別碼, 對應TPABYA002欄位</param>
            <param name="param">指定開窗SQL語法中(TPABYA005), 內部參數(@開頭)的欄位名稱</param>
            <param name="whereClause">需增加的限制條件SQL語句, 不包含where</param>
            <param name="parseMode">是否將param所指定的名稱更新TPABYA005的SQL語句. true:取代; false:保留</param>
            <param name="page">頁碼</param>
            <param name="pagesize">每頁筆數</param>
            <returns>ArrayList: 0: DataObjectSet物件; 1: 各欄位顯示名稱; 2: 各欄位主要屬性; 3: 各欄位次要屬性; 4: 各欄位資料表欄位名稱</returns>
        </member>
        <member name="T:com.dsc.flow.data.WorkItem">
            <summary>
            工作項目類別
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.ASSIGNMENTTYPE_NORMAL">
            <summary>
            代表工作指派類型為流程正常派送的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.ASSIGNMENTTYPE_REEXCUTE">
            <summary>
            代表工作指派類型為重新執行的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.ASSIGNMENTTYPE_WITHDRAW">
            <summary>
            代表工作指派類型為抽回重辦工作的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.CURRENTSTATE_NONSTART">
            <summary>
            代表狀態為未開始的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.CURRENTSTATE_PROCESSING">
            <summary>
            代表狀態為進行中的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.CURRENTSTATE_PAUSE">
            <summary>
            代表狀態為已暫停的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.CURRENTSTATE_COMPLETE">
            <summary>
            代表狀態為已完成的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.CURRENTSTATE_WITHDRAW">
            <summary>
            代表狀態為已撤銷的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.CURRENTSTATE_TERMINATE">
            <summary>
            代表狀態為已中止的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.NOTICETYPE_DEFINED">
            <summary>
            代表流程定義所定義的通知類型的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.NOTICETYPE_PRIVATE_FORWARD">
            <summary>
            代表轉寄類型的常數值，而且為私人轉寄，不想顯示在整個流程的追蹤過程
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.NOTICETYPE_PUBLIC_FORWARD">
            <summary>
            代表轉寄類型的常數值，並且要顯示在整個流程的追蹤過程
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.NOTICETYPE_AGENT">
            <summary>
            代表被代理通知類型的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.NOTICETYPE_WITHDRAW">
            <summary>
            代表流程被撤銷工作被回收的通知類型的常數值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.workItemOID">
            <summary>
            待辦事項OID
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.assignmentType">
            <summary>
            工作指派類型
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.createdTime">
            <summary>
            流程建立時間
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.currentState">
            <summary>
            流程狀態
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.workItemName">
            <summary>
            工作項目名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.processId">
            <summary>
            流程定義代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.processSerialNumber">
            <summary>
            流程實例序號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.processName">
            <summary>
            流程名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.processInstanceOID">
            <summary>
            流程實例識別號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.requesterName">
            <summary>
            流程發起人姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.subject">
            <summary>
            流程主旨
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.noticeType">
            <summary>
            通知類型
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.viewTimes">
            <summary>
            讀取次數
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.workAssignmentOID">
            <summary>
            工作指派識別號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.WorkItem.manualReassignType">
            <summary>
            手動改派工作的類型：0 代表不能改派,1 代表僅能委託給代理人形態,4 代表僅可將工作擁有權轉派出去,5 代表可委託給代理人也可以將工作擁有權轉派出去
            </summary>
        </member>
        <member name="T:com.dsc.flow.client.AbstractSubstitute">
            <summary>
            代理人機制的底層抽象類別
            </summary>
        </member>
        <member name="M:com.dsc.flow.client.AbstractSubstitute.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.flow.client.AbstractSubstitute.getSubstituteList(System.String,com.dsc.kernal.factory.AbstractEngine)">
            <summary>
            取得須取得的所有被代理人清單
            </summary>
            <param name="userID">要查詢的使用者</param>
            <param name="engine">資料引擎</param>
            <returns>須處理的被代理人清單(以被代理人ID與流程號碼組成的二維陣列)</returns>
        </member>
        <member name="T:com.dsc.kernal.utility.RegistryProcessor">
            <summary>
            RegistryProcessor 的摘要描述。
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.getSubKey(System.String,System.String)">
            <summary>
            取得root機碼下key值的所有子機碼
            </summary>
            <param name="root">LocalMachine, ClassRoot, CurrentConfig, CurrentUser, DynaData, PerformanceData, Users</param>
            <param name="key">機碼</param>
            <returns>所包含的所有機碼</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.getValueNames(System.String,System.String)">
            <summary>
            取得root機碼下key值的所有參數
            </summary>
            <param name="root">LocalMachine, ClassRoot, CurrentConfig, CurrentUser, DynaData, PerformanceData, Users</param>
            <param name="key">機碼</param>
            <returns>所包含的所有參數</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.getEncodeValue(System.String,System.String,System.String)">
            <summary>
            取得root機碼下key值的name參數的值. 參數為Base64編碼
            </summary>
            <param name="root">LocalMachine, ClassRoot, CurrentConfig, CurrentUser, DynaData, PerformanceData, Users</param>
            <param name="key">機碼</param>
            <param name="name">參數名稱</param>
            <returns>字串值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.setEncodeValue(System.String,System.String,System.String,System.String)">
            <summary>
            設定root機碼下key值的name參數的值. 參數會Base64編碼後寫入
            </summary>
            <param name="root">LocalMachine, ClassRoot, CurrentConfig, CurrentUser, DynaData, PerformanceData, Users</param>
            <param name="key">機碼</param>
            <param name="name">參數名稱</param>
            <param name="value">要寫入的字串值</param>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.setValue(System.String,System.String,System.String,System.String)">
            <summary>
            設定root機碼下key值的name參數的值.
            </summary>
            <param name="root">LocalMachine, ClassRoot, CurrentConfig, CurrentUser, DynaData, PerformanceData, Users</param>
            <param name="key">機碼</param>
            <param name="name">參數名稱</param>
            <param name="value">要寫入的字串值</param>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.getValue(System.String,System.String,System.String)">
            <summary>
            取得root機碼下key值的name參數的值. 
            </summary>
            <param name="root">LocalMachine, ClassRoot, CurrentConfig, CurrentUser, DynaData, PerformanceData, Users</param>
            <param name="key">機碼</param>
            <param name="name">參數名稱</param>
            <returns>字串值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.deleteValue(System.String,System.String,System.String)">
            <summary>
            刪除root機碼下key值的name參數的值. 
            </summary>
            <param name="root">LocalMachine, ClassRoot, CurrentConfig, CurrentUser, DynaData, PerformanceData, Users</param>
            <param name="key">機碼</param>
            <param name="name">參數名稱</param>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.deleteKey(System.String,System.String,System.String)">
            <summary>
            刪除root機碼下key值
            </summary>
            <param name="root">LocalMachine, ClassRoot, CurrentConfig, CurrentUser, DynaData, PerformanceData, Users</param>
            <param name="key">機碼</param>
            <param name="subKey">子機碼</param>
        </member>
        <member name="M:com.dsc.kernal.utility.RegistryProcessor.createKey(System.String,System.String,System.String)">
            <summary>
            建立root機碼下key的子機碼
            </summary>
            <param name="root">LocalMachine, ClassRoot, CurrentConfig, CurrentUser, DynaData, PerformanceData, Users</param>
            <param name="key">機碼</param>
            <param name="subKey">子機碼</param>
        </member>
        <member name="T:com.dsc.kernal.utility.HTTPProcessor">
            <summary>
            執行HTTP Request之公用程式。此類別之各方法皆為static。
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.getResponseContent(System.Net.HttpWebRequest)">
            <summary>
            根據已經建立之HttpWebRequest取得回傳內容
            </summary>
            <param name="request">HttpWebRequest物件</param>
            <returns>回傳內容</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.sendPost(System.String,System.String)">
            <summary>
            根據傳入參數以及URL取得回傳內容(POST). 此方法會將參數用UTF-8格式傳遞
            </summary>
            <param name="url">目標之URL</param>
            <param name="param">傳入參數，如同HTTP GET規格</param>
            <returns>回傳字串內容</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.sendPost2(System.String,System.String)">
            <summary>
            根據傳入參數以及URL取得回傳內容(POST). 此方法會用預設編碼傳遞資料
            </summary>
            <param name="url">目標之URL</param>
            <param name="param">傳入參數，如同HTTP GET規格</param>
            <returns>回傳字串內容</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.sendGet(System.String,System.String)">
            <summary>
            根據傳入參數以及URL取得回傳內容(GET)
            </summary>
            <param name="url">目標之URL</param>
            <param name="param">傳入參數，如同HTTP GET規格（不包含?字元）</param>
            <returns>回傳字串內容</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.sendGet(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            根據傳入參數以及URL取得回傳內容(GET) , 此方法會進行基本,摘要, NTLM,Kerberos協議的驗證
            </summary>
            <param name="url"></param>
            <param name="param"></param>
            <param name="fileName"></param>
            <param name="username"></param>
            <param name="pwd"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.sendGetFile(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            執行GET方法後將回傳內容儲存到fileName. 此方法傳送檔案前會先登入
            </summary>
            <param name="url">目標之URL</param>
            <param name="param">傳入參數，如同HTTP GET規格（不包含?字元）</param>
            <param name="fileName">參數檔案路徑</param>
            <param name="domain">登入網域名稱</param>
            <param name="username">登入帳號</param>
            <param name="pwd">登入密碼</param>
            <returns>回傳字串內容</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.getPostFile(System.String,System.String,System.String)">
            <summary>
            執行POST方法後將回傳內容儲存到fileName
            </summary>
            <param name="url">目標之URL</param>
            <param name="param">傳入參數，如同HTTP GET規格（不包含?字元）</param>
            <param name="fileName">參數檔案路徑</param>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.sendPostFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            以POST方式上傳檔案
            </summary>
            <param name="url">上傳之網址</param>
            <param name="param">上傳參數內容，相同於GET規則</param>
            <param name="fileTag">上傳之檔案Tag</param>
            <param name="fileName">上傳之檔案路徑</param>
            <param name="method">如果為null, 使用POST</param>
            <returns>網頁回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.sendPostFile(System.String,System.String,System.String,System.String)">
            <summary>
            以POST方式上傳檔案
            </summary>
            <param name="url">上傳之網址</param>
            <param name="param">上傳參數內容，相同於GET規則</param>
            <param name="fileTag">上傳之檔案Tag</param>
            <param name="fileName">上傳之檔案路徑</param>
            <returns>網頁回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.HTTPProcessor.sendPostFiles(System.String,System.String,System.String[],System.String[])">
            <summary>
            以POST方式上傳多檔
            </summary>
            <param name="url">上傳之網址</param>
            <param name="param">上傳參數</param>
            <param name="fileTag">上傳之檔案Tag</param>
            <param name="fileName">上傳之檔案路徑</param>
            <returns>網頁回傳值</returns>
        </member>
        <member name="T:com.dsc.kernal.socket.SocketConstants">
            <summary>
            Socket類別常數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.socket.SocketConstants.EOFSTREAM">
            <summary>
            命令分隔字串
            </summary>
        </member>
        <member name="F:com.dsc.kernal.socket.SocketConstants.EOFOBJ">
            <summary>
            執行物件分隔字串
            </summary>
        </member>
        <member name="T:com.dsc.kernal.db.PlainTextSettingFile">
            <summary>
            純文字並由Setting.ini設定之連線字串類別
            </summary>
        </member>
        <member name="T:com.dsc.kernal.db.AbstractConnectString">
            <summary>
            資料庫連線字串取得抽象方法. 必須覆寫getConnectionString以便客製化取得連線字串.
            必須取得engineType以及connectString, 並設定在engineType以及connectString參數中
            </summary>
        </member>
        <member name="F:com.dsc.kernal.db.AbstractConnectString.engineType">
            <summary>
            連線類型
            </summary>
        </member>
        <member name="F:com.dsc.kernal.db.AbstractConnectString.connectString">
            <summary>
            連線字串
            </summary>
        </member>
        <member name="M:com.dsc.kernal.db.AbstractConnectString.getConnectionString">
            <summary>
            取得連線類型以及連線字串的抽象方法
            </summary>
        </member>
        <member name="M:com.dsc.kernal.db.PlainTextSettingFile.getConnectionString">
            <summary>
            取得連線字串
            </summary>
        </member>
        <member name="T:com.dsc.exception.FieldNotFoundException">
            <summary>
            當欄位未找到的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.FieldNotFoundException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.kernal.utility.XMLProcessor">
            <summary>
            包裝XmlDocument物件。
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.XMLProcessor.doc">
            <summary>
            XmlDocument物件實體
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.XMLProcessor.fileName">
            <summary>
            此物件原始來源檔案名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.XMLProcessor.fileStream">
            <summary>
            代表此來源檔案的FileStream，用於Lock
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.XMLProcessor.oriDoc">
            <summary>
            此物件原始XmlDocument內容物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.#ctor(System.String,System.Int32)">
            <summary>
            建構子，建立XmlDocument物件實體
            </summary>
            <param name="param">根據mode參數，為檔案名稱或是XML字串內容.</param>
            <param name="mode">若為0，表示param參數為指定之檔案名稱。若為其他值，表示為XML字串。</param>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.Lock">
            <summary>
            鎖住此XML檔案
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.getXmlDocument">
            <summary>
            取得XmlDocument實體
            </summary>
            <returns>XmlDocument物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.getFileName">
            <summary>
            取得此XmlDocument的原始檔案名稱
            </summary>
            <returns>檔案名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.getOriginalXmlDocument">
            <summary>
            取得此物件建構時之原始XmlDocument內容
            </summary>
            <returns>原始之XmlDocument物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.saveToFile">
            <summary>
            將此物件之XML內容存回原始檔案
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.removeNode(System.String,System.Xml.XmlNode)">
            <summary>
            將XmlNode字xPath所指定的Node中刪除
            </summary>
            <param name="xPath">Parent node的xPath</param>
            <param name="xnl">要刪除的node</param>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.getXmlString">
            <summary>
            取得此物件之所有XML字串內容
            </summary>
            <returns>XML字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.selectAllNodes(System.String)">
            <summary>
            根據XPATH參數取得所有符合條件之XmlNode
            </summary>
            <param name="xPath">搜尋之XPATH條件字串</param>
            <returns>XmlNodeList物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.selectSingleNode(System.String)">
            <summary>
            根據XPATH參數取得第一個符合條件之XmlNode
            </summary>
            <param name="xPath">搜尋之XPATH條件字串</param>
            <returns>XmlNode物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.selectSingleNodeText(System.String)">
            <summary>
            根據XPATH參數取得第一個符合條件之XmlNode之innerText
            </summary>
            <param name="xPath">搜尋之XPATH條件字串</param>
            <returns>內容值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.XMLProcessor.addNode(System.String,System.String)">
            <summary>
            將nodeValue的值寫入到xPath所指定的節點下. 此nodeValue可包含XML標籤
            </summary>
            <param name="xPath">要寫入的節點xPath</param>
            <param name="nodeValue">要寫入的值</param>
        </member>
        <member name="T:com.dsc.kernal.logon.AbstractLogon">
            <summary>
            登入驗證模組基礎類別. 此類別可根據不同登入以及權限驗證覆寫方法
            此類別提供登入驗證呼叫的唯一窗口: startLogin, 此方法內部呼叫login以及getAuth兩個可被覆寫方法.
            startLogin本身不能被覆寫. 若要撰寫登入或驗證程序, 請各自覆寫login或者getAuth
            login程序回傳值若為AbstractLogin.SUCCESS, 則會繼續呼叫getAuth方法取得權限. 若回傳其他內容, 代表登入發生錯誤.
            getAuth程序需回傳所屬權限群組代號陣列, 若無權限, 需回傳一元素且內容值為#BLANK#字串的陣列
            </summary>
        </member>
        <member name="F:com.dsc.kernal.logon.AbstractLogon.NOSUCHUSER">
            <summary>
            登入結果回傳值-無此使用者
            </summary>
        </member>
        <member name="F:com.dsc.kernal.logon.AbstractLogon.INVALIDPWD">
            <summary>
             登入結果回傳值-密碼錯誤
            </summary>
        </member>
        <member name="F:com.dsc.kernal.logon.AbstractLogon.USEREMPTY">
            <summary>
             登入結果回傳值-帳號輸入錯誤
            </summary>
        </member>
        <member name="F:com.dsc.kernal.logon.AbstractLogon.SUCCESS">
            <summary>
             登入結果回傳值-登入成功
            </summary>
        </member>
        <member name="F:com.dsc.kernal.logon.AbstractLogon.NOLOGINCLASS">
            <summary>
             登入結果回傳值-無撰寫登入模組
            </summary>
        </member>
        <member name="F:com.dsc.kernal.logon.AbstractLogon.NOAUTH">
            <summary>
             登入結果回傳值-無登入權限
            </summary>
        </member>
        <member name="M:com.dsc.kernal.logon.AbstractLogon.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.logon.AbstractLogon.startLogin(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String)">
            <summary>
            登入程序
            </summary>
            <param name="engine">使用的I/O引擎</param>
            <param name="domainname">登入使用者網域</param>
            <param name="useraccount">登入使用者帳號</param>
            <param name="password">登入密碼</param>
            <returns>回傳登入結果訊息</returns>
        </member>
        <member name="M:com.dsc.kernal.logon.AbstractLogon.login(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String)">
            <summary>
            實作登入驗證的基礎方法. 預設動作為根據RESAK資料表登入.
            </summary>
            <param name="engine">使用的I/O引擎</param>
            <param name="domainname">登入使用者網域</param>
            <param name="useraccount">登入使用者帳號</param>
            <param name="password">登入密碼</param>
            <returns>回傳登入結果訊息</returns>
        </member>
        <member name="M:com.dsc.kernal.logon.AbstractLogon.getAuth(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String)">
            <summary>
            權限檢查實做方法. 預設動作為SMSAA模組驗證權限
            </summary>
            <param name="engine">使用的I/O引擎</param>
            <param name="domainname">登入使用者網域</param>
            <param name="useraccount">登入使用者帳號</param>
            <param name="password">登入密碼</param>
            <returns>回傳登入結果訊息</returns>
        </member>
        <member name="P:com.dsc.kernal.logon.AbstractLogon.UserID">
            <summary>
            使用者GUID
            </summary>
        </member>
        <member name="P:com.dsc.kernal.logon.AbstractLogon.UserCode">
            <summary>
            使用者代號
            </summary>
        </member>
        <member name="P:com.dsc.kernal.logon.AbstractLogon.UserName">
            <summary>
            使用者姓名
            </summary>
        </member>
        <member name="P:com.dsc.kernal.logon.AbstractLogon.UserAuthGroup">
            <summary>
            使用者權限
            </summary>
        </member>
        <member name="P:com.dsc.kernal.logon.AbstractLogon.ProcessID">
            <summary>
            ProcessID
            </summary>
        </member>
        <member name="P:com.dsc.kernal.logon.AbstractLogon.LanguageType">
            <summary>
            語系
            </summary>
        </member>
        <member name="T:com.dsc.kernal.factory.SQLEngine">
            <summary>
            SQL Server I/O存取引擎類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.SQLEngine.con">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.SQLEngine.processor">
            <summary>
            資料庫存取類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.#ctor(System.String)">
            <summary>
            建構子, 根據param建立SQL I/O存取引擎物件
            </summary>
            <param name="param">建構引擎所需參數</param>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟Transaction
            </summary>
            <param name="isolevel">開啟方式, 參閱System.Data.SqlClient.IsolationLevel</param>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.close">
            <summary>
            關閉此I/O
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.getProcessor">
            <summary>
            取得SQL Server存取物件, 此方法為SQL I/O存取引擎特有
            </summary>
            <returns>DBProcessor物件</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.updateData(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.updateDataFormMode(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.updateDataSet(System.Data.DataSet)">
            <summary>
            將DataSet更新至資料庫
            </summary>
            <param name="ds">要更新的DataSet</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.getDataSet(System.String,System.String)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.getDataSetLimit(System.String,System.String,System.Int32)">
            <summary>
            根據sql字串取得限制資料筆數的DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet的TableName</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.refreshData(com.dsc.kernal.databean.DataObject)">
            <summary>
            從I/O方面取得資料更新data資料物件內容
            </summary>
            <param name="data">被更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.executeSQL(System.String)">
            <summary>
            執行SQL語句
            </summary>
            <param name="sql">SQL</param>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.executeScalar(System.String)">
            <summary>
            執行SQL語句並且回傳值
            </summary>
            <param name="sql">所執行的SQL</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.updateData(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.updateDataFormMode(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.getWhereSql(com.dsc.kernal.databean.DataObject,System.String)">
            <summary>
            根據資料物件內容設定, 建立存取I/O時的SQL條件語句
            </summary>
            <param name="data">資料物件</param>
            <param name="oriSql">更新前的SQL語句</param>
            <returns>更新後的SQL語句</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.exec(System.String)">
            <summary>
            執行StoreProcedure. 可直接撰寫command text, 包含output參數. 不論該storeprocedure是否有回傳值, 可直接寫成 sp_myProc 'xx',@myout output.......
            若該StoreProcedure有回傳DataSet, 則直接取得. 若無, 回傳null
            若該StoreProcedure有return值, 此值會寫在spReturnValue
            若該StoreProceudre有output參數, 回傳參數會以Hashtable放在spOutput中, key為參數名稱, value為值
            </summary>
            <param name="cmdText">要執行的StoreProcedure名稱以及參數. 可不寫上exec或者Execute開頭</param>
            <returns>取得的DataSet</returns>
            <example>
                <code>
               DataSet ds;
               ds = engine.exec("exec testDSO '1808', @name output");
               //取得回傳DataSet
               if (ds == null)
               {
                   Console.WriteLine("ds null");
               }
               else
               {
                   Console.WriteLine(ds.Tables[0].Rows[0]["RESAK001"].ToString());
               }
               //取得回傳值
               Console.WriteLine(engine.spReturnValue.ToString());
               //取得Output參數
               IDictionaryEnumerator ie = engine.spOutput.GetEnumerator();
               while (ie.MoveNext())
               {
                   Console.WriteLine(ie.Key.ToString() + ": " + ie.Value.ToString());
               }
                </code>
            </example>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.backup(System.String,System.String)">
            <summary>
            資料庫備份
            </summary>
            <param name="databaseName">要備份的資料庫</param>
            <param name="backupFilePath">備份路徑. 此路徑指的是資料庫端實體路徑</param>
            <returns>true:成功; false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.restore(System.String,System.String)">
            <summary>
            資料庫還原
            </summary>
            <param name="databaseName">要還原的資料庫</param>
            <param name="backupFilePath">備份路徑. 此路徑指的是資料庫端實體路徑</param>
            <returns>true:成功; false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.executeDTS(System.String,System.String,System.String,System.String)">
            <summary>
            執行DTS封裝
            </summary>
            <param name="serverName">資料庫伺服器名稱</param>
            <param name="userID">連線帳號</param>
            <param name="password">連線密碼</param>
            <param name="DTSName">DTS封裝名稱</param>
            <returns>true:成功; false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.SQLEngine.executeDTS(System.String)">
            <summary>
            執行DTS封裝. 此方法使用engine連線字串中的Server, User, PWD屬性
            </summary>
            <param name="DTSName">DTS封裝名稱</param>
            <returns>true:成功; false:失敗</returns>
        </member>
        <member name="P:com.dsc.kernal.factory.SQLEngine.CommandTimeout">
            <summary>
            執行命令的等待時間(秒);指定為0時，時間為不限；預設30秒
            </summary>
        </member>
        <member name="T:com.dsc.kernal.webservice.WSDLClient">
            <summary>
            WebService Client呼叫端的共用類別. 此類別呼叫標準wsdl的WebService, 可銜接.NET或者Java所開發的WebService.
            使用此元件呼叫, 不需在方案中建立WebReferences, 亦即使用動態編譯方式建立與WebService的介面.
            所有呼叫方法的參數以及傳回值資料型態皆為object, 請自行轉型
            Sync方法呼叫後會等待回傳, ASync方法會立刻回傳
            使用此元件有兩種方式:
            1. 標準呼叫法-缺點不能接回ref 或者 out參數, 且最多僅能傳出10個參數
                object ret=client.callSync("method1", param1, param2....);
            2. 替代法-可接回所有參數, 但是寫法耗時
                client.addParam("paramName", paramValue);
                client.addParam("paramName", paramValue);
                client.addParam("paramName", paramValue);
                .....
                object ret=client.callMethod("method1");
            
                paramValue=client.getParam("paramName"); (取回ref 或者out參數)
            
            </summary>
        </member>
        <member name="F:com.dsc.kernal.webservice.WSDLClient.serviceNames">
            <summary>
            WebService所提供的服務名稱陣列. 此陣列唯讀
            </summary>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.#ctor(System.String)">
            <summary>
            建構子, 同時指定WebService公開介面路徑
            </summary>
            <param name="serviceurl">wsdl介面路徑</param>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.build">
            <summary>
            建立Client端實體. 建立此物件之後需要呼叫build方法, 才可以與Server端溝通. 每次建立皆需要建立組件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.build(System.Boolean)">
            <summary>
            建立Client端實體. 建立此物件之後需要呼叫build方法, 才可以與Server端溝通.
            </summary>
            <param name="checkExpired">true: 每次皆建立組件; false: 若組件存在則不重建</param>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.Sync(System.String,System.Type[],System.Object[])">
            <summary>
            非同步呼叫方法. 使用此方法時機為當webServer介面有多型時, 需傳入Type[]來指定所使用的方法
            </summary>
            <param name="methodName">方法名稱</param>
            <param name="typeary">參數陣列型態</param>
            <param name="parameters">傳入參數</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.Sync(System.String,System.Object[])">
            <summary>
            非同步呼叫方法
            </summary>
            <param name="methodName">方法名稱</param>
            <param name="parameters">參數陣列</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.clearParam">
            <summary>
            使用替代法時, 清除所有參數, 以便下一次呼叫
            </summary>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.addParam(System.String,System.Object)">
            <summary>
            使用替代法時, 加入參數
            </summary>
            <param name="paramName">參數名稱</param>
            <param name="value">參數值</param>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.getParam(System.String)">
            <summary>
            使用替代法時, 再呼叫callMethod後, 取回參數值
            </summary>
            <param name="paramName">參數名稱</param>
            <returns>參數值</returns>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.callMethod(System.String)">
            <summary>
            使用替代法的執行呼叫
            </summary>
            <param name="methodName">呼叫WebService端的方法名稱</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.callSync(System.String,System.Object[])">
            <summary>
            同步呼叫方法
            </summary>
            <param name="methodName">方法名稱</param>
            <param name="param">參數</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.ASync(System.String,System.Object[])">
            <summary>
            非同步呼叫方法
            </summary>
            <param name="methodName">方法名稱</param>
            <param name="parameters">參數陣列</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.callASync(System.String,System.Object[])">
            <summary>
            非同步呼叫方法
            </summary>
            <param name="methodName">方法名稱</param>
            <param name="param">參數</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.ArrayListToObjectArray(System.Collections.ArrayList)">
            <summary>
            將ArrayList轉換為object陣列
            </summary>
            <param name="ary">要轉換的ArrayList</param>
            <returns>object陣列</returns>
        </member>
        <member name="M:com.dsc.kernal.webservice.WSDLClient.ObjectArrayToArrayList(System.Object[])">
            <summary>
            將object陣列轉換成為ArrayList
            </summary>
            <param name="objs">要轉換的object陣列</param>
            <returns>ArrayList</returns>
        </member>
        <member name="P:com.dsc.kernal.webservice.WSDLClient.serviceURL">
            <summary>
            指定WebService介面的wsdl路徑. 可不輸入?wsdl字尾, 會自動加入
            </summary>
        </member>
        <member name="P:com.dsc.kernal.webservice.WSDLClient.dllPath">
            <summary>
            指定動態建立的DLL組件置放路徑. 預設為系統目前執行目錄
            </summary>
        </member>
        <member name="T:com.dsc.kernal.global.SessionCache">
            <summary>
            儲存私有變數的物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.global.SessionCache.hashmap">
            <summary>
            儲存內容
            </summary>
        </member>
        <member name="M:com.dsc.kernal.global.SessionCache.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.global.SessionCache.getValue(System.String)">
            <summary>
            根據keyName取得內容
            </summary>
            <param name="keyName">查詢名稱</param>
            <returns>內容物件</returns>
        </member>
        <member name="M:com.dsc.kernal.global.SessionCache.setValue(System.String,System.Object)">
            <summary>
            設定keyName參數的內容物件
            </summary>
            <param name="keyName">查詢名稱</param>
            <param name="keyValue">內容物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.UnixFileParser">
            <summary>  
            Represents a remote Unix file parser
            </summary>
            <author>       
            Bruce Blackshaw
            </author>
            <version>      
            $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.SYMLINK_ARROW">
            <summary> Symbolic link symbol</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.SYMLINK_CHAR">
            <summary> Indicates symbolic link</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.ORDINARY_FILE_CHAR">
            <summary> Indicates ordinary file</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.DIRECTORY_CHAR">
            <summary> Indicates directory</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.format1a">
            <summary>Date format 1</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.format1b">
            <summary>Date format 1</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.format2a">
            <summary>Date format 2</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.format2b">
            <summary>Date format 2</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.format2c">
            <summary>Date format 2</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.format2d">
            <summary>Date format 2</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.MIN_FIELD_COUNT">
            <summary> Minimum number of expected fields</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.format1">
            <summary>array of format 1 formats</summary> 
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.format2">
            <summary>array of format 2 formats</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.UnixFileParser.log">
            <summary> Logging object</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.UnixFileParser.#ctor">
            <summary> Default constructor</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.UnixFileParser.IsUnix(System.String)">
            <summary> 
            Is this a Unix format listing?
            </summary>
            <param name="raw">raw string to parse</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.UnixFileParser.Parse(System.String)">
            <summary> 
            Parse server supplied string, e.g.:
            
            lrwxrwxrwx   1 wuftpd   wuftpd         14 Jul 22  2002 MIRRORS -> README-MIRRORS
            -rw-r--r--   1 b173771  users         431 Mar 31 20:04 .htaccess
            
            </summary>
            <param name="raw">  raw string to parse
            </param>
        </member>
        <member name="T:com.dsc.kernal.factory.ClientEngine">
            <summary>
            Oracle Server I/O存取引擎類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.ClientEngine.processor">
            <summary>
            資料庫存取類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.#ctor(System.String)">
            <summary>
            建構子, 根據param建立Oracle I/O存取引擎物件
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟Transaction
            </summary>
            <param name="isolevel">開啟方式, 參閱System.Data.OracleClient.IsolationLevel</param>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.close">
            <summary>
            關閉此I/O
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.getProcessor">
            <summary>
            取得Oracle Server存取物件, 此方法為Oracle I/O存取引擎特有
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.updateData(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.updateDataFormMode(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.refreshData(com.dsc.kernal.databean.DataObject)">
            <summary>
            從I/O方面取得資料更新data資料物件內容
            </summary>
            <param name="data">被更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.executeSQL(System.String)">
            <summary>
            執行Oracle語句
            </summary>
            <param name="sql">Sql語法</param>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.executeScalar(System.String)">
            <summary>
            執行SQL語句並且回傳值
            </summary>
            <param name="sql">所執行的SQL</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.updateData(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.updateDataFormMode(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.getWhereSQL(com.dsc.kernal.databean.DataObject,System.String)">
            <summary>
            根據資料物件內容設定, 建立存取I/O時的Oracle條件語句
            </summary>
            <param name="data">資料物件</param>
            <param name="oriOracle">更新前的Oracle語句</param>
            <returns>更新後的Oracle語句</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.getDataSet(System.String,System.String)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.getDataSetLimit(System.String,System.String,System.Int32)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.updateDataSet(System.Data.DataSet)">
            <summary>
            將DataSet更新至資料庫
            </summary>
            <param name="ds">要更新的DataSet</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.queryDataByPage(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            根據頁數以及頁碼從I/O方面取得資料
            </summary>
            <param name="whereClause">查詢條件</param>
            <param name="tableName">資料表名稱</param>
            <param name="assemblyName">組件名稱</param>
            <param name="childClassString">資料物件類別名稱</param>
            <param name="pagesize">每頁筆數</param>
            <param name="currentpage">頁碼</param>
            <returns>查詢結果的DataObjectSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.ClientEngine.exec(System.String)">
            <summary>
            執行StoreProcedure. 可直接撰寫command text, 包含output參數. 不論該storeprocedure是否有回傳值, 可直接寫成 sp_myProc 'xx',@myout output.......
            若該StoreProcedure有回傳DataSet, 則直接取得. 若無, 回傳null
            若該StoreProcedure有return值, 此值會寫在spReturnValue
            若該StoreProceudre有output參數, 回傳參數會以Hashtable放在spOutput中, key為參數名稱, value為值
            </summary>
            <param name="cmdText">要執行的StoreProcedure名稱以及參數. 可不寫上exec或者Execute開頭</param>
            <returns>取得的DataSet</returns>
            <example>
                <code>
               DataSet ds;
               ds = engine.exec("exec testDSO '1808', @name output");
               //取得回傳DataSet
               if (ds == null)
               {
                   Console.WriteLine("ds null");
               }
               else
               {
                   Console.WriteLine(ds.Tables[0].Rows[0]["RESAK001"].ToString());
               }
               //取得回傳值
               Console.WriteLine(engine.spReturnValue.ToString());
               //取得Output參數
               IDictionaryEnumerator ie = engine.spOutput.GetEnumerator();
               while (ie.MoveNext())
               {
                   Console.WriteLine(ie.Key.ToString() + ": " + ie.Value.ToString());
               }
                </code>
            </example>
        </member>
        <member name="T:com.dsc.kernal.batch.AbstractBatch">
            <summary>
            批次作業處理的底層抽象類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.AbstractBatch.dsCAAB">
            <summary>
            DataSet SMTCAAB
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.AbstractBatch.dsSetting">
            <summary>
            DataSet SMTAAAB
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.AbstractBatch.serial">
            <summary>
            SMTCAAB003序號
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.AbstractBatch.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <!-- 忽略成員 "M:com.dsc.kernal.batch.AbstractBatch.start(com.dsc.kernal.factory.AbstractEngine,com.dsc.kernal.factory.AbstractEngine,System.Decimal,System.String,System.String,System.Collections.ArrayList)" 中格式錯誤的 XML 註解 -->
        <member name="M:com.dsc.kernal.batch.AbstractBatch.run">
            <summary>
            批次執行程式
            </summary>
            <returns>TRUE：成功，FALSE：失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.batch.AbstractBatch.InsertStepData(System.String)">
            <summary>
            新增一筆SMTCAAB資料
            </summary>
            <param name="Message">執行步驟訊息</param>
        </member>
        <member name="M:com.dsc.kernal.batch.AbstractBatch.init">
            <summary>
            批次初始程式
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.AbstractBatch.StrSetting(System.String)">
            <summary>
            讀取參數設定檔
            </summary>
            <param name="StrParaName">參數名稱</param>
            <returns>參數內容值</returns>
        </member>
        <member name="T:com.dsc.flow.data.ReAssignedWorkItem">
            <summary>
            已轉派工作項目類別
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignedWorkItem.reassignmentType">
            <summary>
            轉派類型.
            0:直接轉派
            1:系統代理人轉派
            2:系統逾時轉派
            3:管理員代理轉派
            4:負責人代理轉派
            5:工作取回
            6:工作轉派
            7:管理員工作轉派
            8:負責人工作轉派
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignedWorkItem.reassignFromUserId">
            <summary>
            處理人代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignedWorkItem.reassignFromUserName">
            <summary>
            處理人姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignedWorkItem.reassignToUserId">
            <summary>
            受託人代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignedWorkItem.reassignToUserName">
            <summary>
            受扥人姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignedWorkItem.comment">
            <summary>
            處理意見
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignedWorkItem.reassignedTime">
            <summary>
            處理時間
            </summary>
        </member>
        <member name="T:com.dsc.flow.data.ReAssignActivity">
            <summary>
            已轉派工作項目
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.OID">
            <summary>
            轉派前工作項目識別號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.workItemOID">
            <summary>
            目前工作項目識別號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.processSerialNumber">
            <summary>
            流程實例序號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.processName">
            <summary>
            流程名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.processInstanceOID">
            <summary>
            流程實例識別號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.workItemName">
            <summary>
            工作項目名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.workItemCreatedTime">
            <summary>
            該工作項目建立時間
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.subject">
            <summary>
            流程主旨
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.currentPerformerOID">
            <summary>
            目前處理者式別號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.currentPerformerName">
            <summary>
            目前處理者姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.regetable">
            <summary>
            可否取回
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.requesterName">
            <summary>
            流程發起人姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignActivity.history">
            <summary>
            轉派歷程
            </summary>
        </member>
        <member name="T:com.dsc.kernal.utility.StringResource">
            <summary>
            取得在INI檔案設定中的不同語系設定內容. 此類別相同於GlobalProperty, 區段名稱語言別, 欄位名稱為顯示標記, 欄位內容為該語言顯示內容
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.StringResource.MAX_ENTRY">
            <summary>
            單一區段內容大小
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadInteger(System.String,System.String,System.Int32)">
            <summary>取得特定區段特定參數的整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadInteger(System.String,System.String)">
            <summary>取得特定區段特定參數的整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadInteger(System.String,System.Int32)">
            <summary>取得目前區段特定參數的整數值</summary>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadInteger(System.String)">
            <summary>取得目前區段特定參數的整數值</summary>
            <param name="key">參數名</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadString(System.String,System.String,System.String)">
            <summary>取得特定區段特定參數的字串值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的字串值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadString(System.String,System.String)">
            <summary>取得特定區段特定參數的字串值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的字串值. 若該區段或參數不存在則回傳空字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadString(System.String)">
            <summary>取得目前區段特定參數的字串值</summary>
            <param name="key">參數名</param>
            <returns>所取得的字串值. 若該區段或參數不存在則回傳空字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadLong(System.String,System.String,System.Int64)">
            <summary>取得特定區段特定參數的長整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadLong(System.String,System.String)">
            <summary>取得特定區段特定參數的長整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadLong(System.String,System.Int64)">
            <summary>取得目前區段特定參數的長整數值</summary>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadLong(System.String)">
            <summary>取得目前區段特定參數的長整數值</summary>
            <param name="key">參數名</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadByteArray(System.String,System.String)">
            <summary>取得特定區段特定參數的Base64字串原始byte[]</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的byte[]. 若該區段或參數不存在則回傳null</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadByteArray(System.String)">
            <summary>取得目前區段特定參數的Base64字串原始byte[]</summary>
            <param name="key">參數名</param>
            <returns>所取得的byte[]. 若該區段或參數不存在則回傳null</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadBoolean(System.String,System.String,System.Boolean)">
            <summary>取得特定區段特定參數的布林值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadBoolean(System.String,System.String)">
            <summary>取得特定區段特定參數的布林值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳false</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadBoolean(System.String,System.Boolean)">
            <summary>取得目前區段特定參數的布林值</summary>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.ReadBoolean(System.String)">
            <summary>取得目前區段特定參數的布林值</summary>
            <param name="key">參數名</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳false</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.String,System.Int32)">
            <summary>將整數值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.Int32)">
            <summary>將整數值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.String,System.String)">
            <summary>將字串值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.String)">
            <summary>將字串值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.String,System.Int64)">
            <summary>將長整數值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.Int64)">
            <summary>將長整數值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.String,System.Byte[])">
            <summary>將byte[]轉換成Base64後寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.Byte[])">
            <summary>將byte[]轉換成Base64後寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>將byte[]轉換成Base64後寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <param name="offset">要開始寫入的索引</param>
            <param name="length">要寫入的byte數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.String,System.Boolean)">
            <summary>將布林值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.Write(System.String,System.Boolean)">
            <summary>將布林值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.DeleteKey(System.String,System.String)">
            <summary>從特定區段刪除參數</summary>
            <param name="section">區段</param>
            <param name="key">要刪除的參數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.DeleteKey(System.String)">
            <summary>從目前區段刪除參數</summary>
            <param name="section">區段</param>
            <param name="key">要刪除的參數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.DeleteSection(System.String)">
            <summary>刪除特定區段</summary>
            <param name="section">要刪除的區段</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.GetSectionNames">
            <summary>取得INI檔案所有區段名稱</summary>
            <returns>包含所有區段名稱的ArrayList</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.GetPropertyNames(System.String)">
            <summary>
            取得特定區段的所有參數名稱
            </summary>
            <param name="secName">區段</param>
            <returns>包含所有參數名稱的ArrayList</returns>
        </member>
        <member name="F:com.dsc.kernal.utility.StringResource.m_Filename">
            <summary>
            INI檔案路徑
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.StringResource.m_Section">
            <summary>
            目前區段
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.getResourceNameList">
            <summary>
            取得所有語言名稱
            </summary>
            <returns>名稱陣列</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.StringResource.getValue(System.String,System.String)">
            <summary>
            根據語言名稱, 顯示標記取得該語言顯示內容
            </summary>
            <param name="resourceName">語言名稱</param>
            <param name="keyName">顯示標記</param>
            <returns>該語言內容</returns>
        </member>
        <member name="P:com.dsc.kernal.utility.StringResource.Filename">
            <summary>取得或設定ini檔案路徑</summary>
            <value>INI檔案路徑</value>
        </member>
        <member name="P:com.dsc.kernal.utility.StringResource.Section">
            <summary>取得或設定目前所處理的區段名稱</summary>
            <value>區段名稱</value>
        </member>
        <member name="T:com.dsc.kernal.utility.ExcelReader">
            <summary>
            Excel檔案的讀取工具類別. 所讀取的內容為標準Excel格式以及Xml格式
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.getData(System.String,System.Int32)">
            <summary>
            取得fileName所指定的Excel檔案的第tableIndex頁簽資料. 此方法讀取標準Excel格式
            </summary>
            <param name="fileName">Excel檔案路徑</param>
            <param name="tableIndex">頁簽</param>
            <returns>代表該頁簽內容的ArrayList. 每一列為ArrayList元素, 每一元素皆為string[]資料, 代表各Column</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.getData(System.String,System.String)">
            <summary>
            取得fileName所指定的Excel檔案標籤名稱為tableName的頁簽資料. 此方法讀取標準Excel格式
            </summary>
            <param name="fileName">Excel檔案路徑</param>
            <param name="tableName">頁簽名稱</param>
            <returns>代表該頁簽內容的ArrayList. 每一列為ArrayList元素, 每一元素皆為string[]資料, 代表各Column</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.getDataXML(System.String)">
            <summary>
            取得第一頁簽內容的XML格式Excel檔案.此方法忽略第一列
            </summary>
            <param name="fileName">XML格式Excel檔案路徑</param>
            <returns>代表該頁簽內容的ArrayList. 每一列為ArrayList元素, 每一元素皆為string[]資料, 代表各Column</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.getDataXML(System.String,System.Int32)">
            <summary>
            取得第tableIndex頁簽內容的XML格式Excel檔案. 此方法忽略第一列
            </summary>
            <param name="fileName">XML格式Excel檔案路徑</param>
            <param name="tableIndex">頁簽</param>
            <returns>代表該頁簽內容的ArrayList. 每一列為ArrayList元素, 每一元素皆為string[]資料, 代表各Column</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.getDataXML(System.String,System.Int32,System.Boolean)">
            <summary>
            取得第tableIndex頁簽內容的XML格式Excel檔案. 
            </summary>
            <param name="fileName">XML格式Excel檔案路徑</param>
            <param name="tableIndex">頁簽</param>
            <param name="getTitle">true: 包含第一列; false: 忽略第一列</param>
            <returns>代表該頁簽內容的ArrayList. 每一列為ArrayList元素, 每一元素皆為string[]資料, 代表各Column</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.getData(System.String)">
            <summary>
            取得標準Excel格式檔案的第一頁簽內容
            </summary>
            <param name="fileName">Excel檔案路徑</param>
            <returns>代表該頁簽內容的ArrayList. 每一列為ArrayList元素, 每一元素皆為string[]資料, 代表各Column</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.get_data(System.String,System.String)">
            <summary>
            取得strco所指定的標準Excel檔案, 頁簽名稱tblname的內容
            </summary>
            <param name="strco">Excel檔案路徑</param>
            <param name="tblname">頁簽名稱</param>
            <returns>代表該頁簽內容的ArrayList. 每一列為ArrayList元素, 每一元素皆為string[]資料, 代表各Column</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.get_tbl_list(System.String)">
            <summary>
            取得strco所指定的標準Excel檔案的所有頁簽名稱
            </summary>
            <param name="strco">Excel檔案路徑</param>
            <returns>包含所有頁簽名稱的DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.getTabNames(System.String)">
            <summary>
            取得strco所指定的xls檔案的所有頁簽名稱. 所讀取的為標準xls檔案, 頁簽名稱後方不會加上$
            </summary>
            <param name="strco">Excel檔案名稱</param>
            <returns>所有頁簽名稱的字串陣列</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.setDataXML(System.String,System.String[],System.Collections.ArrayList)">
            <summary>
            將資料寫成特定XML格式的Excel檔案. 此方式僅能寫入第一頁簽, 且該檔案會被覆寫
            </summary>
            <param name="fileName">要寫入的Excel路徑</param>
            <param name="header">標題列</param>
            <param name="datas">代表該頁簽內容的ArrayList. 每一列為ArrayList元素, 每一元素皆為string[]資料, 代表各Column</param>
        </member>
        <member name="M:com.dsc.kernal.utility.ExcelReader.setData(System.String,System.Collections.ArrayList,System.String)">
            <summary>
            將資料寫入標準Excel檔案. 
            </summary>
            <param name="fileName">要寫入的Excel路徑</param>
            <param name="datas">代表該頁簽內容的ArrayList. 每一列為ArrayList元素, 每一元素皆為string[]資料, 代表各Column</param>
            <param name="tabName">要寫入的頁簽名稱</param>
        </member>
        <member name="T:com.dsc.kernal.utility.Base64">
            <summary>
            將字串與Base64互轉工具類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.Base64.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.Base64.encodeFromString(System.String)">
            <summary>
            由字串轉換成Base64
            </summary>
            <param name="oriString">原始字串</param>
            <returns>Base64字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Base64.encode(System.Byte[])">
            <summary>
            由byte[]轉換成Base64
            </summary>
            <param name="oriData">欲轉換的byte[]</param>
            <returns>Base64字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Base64.decodeToString(System.String)">
            <summary>
            將Base64字串轉換成為原始字串
            </summary>
            <param name="encodeString">Base64字串</param>
            <returns>原始字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.Base64.decode(System.String)">
            <summary>
            將Base64字串轉換成為byte[]
            </summary>
            <param name="encodeString">Base64字串</param>
            <returns>原始byte[]</returns>
        </member>
        <member name="T:com.dsc.kernal.sso.client.SSOClientFactory">
            <summary>
            SSO Client端驗證實作類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.sso.client.SSOClientFactory.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.sso.client.SSOClientFactory.getSSOClient(System.String,System.String)">
            <summary>
            取得SSO Client驗證元件
            </summary>
            <param name="assemblyName">SSO Client驗證組件名稱</param>
            <param name="childClassString">SSO Client驗證物件類別名稱</param>
            <returns>SSO Client驗證機制物件</returns>
        </member>
        <member name="T:com.dsc.kernal.global.GlobalCache">
            <summary>
            儲存全域設定參數的資料物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.global.GlobalCache.hashmap">
            <summary>
            儲存的內容物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.global.GlobalCache.remove(System.String)">
            <summary>
            移除cache中的物件. 此方法並不會執行該物件的Dispose方法, 僅將該物件指標由cache中移除
            </summary>
            <param name="key">要移除物件的key值</param>
        </member>
        <member name="M:com.dsc.kernal.global.GlobalCache.getKeyNames">
            <summary>
            取得GlobalCache所有的Key
            </summary>
            <returns>Key值的字串陣列清單</returns>
        </member>
        <member name="M:com.dsc.kernal.global.GlobalCache.getValue(System.String)">
            <summary>
            根據keyName取得內容
            </summary>
            <param name="keyName">查詢名稱</param>
            <returns>內容物件</returns>
        </member>
        <member name="M:com.dsc.kernal.global.GlobalCache.setValue(System.String,System.Object)">
            <summary>
            設定keyName參數的內容物件
            </summary>
            <param name="keyName">查詢名稱</param>
            <param name="keyValue">內容物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.VMSFileParser">
            <summary>  
            Represents a remote OpenVMS file parser
            </summary>
            <author>Bruce Blackshaw
            </author>
            <version>$Revision: 3 $</version>
            <remarks>Hacked and modified from some helpful source provided by Jason Schultz</remarks>
        </member>
        <member name="F:com.dsc.kernal.ftp.VMSFileParser.DIR">
            <summary>Directory field</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.VMSFileParser.HDR">
            <summary>Directory field</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.VMSFileParser.TOTAL">
            <summary>Total field</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.VMSFileParser.BLOCKSIZE">
            <summary> Number of expected fields</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.VMSFileParser.MIN_EXPECTED_FIELD_COUNT">
            <summary> Number of expected fields</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.VMSFileParser.Parse(System.String)">
            <summary> Parse server supplied string</summary>
            <param name="raw">raw string to parse</param>
            <returns>FTPFile object representing the raw string</returns>
            <remarks>Listing look like the below:
             OUTPUT: 
               
               Directory dirname
                
               filename
                       used/allocated    dd-MMM-yyyy HH:mm:ss [group,owner]        (PERMS)
               filename
                       used/allocated    dd-MMM-yyyy HH:mm:ss [group,owner]        (PERMS)
               ...
               
               Total of n files, n/m blocks
            </remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.VMSFileParser.TweakDateString(System.String[])">
            <summary> Tweak the date string to make the month camel case</summary>
            <param name="fields">array of fields</param>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPException">
            <summary>  FTP specific exceptions
            
            </summary>
            <author>      Bruce Blackshaw
            </author>
            <version>     $Revision: 3 $
            
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPException.replyCode">
            <summary>  Integer reply code</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPException.#ctor(System.String)">
            <summary>   Constructor. Delegates to super.
            
            </summary>
            <param name="msg">  Message that the user will be
            able to retrieve
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPException.#ctor(System.String,System.String)">
            <summary>  Constructor. Permits setting of reply code
            
            </summary>
            <param name="msg">       message that the user will be
            able to retrieve
            </param>
            <param name="replyCode"> string form of reply code
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPException.#ctor(com.dsc.kernal.ftp.FTPReply)">
            <summary>  Constructor. Permits setting of reply code
            
            </summary>
            <param name="reply">    reply object
            </param>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPException.ReplyCode">
            <summary>   Get the reply code if it exists
            
            </summary>
            <returns>  reply if it exists, -1 otherwise
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.BaseSocket">
            <summary>  
            Socket abstraction that simplifies socket code
            </summary>
            <author>   
            Hans Andersen    
            </author>
            <version>      
            $Revision: 3 $
            </version>
        </member>
        <member name="M:com.dsc.kernal.ftp.BaseSocket.Accept">
            <summary>
            Creates a new Socket for a newly created connection
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.BaseSocket.Bind(System.Net.EndPoint)">
            <summary>
            Associates a Socket with a local endpoint.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.BaseSocket.Close">
            <summary>
            Closes the Socket connection and releases all associated resources.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.BaseSocket.Connect(System.Net.EndPoint)">
            <summary>
            Establishes a connection to a remote endpoint
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.BaseSocket.Listen(System.Int32)">
            <summary>
            Places socket in a listening state.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.BaseSocket.GetStream">
            <summary>
            Get the stream associated with the socket.
            </summary>
            <remarks>
            The stream returned owns the socket, so closing the
            stream will close the socket
            </remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.BaseSocket.Receive(System.Byte[])">
            <summary>
            Receives data from a bound Socket.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.BaseSocket.Send(System.Byte[])">
            <summary>
            Sends data to a connected Socket.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.BaseSocket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
            <summary>
            Sets a Socket option.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.BaseSocket.LocalEndPoint">
            <summary>
            Gets the local endpoint.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.StandardSocket">
            <summary>  
            Standard implementation of BaseSocket
            </summary>
            <author>   
            Hans Andersen    
            </author>
            <version>      
            $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.StandardSocket.socket">
            <summary>
            The real socket this class is wrapping
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
            <summary>
            Initializes a new instance of the StandardSocket class
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a new instance of the StandardSocket class
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.Accept">
            <summary>
            Creates a new Socket for a newly created connection
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.Bind(System.Net.EndPoint)">
            <summary>
            Associates a Socket with a local endpoint.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.Close">
            <summary>
            Closes the Socket connection and releases all associated resources.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.Connect(System.Net.EndPoint)">
            <summary>
            Establishes a connection to a remote endpoint
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.Listen(System.Int32)">
            <summary>
            Places socket in a listening state.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.GetStream">
            <summary>
            Get the stream associated with the socket.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.Receive(System.Byte[])">
            <summary>
            Receives data from a bound Socket.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.Send(System.Byte[])">
            <summary>
            Sends data to a connected Socket.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.StandardSocket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
            <summary>
            Sets a Socket option.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.StandardSocket.LocalEndPoint">
            <summary>
            Gets the local endpoint.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.databean.DataObjectConstants">
            <summary>
            各項資料物件使用參數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.STARTWITH">
            <summary>
            開頭以
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.NOTEQUAL">
            <summary>
            不等於
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.EQUAL">
            <summary>
            等於
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.GREATER">
            <summary>
            大於
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.LESS">
            <summary>
            小於
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.GREATEREQUAL">
            <summary>
            大於等於
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.LESSEQUAL">
            <summary>
            小於等於
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.LIKE">
            <summary>
            包含
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.DESC">
            <summary>
            降冪
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.ASC">
            <summary>
            升冪
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.STRING">
            <summary>
            字串
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.FLOAT">
            <summary>
            浮點數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.INTEGER">
            <summary>
            整數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.ULONG">
            <summary>
            長整數不帶符號
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.LONG">
            <summary>
            長整數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.DECIMAL">
            <summary>
            Decimal
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.NOGIVENVALUE">
            <summary>
            未設定內容時之訊息
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.MAYNOTEMPTY">
            <summary>
            未填寫必填值之訊息
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.LENGTHNOTSET">
            <summary>
            未設定長度之訊息
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.LENGTHNOTAVAILABLE">
            <summary>
            長度設定數值有誤之訊息
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.TYPENOTAVAILABLE">
            <summary>
            型別設定有誤之訊息
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectConstants.KEYFIELDDUPLICATED">
            <summary>
            關鍵欄位值重複之訊息
            </summary>
        </member>
        <member name="T:com.dsc.kernal.batch.JobStatus">
            <summary>
            取得Queue工作狀態的類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobStatus.IP">
            <summary>
            Queue伺服器IP
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobStatus.port">
            <summary>
            使用的Port, 預設為8489
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.JobStatus.queryStatus">
            <summary>
            取得所有執行中/等待中的Job狀態清單
            </summary>
            <returns>Job清單的xml</returns>
        </member>
        <member name="M:com.dsc.kernal.batch.JobStatus.queryStatus(System.String)">
            <summary>
            取得指定JobID的狀態
            </summary>
            <param name="jobID">指定的JobID</param>
            <returns>0:已建立; 1:執行中; 2:已儲存參數; 3:已完成; 4:發生例外</returns>
        </member>
        <member name="T:com.dsc.kernal.agent.MultiAgent">
            <summary>
            取得單頭包含多筆單身資料物件的代理器. 此類別為基底類別, 需撰寫各自的代理器繼承此類別, 並在建構子中設定存取參數.
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.MultiAgent.tableName">
            <summary>
            此代理器所存取的單頭資料表名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.MultiAgent.subTableName">
            <summary>
            此代理器所存取的單身資料表名稱陣列
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.MultiAgent.childClassString">
            <summary>
            單頭資料物件的類別名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.MultiAgent.subChildClassString">
            <summary>
            單身資料物件的類別名稱陣列
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.MultiAgent.assemblyName">
            <summary>
            單頭資料物件所位在的組件名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.MultiAgent.subAssemblyName">
            <summary>
            單身資料物件所位在的組件名稱陣列
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.MultiAgent.relationString">
            <summary>
            單頭資料與單身資料關聯欄位對應, [k,x,0]:第k組關聯單頭資料表欄位名稱; [k,x,1]:第k組關聯單身資料表欄位名稱
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.createEmptySubSet">
            <summary>
            根據資料物件定義建立所有空單身的DataObjectSet. 
            </summary>
            <returns>Hashtable. Key值為ChildName, Value為該單身的空DataObjectSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.createEmptyDataObjectSet(System.String)">
            <summary>
            根據tableName建立空的DataObjectSet. 此DataObjectSet已經設定好相關參數
            </summary>
            <param name="tableName">要建立的DataObjectSet物件參考的tableName</param>
            <returns>DataObjectSet</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.#ctor(System.String)">
            <summary>
            建構子, 根據傳入的參數建立SQL Server存取引擎物件
            </summary>
            <param name="param">SQL Server資料庫連結參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.#ctor(System.String,System.String)">
            <summary>
            建構子, 根據傳入的參數建立不同的I/O存取引擎
            </summary>
            <param name="engineType">I/O引擎識別字串, 參考com.dsc.kernal.factory.EngineConstants類別</param>
            <param name="param">參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.#ctor(com.dsc.kernal.factory.AbstractEngine)">
            <summary>
            根據所建立的I/O存取引擎參數建立此代理器物件
            </summary>
            <param name="engine">I/O存取引擎物件</param>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.update">
            <summary>
            更新資料物件
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.updateFormMode">
            <summary>
            更新資料庫資料. 此方法速度快, 但資料庫不得存在該筆資料. 使用於表單資料更新
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.queryHead(System.String)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.queryHead(System.String,System.Int32)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料. 此方法需由繼承類別實作
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.queryChild(com.dsc.kernal.databean.DataObject)">
            <summary>
            查詢data單頭的所有單身資料
            </summary>
            <param name="data">單頭資料物件</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.queryChild(com.dsc.kernal.databean.DataObject,System.String[])">
            <summary>
            以whereClause為條件查詢data單頭的單身資料
            </summary>
            <param name="data">單頭物件</param>
            <param name="whereClause">查詢條件</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.query(System.String)">
            <summary>
            取得資料物件
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.MultiAgent.query(System.String,System.Int32)">
            <summary>
            取得完整資料物件. 此方法需由繼承類別實作.
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="T:com.dsc.flow.data.RelevantData">
            <summary>
            相關表單資料類別
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RelevantData.id">
            <summary>
            參數代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RelevantData.name">
            <summary>
            參數名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RelevantData.length">
            <summary>
            參數長度
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RelevantData.initialValue">
            <summary>
            初始值
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RelevantData.isFormType">
            <summary>
            是否為表單參數
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RelevantData.formOID">
            <summary>
            表單識別號
            </summary>
        </member>
        <member name="T:com.dsc.flow.client.SubstituteFactory">
            <summary>
            動態產生代理人機制實體之工廠類別
            </summary>
        </member>
        <member name="M:com.dsc.flow.client.SubstituteFactory.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.flow.client.SubstituteFactory.getSubstituteUtility(System.String,System.String)">
            <summary>
            取得流程代理機制物件
            </summary>
            <param name="assemblyName">流程代理機制組件名稱</param>
            <param name="childClassString">流程代理機制物件類別名稱</param>
            <returns>流程代理機制物件</returns>
        </member>
        <member name="T:com.dsc.exception.SQLEngineException">
            <summary>
            當SQL引擎發生錯誤的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.SQLEngineException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.kernal.global.Parameters">
            <summary>
            可傳遞至客戶端的參數類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.global.Parameters.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.global.Parameters.load(System.String)">
            <summary>
            設定參數檔的路徑. 可為url, 相同於指定FileName
            </summary>
            <param name="fileName">所指定的參數檔或者url</param>
        </member>
        <member name="M:com.dsc.kernal.global.Parameters.getValue(System.String)">
            <summary>
            取得參數內容值
            </summary>
            <param name="paramName">參數名稱</param>
            <returns>參數值</returns>
        </member>
        <member name="M:com.dsc.kernal.global.Parameters.getXML">
            <summary>
            取得序列化值
            </summary>
            <returns>序列化XML值</returns>
        </member>
        <member name="M:com.dsc.kernal.global.Parameters.setXML(System.String)">
            <summary>
            以序列化還原參數物件
            </summary>
            <param name="xml">要還原的序列化的xml</param>
        </member>
        <member name="P:com.dsc.kernal.global.Parameters.Section">
            <summary>
            指定參數檔所讀取的區段名稱. 預設為global
            </summary>
        </member>
        <member name="P:com.dsc.kernal.global.Parameters.FileName">
            <summary>
            指定參數檔的路徑. 可為url
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.WindowsFileParser">
            <summary>  
            Represents a remote Windows file parser
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.WindowsFileParser.DIR">
            <summary> Directory field</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.WindowsFileParser.MIN_EXPECTED_FIELD_COUNT">
            <summary> Number of expected fields</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.WindowsFileParser.log">
            <summary> Logging object</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.WindowsFileParser.format">
            <summary>Date format</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.WindowsFileParser.sep">
            <summary>Splitter token</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.WindowsFileParser.#ctor">
            <summary> Default constructor</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.WindowsFileParser.Parse(System.String)">
            <summary> Parse server supplied string. Should be in
            form 
            <![CDATA[
            05-17-03  02:47PM                70776 ftp.jar
            08-28-03  10:08PM       <DIR>          EDT SSLTest
            ]]>
            </summary>
            <param name="raw">  
            raw string to parse
            </param>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPDataSocket">
            <summary>  Interface for data socket classes, whether active or passive
            
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPDataSocket.sock">
            <summary>  
            The underlying socket 
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPDataSocket.timeout">
            <summary>  
            The timeout for the sockets
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPDataSocket.SetSocketTimeout(com.dsc.kernal.ftp.BaseSocket,System.Int32)">
            <summary>  
            Helper method to set a socket's timeout value
            </summary>
            <param name="sock">socket to set timeout for
            </param>
            <param name="timeout">timeout value to set
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPDataSocket.Close">
            <summary>  Closes underlying socket(s)</summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPDataSocket.Timeout">
            <summary>   
            Get/Set the TCP timeout on the underlying control socket.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPDataSocket.LocalPort">
            <summary> 
            Returns the local port to which this socket is bound. 
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPDataSocket.DataStream">
            <summary>  
            Get the appropriate stream for reading or writing to
            </summary>
            <returns>  
            input or output stream for underlying socket.
            </returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.BytesTransferredEventArgs">
            <summary>
            Event args for BytesTransferred event
            </summary>    
        </member>
        <member name="M:com.dsc.kernal.ftp.BytesTransferredEventArgs.#ctor(System.String,System.Int64)">
            <summary>
            Constructor
            <param name="remoteFile">The name of the file being transferred.</param>
            <param name="byteCount">The current count of bytes transferred.</param>
            </summary>        
        </member>
        <member name="M:com.dsc.kernal.ftp.BytesTransferredEventArgs.#ctor(System.Int64)">
            <summary>
            Constructor
            <param name="byteCount">The current count of bytes transferred.</param>
            </summary>        
        </member>
        <member name="P:com.dsc.kernal.ftp.BytesTransferredEventArgs.ByteCount">
            <summary>
            Gets the byte count.
            </summary>   
        </member>
        <member name="P:com.dsc.kernal.ftp.BytesTransferredEventArgs.RemoteFile">
            <summary>
            Name of the file.
            </summary>   
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPMessageEventArgs">
            <summary>
            Event args for ReplyReceived and CommandSent events
            </summary>    
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPMessageEventArgs.#ctor(System.String)">
            <summary>
            Constructor
            <param name="message"> 
            The message sent to or from the remote host
            </param>
            </summary>        
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPMessageEventArgs.Message">
            <summary>
            Gets the message 
            </summary>   
        </member>
        <member name="T:com.dsc.kernal.ftp.TransferEventArgs">
            <summary>
            Event args for TransferStarted/Complete
            </summary>    
        </member>
        <member name="M:com.dsc.kernal.ftp.TransferEventArgs.#ctor(System.String,com.dsc.kernal.ftp.TransferDirection,com.dsc.kernal.ftp.FTPTransferType)">
            <summary>
            Constructor
            <param name="remoteFilename"> 
            The remote file name to be uploaded or downloaded
            </param>
            <param name="direction"> 
            Upload or download
            </param>
            <param name="transferType"> 
            ASCII or binary
            </param>
            </summary>        
        </member>
        <member name="M:com.dsc.kernal.ftp.TransferEventArgs.#ctor(System.String,System.String,com.dsc.kernal.ftp.TransferDirection,com.dsc.kernal.ftp.FTPTransferType)">
            <summary>
            Constructor
            <param name="localFilePath"> 
            Path of the local file to be uploaded or downloaded (<c>null</c> for <c>Stream</c> and <c>byte[]</c> transfers)
            </param>
            <param name="remoteFilename"> 
            The remote file name to be uploaded or downloaded
            </param>
            <param name="direction"> 
            Upload or download
            </param>
            <param name="transferType"> 
            ASCII or binary
            </param>
            </summary>        
        </member>
        <member name="P:com.dsc.kernal.ftp.TransferEventArgs.LocalFilePath">
            <summary>
            Gets the remote filename 
            </summary>   
        </member>
        <member name="P:com.dsc.kernal.ftp.TransferEventArgs.RemoteFilename">
            <summary>
            Gets the remote filename 
            </summary>   
        </member>
        <member name="P:com.dsc.kernal.ftp.TransferEventArgs.Direction">
            <summary>
            Gets the transfer direction 
            </summary>   
        </member>
        <member name="P:com.dsc.kernal.ftp.TransferEventArgs.TransferType">
            <summary>
            Gets the transfer type 
            </summary>   
        </member>
        <member name="T:com.dsc.kernal.ftp.PortRange">
            <summary>
            Specifies a TCP port range 
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.PortRange.LOW_PORT">
            <summary>
            Lowest port number permitted
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.PortRange.HIGH_PORT">
            <summary>
            Highest port number permitted
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.PortRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="low">low port number</param>
            <param name="high">high port number</param>
        </member>
        <member name="F:com.dsc.kernal.ftp.PortRange.low">
            <summary>
            Low port number in range
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.PortRange.high">
            <summary>
            High port number in range
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.PortRange.LowPort">
            <summary>
            Lowest port number in range
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.PortRange.HighPort">
            <summary>
            Highest port number in range
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.BytesTransferredHandler">
            <summary>
            Delegate used for the BytesTransferred event
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPMessageHandler">
            <summary>
            Delegate used for ReplyReceived and CommandSent events
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.TransferHandler">
            <summary>
            Delegate used for TransferStarted and TransferComplete events
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.TransferDirection">
            <summary>
            Enumerates the possible transfer directions
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.TransferDirection.UPLOAD">
            <member>   
            Represents uploading a file
            </member>
        </member>
        <member name="F:com.dsc.kernal.ftp.TransferDirection.DOWNLOAD">
            <member>   
            Represents downloading a file
            </member>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPConnectMode">
            <summary>
            Enumerates the connect modes that are possible, active and passive
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnectMode.ACTIVE">
            <member>   
            Represents active - PORT - connect mode
            </member>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPConnectMode.PASV">
            <member>   
            Represents passive - PASV - connect mode
            </member>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPTransferType">
            <summary>  
            Enumerates the transfer types possible. We support only the two common types, 
            ASCII and Image (often called binary).
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPTransferType.ASCII">
            <member>   
            Represents ASCII transfer type
            </member>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPTransferType.BINARY">
            <member>   
            Represents Image (or binary) transfer type
            </member>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPClient">
            <summary>  
            Supports client-side FTP. Most common
            FTP operations are present in this class.
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.DEFAULT_MONITOR_INTERVAL">
            <summary> Default byte interval for transfer monitor</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.DEFAULT_BUFFER_SIZE">
            <summary> Default transfer buffer size</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.majorVersion">
            <summary> Major version (substituted by ant)</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.middleVersion">
            <summary> Middle version (substituted by ant)</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.minorVersion">
            <summary> Middle version (substituted by ant)</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.version">
            <summary> Full version</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.buildTimestamp">
            <summary> Timestamp of build</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.BINARY_CHAR">
            <summary>  
            The char sent to the server to set BINARY
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.ASCII_CHAR">
            <summary>  
            The char sent to the server to set ASCII
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.NO_FILES">
            <summary>  
            Server string indicating no files found
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.EMPTY_DIR">
            <summary>  
            Server string indicating no files found
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.NO_DATA_SETS_FOUND">
            <summary>
            Server string for OS/390 indicating no files found
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.TRANSFER_COMPLETE">
            <summary>
            Sometimes returned with 226 in NLST if no files found
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.tsFormat">
            <summary>Date format</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.log">
            <summary> Logging object</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.control">
            <summary>  Socket responsible for controlling
            the connection
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.data">
            <summary>  Socket responsible for transferring
            the data
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.timeout">
            <summary>  Socket timeout for both data and control. In
            milliseconds
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.strictReturnCodes">
            <summary> Use strict return codes if true</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.cancelTransfer">
            <summary>  Can be used to cancel a transfer</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.resume">
            <summary> If true, a file transfer is being resumed</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.deleteOnFailure">
            <summary>If a download to a file fails, delete the partial file</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.resumeMarker">
            <summary> Resume byte marker point</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.monitorInterval">
            <summary> Bytes transferred in between monitor callbacks</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.transferBufferSize">
            <summary> Size of transfer buffers</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.parserCulture">
            <summary>Culture used for parsing file details</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.fileFactory">
            <summary> Parses LIST output</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.transferType">
            <summary>  Record of the transfer type - make the default ASCII</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.connectMode">
            <summary>  Record of the connect mode - make the default PASV (as this was
            the original mode supported)
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.activePortRange">
            <summary>
            Port range for active mode
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.activeIPAddress">
            <summary>
            IP address to send with active mode
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.lastValidReply">
            <summary>
            Holds the last valid reply from the server on the control socket
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.controlPort">
            <summary>
            Port on which we connect to the FTP server and messages are passed
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPClient.remoteHost">
            <summary>
            Remote host we are connecting to
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.#ctor(System.String)">
            <summary>Constructs an <c>FTPClient</c> instance and connects to the FTP server.</summary>
            <param name="remoteHost">The domain-name or IP address of the FTP server.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.#ctor(System.String,System.Int32)">
            <summary>Constructs an <c>FTPClient</c> instance and connects to the FTP server.</summary>
            <param name="remoteHost">The domain-name or IP address of the FTP server.</param>
            <param name="controlPort">The port for control stream (-1 for default port).</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Constructs an <c>FTPClient</c> instance and connects to the FTP server.</summary>
            <param name="remoteHost">The domain-name or IP address of the FTP server.</param>
            <param name="controlPort">The port for control stream (-1 for default port).</param>
            <param name="timeout">The length of the timeout in milliseconds (pass in 0 for no timeout)</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.#ctor(System.Net.IPAddress)">
            <summary>Constructs an <c>FTPClient</c> instance and connects to the FTP server.</summary>
            <param name="remoteAddr">The address of the FTP server.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>Constructs an <c>FTPClient</c> instance and connects to the FTP server.</summary>
            <param name="remoteAddr">The address of the FTP server.</param>
            <param name="controlPort">The port for control stream (-1 for default port).</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.#ctor(System.Net.IPAddress,System.Int32,System.Int32)">
            <summary>Constructs an <c>FTPClient</c> instance and connects to the FTP server.</summary>
            <param name="remoteAddr">The address of the FTP server.</param>
            <param name="controlPort">The port for control stream (-1 for default port).</param>
            <param name="timeout">The length of the timeout in milliseconds (pass in 0 for no timeout)</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.#ctor">
            <summary>Constructs an <c>FTPClient</c>.</summary>
            <remarks>
            The <c>FTPClient</c> will not connect to the FTP server until <see cref="M:com.dsc.kernal.ftp.FTPClient.Connect"/> is called.
            </remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.InitBlock">
            <summary>  
            Instance initializer. Sets formatter to GMT.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Connect">
            <summary>Connect to the FTP server.</summary>
            <remarks>
            <p>
            The <see cref="P:com.dsc.kernal.ftp.FTPClient.RemoteHost"/> property must be set prior to calling this method.
            This method must be called before <see cref="M:com.dsc.kernal.ftp.FTPClient.Login(System.String,System.String)"/> or <see cref="M:com.dsc.kernal.ftp.FTPClient.User(System.String)"/>
            is called.
            </p>
            <p>
            This method will throw an <c>FTPException</c> if the client is already connected to the server.
            </p>
            </remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Initialize(com.dsc.kernal.ftp.FTPControlSocket)">
            <summary>Set the control socket explicitly.</summary>
            <param name="control">Control socket reference.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.CheckConnection(System.Boolean)">
            <summary> 
            Checks if the client has connected to the server and throws an exception if it hasn't.
            This is only intended to be used by subclasses
            </summary>
            <throws>FTPException Thrown if the client has not connected to the server. </throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.DebugResponses(System.Boolean)">
            <summary>Switch debug of responses on or off</summary>
            <param name="on"><c>true</c> if you wish to have responses to
            the log stream, <c>false</c> otherwise.</param>
            <deprecated>
            Use the <see cref="T:com.dsc.kernal.ftp.Logger"/> class to 
            switch debugging on and off.
            </deprecated>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.CancelTransfer">
            <summary>Cancels the current transfer.</summary>
            <remarks>This method is generally called from a separate
            thread. Note that this may leave partially written files on the
            server or on local disk, and should not be used unless absolutely
            necessary. The server is not notified.</remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Login(System.String,System.String)">
            <summary>Login into an account on the FTP server using the user-name and password provided.</summary>
            <remarks>This
            call completes the entire login process. Note that
            <see cref="M:com.dsc.kernal.ftp.FTPClient.Connect"/> must be called first.</remarks>
            <param name="user">User-name.</param>
            <param name="password">Password.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.User(System.String)">
            <summary>
            Supply the user-name to log into an account on the FTP server. 
            Must be followed by the <see cref="M:com.dsc.kernal.ftp.FTPClient.Password(System.String)"/> method.
            Note that <see cref="M:com.dsc.kernal.ftp.FTPClient.Connect"/> must be called first. 
            </summary>
            <param name="user">User-name.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Password(System.String)">
            <summary>
            Supplies the password for a previously supplied
            user-name to log into the FTP server. Must be
            preceeded by the <see cref="M:com.dsc.kernal.ftp.FTPClient.User(System.String)"/> method
            </summary>
            <param name="password">Password.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Quote(System.String,System.String[])">
            <summary>Issue arbitrary ftp commands to the FTP server.</summary>
            <param name="command">FTP command to be sent to server.</param>
            <param name="validCodes">Valid return codes for this command.</param>
            <returns>The text returned by the FTP server.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Size(System.String)">
            <summary>
            Get the size of a remote file. 
            </summary>
            <remarks>
            This is not a standard FTP command, it is defined in "Extensions to FTP", a draft RFC 
            (draft-ietf-ftpext-mlst-16.txt).
            </remarks>
            <param name="remoteFile">Name or path of remote file in current directory.</param>
            <returns>Size of file in bytes.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Resume">
            <summary>Make the next file transfer (put or get) resume.</summary>
            <remarks>
            <p>
            For puts, the
            bytes already transferred are skipped over, while for gets, if 
            writing to a file, it is opened in append mode, and only the bytes
            required are transferred.
            </p>
            <p>
            Currently resume is only supported for BINARY transfers (which is
            generally what it is most useful for). 
            </p>
            </remarks>
            <throws>FTPException</throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.CancelResume">
            <summary> 
            Cancel the resume. Use this method if something goes wrong
            and the server is left in an inconsistent state
            </summary>
            <throws>  SystemException </throws>
            <throws>  FTPException </throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Restart(System.Int64)">
            <summary>Set the REST marker so that the next transfer doesn't start at the beginning of the remote file</summary>
            <remarks>
            Issue the RESTart command to the remote server. This indicates the byte
            position that REST is performed at. For put, bytes start at this point, while
            for get, bytes are fetched from this point.
            </remarks>
            <param name="size">the REST param, the mark at which the restart is performed on the remote file. 
            For STOR, this is retrieved by SIZE</param>
            <throws>SystemException </throws>
            <throws>FTPException </throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Put(System.String,System.String)">
            <summary>
            Put a local file onto the FTP server in the current directory.
            </summary>
            <param name="localPath">Path of the local file.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Put(System.IO.Stream,System.String)">
            <summary>
            Put a stream of data onto the FTP server in the current directory.
            </summary>
            <param name="srcStream">Input stream of data to put.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Put(System.String,System.String,System.Boolean)">
            <summary>
            Put a local file onto the FTP server in the current directory. Allows appending
            if current file exists.
            </summary>
            <param name="localPath">Path of the local file.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Put(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Put a stream of data onto the FTP server in the current directory.  Allows appending
            if current file exists
            </summary>
            <param name="srcStream">Input stream of data to put.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.ValidateTransfer">
            <summary>Validate that the Put() or get() was successful.</summary>
            <remarks>This method is not for general use.</remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.CloseDataSocket">
            <summary>Close the data socket</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.NotifyTransferComplete(System.String,com.dsc.kernal.ftp.TransferDirection,com.dsc.kernal.ftp.FTPTransferType)">
            <summary>
            Notify that a transfer has completed successfully
            </summary>
            <param name="remoteFile">name of the remote file</param>
            <param name="direction">direction of transfer</param>
            <param name="type">ASCII or binary</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.InitPut(System.String,System.Boolean)">
            <summary>Request the server to set up the put.</summary>
            <param name="remoteFile">Name of remote file in current directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.PutASCII(System.String,System.String,System.Boolean)">
            <summary>
            Put as ASCII, i.e. read a line at a time and write
            inserting the correct FTP separator.
            </summary>
            <param name="localPath">Path of the local file.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.PutASCII(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Put as ASCII, i.e. read a line at a time and write
            inserting the correct FTP separator.
            </summary>
            <param name="srcStream">Unput stream of data to put.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.PutBinary(System.String,System.String,System.Boolean)">
            <summary>Put as binary, i.e. read and write raw bytes.</summary>
            <param name="localPath">Path of the local file.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.PutBinary(System.IO.Stream,System.String,System.Boolean)">
            <summary>Put as binary, i.e. read and write raw bytes.</summary>
            <param name="srcStream">Input stream of data to put.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Put(System.Byte[],System.String)">
            <summary>
            Put data onto the FTP server in the current directory.
            </summary>
            <param name="bytes">Array of bytes to put.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Put(System.Byte[],System.String,System.Boolean)">
            <summary>
            Put data onto the FTP server in the current directory. Allows
            appending if current file exists.
            </summary>
            <param name="bytes">Array of bytes to put.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
            <param name="append"><c>true</c> if appending, <c>false</c> otherwise.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Get(System.String,System.String)">
            <summary>
            Get data from the FTP server using the currently
            set transfer mode.
            </summary>
            <param name="localPath">Local file to put data in.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Get(System.IO.Stream,System.String)">
            <summary>
            Get data from the FTP server, using the currently
            set transfer mode.
            </summary>
            <param name="destStream">Data stream to write data to.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.InitGet(System.String)">
            <summary>Request to the server that the get is set up.</summary>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.GetASCII(System.String,System.String)">
            <summary>
            Get as ASCII, i.e. read a line at a time and write
            using the correct newline separator for the OS.
            </summary>
            <param name="localPath">Local file to put data in.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.GetASCII(System.IO.Stream,System.String)">
            <summary>
            Get as ASCII, i.e. read a line at a time and write
            using the correct newline separator for the OS.
            </summary>
            <param name="destStream">Data stream to write data to.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.GetBinary(System.String,System.String)">
            <summary>Get as binary file, i.e. straight transfer of data.</summary>
            <param name="localPath">Local file to put data in.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.GetBinary(System.IO.Stream,System.String)">
            <summary>Get as binary file, i.e. straight transfer of data.</summary>
            <param name="destStream">Stream to write to.</param>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Get(System.String)">
            <summary>Get data from the FTP server.</summary>
            <remarks>
            Transfers in whatever mode we are in. Retrieve as a byte array. Note
            that we may experience memory limitations as the
            entire file must be held in memory at one time.
            </remarks>
            <param name="remoteFile">Name of remote file in current directory.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Site(System.String)">
            <summary>Run a site-specific command on the server.</summary>
            <remarks>
            Support for commands is dependent on the server.
            </remarks>
            <param name="command">The site command to run</param>
            <returns><c>true</c> if command ok, <c>false</c> if command not implemented.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.DirDetails">
            <summary>
            List the current directory's contents as an array of FTPFile objects.
            </summary>
            <remarks>
            This works for Windows and most Unix FTP servers.  Please inform EDT
            about unusual formats (support@enterprisedt.com).
            </remarks>
            <returns>An array of <see cref="T:com.dsc.kernal.ftp.FTPFile"/> objects.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.DirDetails(System.String)">
            <summary>
            List a directory's contents as an array of FTPFile objects.
            </summary>
            <remarks>
            This works for Windows and most Unix FTP servers.  Please inform EDT
            about unusual formats (support@enterprisedt.com). Note that for some
            servers, this will not work from the parent directory of dirname. You
            need to ChDir() into dirname and use DirDetails() (with no arguments).
            </remarks>
            <param name="dirname">Name of directory OR filemask.</param>
            <returns>An array of <see cref="T:com.dsc.kernal.ftp.FTPFile"/> objects.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Dir">
            <summary>
            List current directory's contents as an array of strings of
            filenames.
            </summary>
            <returns>An array of current directory listing strings.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Dir(System.String)">
            <summary>
            List a directory's contents as an array of strings of filenames.
            </summary>
            <param name="dirname">Name of directory OR filemask.</param>
            <returns>An array of directory listing strings.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Dir(System.String,System.Boolean)">
            <summary>
            List a directory's contents as an array of strings.
            </summary>
            <remarks>
            If <c>full</c> is <c>true</c> then a detailed
            listing if returned (if available), otherwise just filenames are provided.
            The detailed listing varies in details depending on OS and
            FTP server. Note that a full listing can be used on a file
            name to obtain information about a file
            </remarks> 
            <param name="dirname">Name of directory OR filemask.</param>
            <param name="full"><c>true</c> if detailed listing required, <c>false</c> otherwise.</param>
            <returns>An array of directory listing strings.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.ReadChunk(System.IO.BinaryReader,System.Byte[],System.Int32)">
            <summary>
            Attempts to read a specified number of bytes from the given 
            <code>BufferedStream</code> and place it in the given byte-array.
            </summary>
            <remarks>
            The purpose of this method is to permit subclasses to execute
            any additional code necessary when performing this operation. 
            </remarks>
            <param name="input">The <code>BinaryReader</code> to read from.</param>
            <param name="chunk">The byte-array to place read bytes in.</param>
            <param name="chunksize">Number of bytes to read.</param>
            <returns>Number of bytes actually read.</returns>
            <throws>SystemException Thrown if there was an error while reading. </throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.ReadChar(System.IO.StreamReader)">
            <summary>Attempts to read a single character from the given <code>StreamReader</code>.</summary>
            <remarks>
            The purpose of this method is to permit subclasses to execute
            any additional code necessary when performing this operation. 
            </remarks>
            <param name="input">The <code>StreamReader</code> to read from.</param>
            <returns>The character read.</returns>
            <throws>SystemException Thrown if there was an error while reading. </throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.ReadLine(System.IO.StreamReader)">
            <summary>
            Attempts to read a single line from the given <code>StreamReader</code>. 
            </summary>
            <remarks>
            The purpose of this method is to permit subclasses to execute
            any additional code necessary when performing this operation. 
            </remarks>
            <param name="input">The <code>StreamReader</code> to read from.</param>
            <returns>The string read.</returns>
            <throws>SystemException Thrown if there was an error while reading. </throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Delete(System.String)">
            <summary>Delete the specified remote file.</summary>
            <param name="remoteFile">Name of remote file to delete.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Rename(System.String,System.String)">
            <summary>Rename a file or directory.</summary>
            <param name="from">Name of file or directory to rename.</param>
            <param name="to">Intended name.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.RmDir(System.String)">
            <summary>Delete the specified remote working directory.</summary>
            <param name="dir">Name of remote directory to delete.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.MkDir(System.String)">
            <summary>Create the specified remote working directory.</summary>
            <param name="dir">Name of remote directory to create.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.ChDir(System.String)">
            <summary>Change the remote working directory to that supplied.</summary>
            <param name="dir">Name of remote directory to change to.</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.CdUp">
            <summary>Change the remote working directory to the parent directory.</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.ModTime(System.String)">
            <summary>Get modification time for a remote file.</summary>
            <param name="remoteFile">Name of remote file.</param>
            <returns>Modification time of file as a <c>DateTime</c>.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Pwd">
            <summary>Get the current remote working directory.</summary>
            <returns>The current working directory.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Features">
            <summary>Get the server supplied features.</summary>
            <returns>
            <c>string</c>-array containing server features, or <c>null</c> if no features or not supported.
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.GetSystem">
            <summary>Get the type of the OS at the server.</summary>
            <returns>The type of server OS.</returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.NoOperation">
            <summary>  
            Send a "no operation" message that does nothing, which can
            be called periodically to prevent the connection timing out.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Help(System.String)">
            <summary>  Get the help text for the specified command
            
            </summary>
            <param name="command"> name of the command to get help on
            </param>
            <returns> help text from the server for the supplied command
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Abort">
            <summary>Abort the current action.</summary>
            <remarks>
            This does not close the FTP session.
            </remarks>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.Quit">
            <summary>Quit the FTP session by sending a <c>QUIT</c> command before closing the socket.</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.QuitImmediately">
            <summary>
            Quit the FTP session immediately by closing the control socket
            without sending the <c>QUIT</c> command.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPClient.#cctor">
            <summary>Work out the version array.</summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.Version">
            <summary>The version of edtFTPj.</summary>
            <value>An <c>int</c> array of <c>{major,middle,minor}</c> version numbers.</value>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.BuildTimestamp">
            <summary>The edtFTPj build timestamp.</summary>
            <value>
            Timestamp of when edtFTPj was build in the format <c>d-MMM-yyyy HH:mm:ss z</c>.
            </value>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.StrictReturnCodes">
            <summary>Controls whether or not checking of return codes is strict.</summary>
            <remarks>
            <p>
            Some servers return non-standard reply-codes.  Setting this property to <c>false</c>
            only the first digit of the reply-code is checked, thus decreasing the sensitivity
            of edtFTPj to non-standard reply-codes.  The default is <c>true</c> meaning that
            reply-codes must match exactly.
            </p>
            </remarks>
            <value>  
            <c>true</c> if strict return code checking, <c>false</c> if non-strict.
            </value>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.Timeout">
            <summary> 
            TCP timeout on the underlying sockets.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.Connected">
            <summary>  
            Is the client currently connected?
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.ConnectMode">
            <summary>
            The connection-mode (passive or active) of data-channels.
            </summary>
            <remarks>
            <p>
            When the connection-mode is active, the server will initiate connections
            to the client, meaning that the client must open a socket and wait for the
            server to connect to it.  This often causes problems if the client is behind
            a firewall.
            </p>
            <p>
            When the connection-mode is passive, the client will initiates connections
            to the server, meaning that the client will connect to a particular socket
            on the server.  This is generally used if the client is behind a firewall.
            </p>
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.IsConnected">
            <summary>
            Indicates whether the client is currently connect with the server.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.TransferNotifyInterval">
            <summary>
            The number of bytes transferred between each notification of the
            <see cref="E:com.dsc.kernal.ftp.FTPClient.BytesTransferred"/> event.
            </summary>
            <remarks>
            Reduce this value to receive more frequent notifications of transfer progress.
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.TransferBufferSize">
            <summary>
            The size of the buffers (in bytes) used in writing to and reading from the data-sockets.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.RemoteHost">
            <summary>
            The domain-name or IP address of the FTP server.
            </summary>
            <remarks>
            <p>This property may only be set if not currently connected.</p>.
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.DeleteOnFailure">
            <summary>
            Controls whether or not a file is deleted when a failure occurs.
            </summary>
            <remarks>
            <p>
            If <c>true</c>, a partially downloaded file is deleted if there
            is a failure during the download.  For example, the connection
            to the FTP server might have failed. If <c>false</c>, the partially
            downloaded file remains on the client machine - and the download
            may be resumed, if it is a binary transfer.
            </p>
            <p>
            By default this flag is set to <c>true</c>.
            </p>
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.ControlPort">
            <summary>
            The port on the server to which to connect the control-channel. 
            </summary>
            <remarks>
            <p>Most FTP servers use port 21 (the default)</p>
            <p>This property may only be set if not currently connected.</p>
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.ParsingCulture">
            <summary>The culture for parsing file listings.</summary>
            <remarks>
            The <see cref="M:com.dsc.kernal.ftp.FTPClient.DirDetails(System.String)"/> method parses the file listings returned.  The names of the file
            can contain a wide variety of characters, so it is sometimes necessary to set this
            property to match the character-set used on the server.
            </remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.FTPFileFactory">
            <summary>
            Override the chosen file factory with a user created one - meaning
            that a specific parser has been selected.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.LastValidReply">
            <summary>The latest valid reply from the server.</summary>
            <value>
            Reply object encapsulating last valid server response.
            </value>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.TransferType">
            <summary>The current file transfer type (BINARY or ASCII).</summary>
            <remarks>When the transfer-type is set to <c>BINARY</c> then files
            are transferred byte-for-byte such that the transferred file will
            be identical to the original.
            When the transfer-type is set to <c>BINARY</c> then end-of-line
            characters will be translated where necessary between Windows and
            UNIX formats.</remarks>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.ActivePortRange">
            <summary>
            Port range for active mode, used only if it is
            necessary to limit the ports to a narrow range specified
            in a firewall
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPClient.ActiveIPAddress">
            <summary>
            Force the PORT command to send a fixed IP address, used only for
            certain firewalls
            </summary>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPClient.TransferStarted">
            <summary>
            Notifies of the start of a transfer.
            </summary>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPClient.TransferStartedEx">
            <summary>
            Notifies of the start of a transfer, and supplies more details than <see cref="E:com.dsc.kernal.ftp.FTPClient.TransferStarted"/>
            </summary>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPClient.TransferComplete">
            <summary>
            Notifies of the completion of a transfer.
            </summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPClient.TransferCompleteEx">
            <summary>
            Notifies of the completion of a transfer, and supplies more details than <see cref="E:com.dsc.kernal.ftp.FTPClient.TransferComplete"/>
            </summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPClient.BytesTransferred">
            <summary>
            Event triggered every time <see cref="P:com.dsc.kernal.ftp.FTPClient.TransferNotifyInterval"/> bytes transferred.
            </summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPClient.CommandSent">
            <summary>
            Triggered every time a command is sent to the server.
            </summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPClient.ReplyReceived">
            <summary>
            Triggered every time a reply is received from the server.
            </summary> 
        </member>
        <member name="T:com.dsc.kernal.factory.EngineConstants">
            <summary>
            常數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.EngineConstants.SQL">
            <summary>
            SQL I/O存取引擎識別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.EngineConstants.SOCKET">
            <summary>
            Socket I/O存取引擎識別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.EngineConstants.XML">
            <summary>
            XML檔案 I/O存取引擎識別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.EngineConstants.ORACLE">
            <summary>
            Oracle I/O存取引擎識別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.EngineConstants.CLIENT">
            <summary>
            Client I/O存取引擎識別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.EngineConstants.HTTP">
            <summary>
            HTTP I/O存取引擎識別, 相同於CLIENT
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.EngineConstants.ODBC">
            <summary>
            ODBC I/O存取引擎識別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.EngineConstants.DB2">
            <summary>
            DB2 I/O存取引擎識別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.EngineConstants.OleDb">
            <summary>
            OleDB I/O 存取引擎識別
            </summary>
        </member>
        <member name="T:com.dsc.kernal.agent.OpenWindowOracleAgent">
            <summary>
            開窗元件所使用的資料物件存取器. 此類別為系統內部使用.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.OpenWindowOracleAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.OpenWindowOracleAgent.queryData(System.String,System.String,System.String,System.String,System.String,System.String,System.String[0:,0:],System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根據設定表TPABYA的設定, 取得開窗後的資料
            </summary>
            <param name="mainEngineType">多資料庫系統中, TPABYA資料庫所位於的資料庫類型</param>
            <param name="mainConnectionString">多資料庫系統中, TPABYA資料庫所位於的資料庫連結字串</param>
            <param name="tableEngineType">欲開窗查詢的資料庫類型</param>
            <param name="tableConnectionString">欲開窗查詢的資料庫連結字串</param>
            <param name="tableID">識別欲開窗的資料表代號, 對應TPABYA001欄位</param>
            <param name="serialNum">識別欲開窗的識別碼, 對應TPABYA002欄位</param>
            <param name="param">指定開窗SQL語法中(TPABYA005), 內部參數(@開頭)的欄位名稱</param>
            <param name="whereClause">需增加的限制條件SQL語句, 不包含where</param>
            <param name="parseMode">是否將param所指定的名稱更新TPABYA005的SQL語句. true:取代; false:保留</param>
            <param name="page">頁碼</param>
            <param name="pagesize">每頁筆數</param>
            <returns>ArrayList: 0: DataObjectSet物件; 1: 各欄位顯示名稱; 2: 各欄位主要屬性; 3: 各欄位次要屬性; 4: 各欄位資料表欄位名稱</returns>
        </member>
        <member name="T:com.dsc.flow.client.UndoApproveForm">
            <summary>
            EasyFlow Client端撤簽公用程序元件. 此版本使用ClientEngine呼叫
            </summary>
        </member>
        <member name="M:com.dsc.flow.client.UndoApproveForm.undoApproveForm(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            撤簽
            </summary>
            <param name="engine">所使用的ClientEngine</param>
            <param name="FormID">EasyFlow端表單代號</param>
            <param name="SheetNo">EasyFlow端表單單號</param>
            <param name="UserID">抽單人員編</param>
            <param name="FlowNo">EasyFlow端關號</param>
            <param name="BranchNo">EasyFlow端支號</param>
            <param name="SerialNo">EasyFlow端簽核序號</param>
            <returns>一維字串陣列, 包含兩個元素. 若第一個元素值為error, 則第二個元素為錯誤訊息. 否則此兩個元素值皆為success</returns>
        </member>
        <member name="T:com.dsc.flow.client.WithDrawForm">
            <summary>
            EasyFlow Client端抽單公用程序元件. 此版本使用ClientEngine呼叫
            </summary>
        </member>
        <member name="M:com.dsc.flow.client.WithDrawForm.withdrawForm(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String)">
            <summary>
            抽單
            </summary>
            <param name="engine">所使用的ClientEngine</param>
            <param name="FormID">EasyFlow端表單代號</param>
            <param name="SheetNo">EasyFlow端表單單號</param>
            <param name="UserID">抽單人員編</param>
            <returns>一維字串陣列, 包含兩個元素. 若第一個元素值為error, 則第二個元素為錯誤訊息. 否則此兩個元素值皆為success</returns>
        </member>
        <member name="T:com.dsc.exception.EngineNotFoundException">
            <summary>
            當無可用引擎的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.EngineNotFoundException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.exception.DataObjectFieldErrorException">
            <summary>
            當資料物件欄位錯誤的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.DataObjectFieldErrorException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.kernal.utility.GlobalProperty">
            <summary>
            取得INI檔案內容物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.GlobalProperty.MAX_ENTRY">
            <summary>
            單一區段內容大小
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadInteger(System.String,System.String,System.Int32)">
            <summary>取得特定區段特定參數的整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadInteger(System.String,System.String)">
            <summary>取得特定區段特定參數的整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadInteger(System.String,System.Int32)">
            <summary>取得目前區段特定參數的整數值</summary>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadInteger(System.String)">
            <summary>取得目前區段特定參數的整數值</summary>
            <param name="key">參數名</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadString(System.String,System.String,System.String)">
            <summary>取得特定區段特定參數的字串值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的字串值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadString(System.String,System.String)">
            <summary>取得特定區段特定參數的字串值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的字串值. 若該區段或參數不存在則回傳空字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadString(System.String)">
            <summary>取得目前區段特定參數的字串值</summary>
            <param name="key">參數名</param>
            <returns>所取得的字串值. 若該區段或參數不存在則回傳空字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadLong(System.String,System.String,System.Int64)">
            <summary>取得特定區段特定參數的長整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadLong(System.String,System.String)">
            <summary>取得特定區段特定參數的長整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadLong(System.String,System.Int64)">
            <summary>取得目前區段特定參數的長整數值</summary>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadLong(System.String)">
            <summary>取得目前區段特定參數的長整數值</summary>
            <param name="key">參數名</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadByteArray(System.String,System.String)">
            <summary>取得特定區段特定參數的Base64字串原始byte[]</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的byte[]. 若該區段或參數不存在則回傳null</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadByteArray(System.String)">
            <summary>取得目前區段特定參數的Base64字串原始byte[]</summary>
            <param name="key">參數名</param>
            <returns>所取得的byte[]. 若該區段或參數不存在則回傳null</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadBoolean(System.String,System.String,System.Boolean)">
            <summary>取得特定區段特定參數的布林值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadBoolean(System.String,System.String)">
            <summary>取得特定區段特定參數的布林值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳false</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadBoolean(System.String,System.Boolean)">
            <summary>取得目前區段特定參數的布林值</summary>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.ReadBoolean(System.String)">
            <summary>取得目前區段特定參數的布林值</summary>
            <param name="key">參數名</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳false</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.String,System.Int32)">
            <summary>將整數值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.Int32)">
            <summary>將整數值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.String,System.String)">
            <summary>將字串值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.String)">
            <summary>將字串值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.String,System.Int64)">
            <summary>將長整數值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.Int64)">
            <summary>將長整數值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.String,System.Byte[])">
            <summary>將byte[]轉換成Base64後寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.Byte[])">
            <summary>將byte[]轉換成Base64後寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>將byte[]轉換成Base64後寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <param name="offset">要開始寫入的索引</param>
            <param name="length">要寫入的byte數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.String,System.Boolean)">
            <summary>將布林值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.Write(System.String,System.Boolean)">
            <summary>將布林值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.DeleteKey(System.String,System.String)">
            <summary>從特定區段刪除參數</summary>
            <param name="section">區段</param>
            <param name="key">要刪除的參數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.DeleteKey(System.String)">
            <summary>從目前區段刪除參數</summary>
            <param name="section">區段</param>
            <param name="key">要刪除的參數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.DeleteSection(System.String)">
            <summary>刪除特定區段</summary>
            <param name="section">要刪除的區段</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.GetSectionNames">
            <summary>取得INI檔案所有區段名稱</summary>
            <returns>包含所有區段名稱的ArrayList</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.GetPropertyNames(System.String)">
            <summary>
            取得特定區段的所有參數名稱
            </summary>
            <param name="secName">區段</param>
            <returns>包含所有參數名稱的ArrayList</returns>
        </member>
        <member name="F:com.dsc.kernal.utility.GlobalProperty.m_Filename">
            <summary>
            INI檔案路徑
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.GlobalProperty.m_Section">
            <summary>
            目前區段
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.getProperty(System.String,System.String)">
            <summary>
            根據區段名稱, 欄位名稱取得內容值
            </summary>
            <param name="secName">區段名稱</param>
            <param name="keyName">欄位名稱</param>
            <returns>內容值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.setProperty(System.String,System.String,System.String)">
            <summary>
            根據區段名稱, 欄位名稱設定內容
            </summary>
            <param name="secName">區段名稱</param>
            <param name="keyName">欄位名稱</param>
            <param name="keyValue">欄位內容</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.getEncodeProperty(System.String,System.String)">
            <summary>
            根據區段名稱, 欄位名稱取得Base64處理過後的字串並還原內容值
            </summary>
            <param name="secName">區段名稱</param>
            <param name="keyName">欄位名稱</param>
            <returns>原始內容</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.setEncodeProperty(System.String,System.String,System.String)">
            <summary>
            根據區段名稱, 欄位名稱, 將欄位內容作Base64轉換後存入
            </summary>
            <param name="secName">區段名稱</param>
            <param name="keyName">欄位名稱</param>
            <param name="keyValue">原始欄位內容</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.load(System.String)">
            <summary>
            取得INI檔案
            </summary>
            <param name="filePath">檔案路徑</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.GlobalProperty.save">
            <summary>
            儲存內容
            </summary>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="P:com.dsc.kernal.utility.GlobalProperty.Filename">
            <summary>取得或設定ini檔案路徑</summary>
            <value>INI檔案路徑</value>
        </member>
        <member name="P:com.dsc.kernal.utility.GlobalProperty.Section">
            <summary>取得或設定目前所處理的區段名稱</summary>
            <value>區段名稱</value>
        </member>
        <member name="T:com.dsc.kernal.utility.DB2Processor">
            <summary>
            存取資料庫基本物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.DB2Processor.cons">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.DB2Processor.trans">
            <summary>
            Transaction物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.#ctor">
            <summary>
            預設建構子，請使用包含連線參數之建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.#ctor(IBM.Data.DB2.DB2Connection)">
            <summary>
            建構子, 傳入此類別所使用的DB2Connection
            </summary>
            <param name="cons">DB2Connection物件</param>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.#ctor(System.String)">
            <summary>
            建構子
            </summary>
            <param name="conString">資料庫連線字串</param>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟transaction
            </summary>
            <param name="isolevel">方式</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.Finalize">
            <summary>
            解構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.Close">
            <summary>
            關閉資料庫連線
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.getDataAdapter(System.String)">
            <summary>
            取得DB2DataAdapter
            </summary>
            <param name="DB2String">查詢的DB2字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.getDataSet(IBM.Data.DB2.DB2DataAdapter,System.String)">
            <summary>
            根據DB2DataAdapter取得DataSet
            </summary>
            <param name="adapter">DB2DataAdapter物件</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.getDataSet(System.String,System.String,System.Int32)">
            <summary>
            根據傳入的DB2查詢命令取得DataSet
            </summary>
            <param name="db2String">DB2查詢命令，必須包含Where 條件句，否則會發生錯誤</param>
            <param name="TableName">DataSet中資料表之名稱</param>
            <param name="RowCount">限制筆數</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.getDataSet(System.String,System.String)">
            <summary>
            根據傳入的DB2查詢命令取得DataSet
            </summary>
            <param name="DB2String">DB2查詢命令</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.updateDataSet(System.Data.DataSet)">
            <summary>
            更新DataSet至DB2
            </summary>
            <param name="dataSet">要更新的DataSet</param>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.getDataAdapter(System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            取得DB2DataAdapter
            </summary>
            <param name="DB2String">查詢的DB2字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據傳入的DB2字串取得DataSet
            </summary>
            <param name="DB2String">DB2字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.updateDataSet(IBM.Data.DB2.DB2DataAdapter,System.Data.DataSet,System.String)">
            <summary>
            將DataSet更新回資料庫
            </summary>
            <param name="adapter">DB2DataAdapter物件</param>
            <param name="dataSet">DataSet物件</param>
            <param name="tableName">更新之DataSet中資料表名稱。null表示全部更新</param>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.getDataReader(System.String)">
            <summary>
            根據DB2字串取得DB2DataReader物件
            </summary>
            <param name="DB2String">DB2字串</param>
            <returns>DB2DataReader物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.executeScalar(System.String)">
            <summary>
            根據DB2字串取得單一數值資料
            </summary>
            <param name="DB2String">DB2字串</param>
            <returns>單一回傳物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.executeSQL(System.String)">
            <summary>
            直接執行DB2字串
            </summary>
            <param name="DB2String">欲執行之DB2字串</param>
            <returns>受影響之資料列數目</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.isEstablished">
            <summary>
            檢查資料庫連線物件是否建立成功
            </summary>
            <returns>true:建立成功; false:建立失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.setConnection(IBM.Data.DB2.DB2Connection)">
            <summary>
            設定此類別所使用的DB2Connection物件
            </summary>
            <param name="connection">DB2Connection物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.exec(System.String)">
            <summary>
            執行StoreProcedure. 回傳DataSet, 回傳值以及Output參數
            </summary>
            <param name="cmdText">要執行的StoreProcedure. 可包含回傳值, Output參數. 所有參數可不需事先宣告</param>
            <returns>ArrayList. 0:DataSet; 1:回傳值; 2:Output參數的Hashtable</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DB2Processor.translateSQLToDB2(System.String)">
            <summary>
            將TSQL語法轉為DB2語法
            </summary>
            <param name="oriSQL">TSQL</param>
            <returns>DB2 語法</returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPActiveDataSocket">
            <summary>  
            Active data socket handling class
            </summary>
            <author>       
            Bruce Blackshaw
            </author>
            <version>      
            $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPActiveDataSocket.acceptedSock">
            <summary>  
            The socket accepted from server
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPActiveDataSocket.#ctor(com.dsc.kernal.ftp.BaseSocket)">
            <summary>  
            Constructor
            </summary>
            <param name="sock">   the server socket to use
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPActiveDataSocket.AcceptConnection">
            <summary> 
            Waits for a connection from the server and then sets the timeout
            when the connection is made.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPActiveDataSocket.Close">
            <summary>
            Closes underlying sockets
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPActiveDataSocket.Timeout">
            <summary>   
            Set the TCP timeout on the underlying data socket(s).
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPActiveDataSocket.DataStream">
            <summary>  
            Accepts the FTP server's connection and returns the socket's stream.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.factory.OracleEngine">
            <summary>
            Oracle Server I/O存取引擎類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.OracleEngine.con">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.OracleEngine.processor">
            <summary>
            資料庫存取類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.#ctor(System.String)">
            <summary>
            建構子, 根據param建立Oracle I/O存取引擎物件
            </summary>
            <param name="param">建構引擎所需參數</param>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟Transaction
            </summary>
            <param name="isolevel">開啟方式, 參閱System.Data.OracleClient.IsolationLevel</param>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.close">
            <summary>
            關閉此I/O
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.getProcessor">
            <summary>
            取得Oracle Server存取物件, 此方法為Oracle I/O存取引擎特有
            </summary>
            <returns>OracleProcessor物件</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.updateData(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.updateDataFormMode(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.updateDataSet(System.Data.DataSet)">
            <summary>
            將DataSet更新至資料庫
            </summary>
            <param name="ds">要更新的DataSet</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.getDataSet(System.String,System.String)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.getDataSetLimit(System.String,System.String,System.Int32)">
            <summary>
            根據sql字串取得限制資料筆數的DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet的TableName</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.refreshData(com.dsc.kernal.databean.DataObject)">
            <summary>
            從I/O方面取得資料更新data資料物件內容
            </summary>
            <param name="data">被更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.executeSQL(System.String)">
            <summary>
            執行Oracle語句
            </summary>
            <param name="Oracle">Oracle</param>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.executeScalar(System.String)">
            <summary>
            執行SQL語句並且回傳值
            </summary>
            <param name="sql">所執行的SQL</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.updateData(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.updateDataFormMode(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O,此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.getWhereSQL(com.dsc.kernal.databean.DataObject,System.String)">
            <summary>
            根據資料物件內容設定, 建立存取I/O時的Oracle條件語句
            </summary>
            <param name="data">資料物件</param>
            <param name="oriOracle">更新前的Oracle語句</param>
            <returns>更新後的Oracle語句</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OracleEngine.exec(System.String)">
            <summary>
            執行StoreProcedure. 可直接撰寫command text, 包含output參數. 不論該storeprocedure是否有回傳值, 可直接寫成 sp_myProc 'xx',@myout output.......
            若該StoreProcedure有回傳DataSet, 則直接取得. 若無, 回傳null
            若該StoreProcedure有return值, 此值會寫在spReturnValue
            若該StoreProceudre有output參數, 回傳參數會以Hashtable放在spOutput中, key為參數名稱, value為值
            </summary>
            <param name="cmdText">要執行的StoreProcedure名稱以及參數. 可不寫上exec或者Execute開頭</param>
            <returns>取得的DataSet</returns>
            <example>
                <code>
               DataSet ds;
               ds = engine.exec("exec testDSO '1808', @name output");
               //取得回傳DataSet
               if (ds == null)
               {
                   Console.WriteLine("ds null");
               }
               else
               {
                   Console.WriteLine(ds.Tables[0].Rows[0]["RESAK001"].ToString());
               }
               //取得回傳值
               Console.WriteLine(engine.spReturnValue.ToString());
               //取得Output參數
               IDictionaryEnumerator ie = engine.spOutput.GetEnumerator();
               while (ie.MoveNext())
               {
                   Console.WriteLine(ie.Key.ToString() + ": " + ie.Value.ToString());
               }
                </code>
            </example>
        </member>
        <member name="T:com.dsc.kernal.factory.IOFactory">
            <summary>
            取得I/O引擎的Factory物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.IOFactory.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.IOFactory.getEngine(System.String,System.String)">
            <summary>
            根據I/O存取引擎識別, 建立I/O引擎物件後回傳
            </summary>
            <param name="engineType">I/O存取引擎識別</param>
            <param name="param">參數</param>
            <returns>I/O引擎物件</returns>
        </member>
        <member name="T:com.dsc.kernal.databean.DataObjectFactory">
            <summary>
            建立資料物件DataObject的XML格式宣告類別. 使用此類別填寫參數後, 呼叫generateXML以便取得XML格式資料物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.init">
            <summary>
            初始化DataObjectFactory物件. 當產生一個XML格式文件後, 呼叫此方法可重新設定. 
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.addFieldDefinition(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            加入欄位定義
            </summary>
            <param name="fieldName">欄位名稱</param>
            <param name="typeField">欄位型態. 為DataObjectConstants中定義</param>
            <param name="lengthField">長度</param>
            <param name="defaultValue">初始值</param>
            <param name="displayName">顯示名稱</param>
            <param name="showName">替換字串</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.addIdentityField(System.String)">
            <summary>
            加入識別欄位
            </summary>
            <param name="fieldName">識別欄位名稱</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.addKeyField(System.String)">
            <summary>
            加入鍵值欄位名稱
            </summary>
            <param name="fieldName">欄位名稱</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.addAllowEmptyField(System.String)">
            <summary>
            加入允許空白欄位
            </summary>
            <param name="fieldName">欄位名稱</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.allowAllFieldEmpty">
            <summary>
            根據fieldDefinition, 將所有欄位全部設定為允許空白
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.addNonUpdateField(System.String)">
            <summary>
            加入不允許更新欄位
            </summary>
            <param name="fieldName">欄位名稱</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.generateObject">
            <summary>
            根據設定直接建立資料物件
            </summary>
            <returns>com.dsc.kernal.databean.DataObject物件</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.generalXML">
            <summary>
            產生XML格式資料物件檔案
            </summary>
            <returns>代表資料物件格式的XML</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.generalXML(com.dsc.kernal.databean.DataObject)">
            <summary>
            根據現有的資料物件建立XML Schema
            </summary>
            <param name="obj">資料物件</param>
            <returns>代表資料物件的XML Schema</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectFactory.transferDataSet(System.Data.DataSet)">
            <summary>
            將DataSet轉置成為DataObjectSet.
            此方法將AssemblyName, ChildClassString, TableName都設定為該Table的名稱，各欄位的顯示名稱為資料表欄位名稱.
            </summary>
            <param name="ds">需轉置的DataSet</param>
            <returns>轉置完成後的DataObjectSet</returns>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObjectFactory.assemblyName">
            <summary>
            設定或取得組件名稱
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObjectFactory.childClassString">
            <summary>
            設定或取得完整類別名稱
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObjectFactory.tableName">
            <summary>
            設定或取得資料表名稱
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObjectFactory.isCheckTimeStamp">
            <summary>
            設定或取得是否檢查時間註記
            </summary>
        </member>
        <member name="T:com.dsc.kernal.batch.JobClient">
            <summary>
            對Queue發送新Job的類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClient.IP">
            <summary>
            Queue伺服器IP
            </summary>
        </member>
        <member name="F:com.dsc.kernal.batch.JobClient.port">
            <summary>
            Queue使用Port, 預設為8488
            </summary>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClient.createJob(System.String,System.String)">
            <summary>
            建立Job
            </summary>
            <param name="jobID">註冊的Job代號, 為完整類別名稱, 例如:SimpleJob.Class1</param>
            <param name="parameter">傳遞至此Job的參數, 為URL格式</param>
            <returns>所建立Job的識別碼</returns>
        </member>
        <member name="M:com.dsc.kernal.batch.JobClient.createJob(System.String,System.String,System.String)">
            <summary>
            建立Job
            </summary>
            <param name="jobID">註冊的Job代號, 為完整類別名稱, 例如:SimpleJob.Class1</param>
            <param name="parameter">傳遞至此Job的參數, 為URL格式</param>
            <param name="depencyID">此工作的相依工作識別碼. 若為獨立工作, 傳入null</param>
            <returns>所建立Job的識別碼</returns>
        </member>
        <member name="T:com.dsc.kernal.agent.OpenWindowAgent">
            <summary>
            開窗元件所使用的資料物件存取器. 此類別為系統內部使用.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.OpenWindowAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.OpenWindowAgent.queryData(System.String,System.String,System.String,System.String,System.String,System.String,System.String[0:,0:],System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根據設定表TPABYA的設定, 取得開窗後的資料
            </summary>
            <param name="mainEngineType">多資料庫系統中, TPABYA資料庫所位於的資料庫類型</param>
            <param name="mainConnectionString">多資料庫系統中, TPABYA資料庫所位於的資料庫連結字串</param>
            <param name="tableEngineType">欲開窗查詢的資料庫類型</param>
            <param name="tableConnectionString">欲開窗查詢的資料庫連結字串</param>
            <param name="tableID">識別欲開窗的資料表代號, 對應TPABYA001欄位</param>
            <param name="serialNum">識別欲開窗的識別碼, 對應TPABYA002欄位</param>
            <param name="param">指定開窗SQL語法中(TPABYA005), 內部參數(@開頭)的欄位名稱</param>
            <param name="whereClause">需增加的限制條件SQL語句, 不包含where</param>
            <param name="parseMode">是否將param所指定的名稱更新TPABYA005的SQL語句. true:取代; false:保留</param>
            <returns>ArrayList: 0: DataObjectSet物件; 1: 各欄位顯示名稱; 2: 各欄位主要屬性; 3: 各欄位次要屬性; 4: 各欄位資料表欄位名稱</returns>
        </member>
        <member name="T:com.dsc.flow.data.ReAssignHistory">
            <summary>
            轉派歷程
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignHistory.reassignToUserName">
            <summary>
            被轉派者姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignHistory.reassignToUserId">
            <summary>
            被轉派者代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignHistory.reassignFromUserName">
            <summary>
            轉派者姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignHistory.reassignFromUserId">
            <summary>
            轉派者代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignHistory.reassignedTime">
            <summary>
            轉派時間
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignHistory.executiveComment">
            <summary>
            轉派意見
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReAssignHistory.reassignmentType">
            <summary>
            轉派類型
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.performType">
            <summary>
            關卡類型. NORMAL:簽核, NOTICE:通知, EXECUTION:會辦
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.activityName">
            <summary>
            關卡名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.performerName">
            <summary>
            處理者
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.executiveResult">
            <summary>
            處理結果
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.comment">
            <summary>
            處理意見
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.performedTime">
            <summary>
            處理時間
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.state">
            <summary>
            狀態. open.not_running.not_started:未開始; open.running:進行中; open.not_running.suspended:已暫停; closed.completed:已完成; closed.aborted:已撤銷; closed.terminated:已中止
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.notifiedName">
            <summary>
            轉寄對象
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.createdTime">
            <summary>
            開始時間
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.processTime">
            <summary>
            花費時間
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.PerformDetail.record">
            <summary>
            轉派紀錄
            </summary>
        </member>
        <member name="T:com.dsc.kernal.utility.ClientProcessor">
            <summary>
            存取資料庫基本物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.ClientProcessor.url">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.ClientProcessor.TransactionKey">
            <summary>
            TransactionKey, 取回資料庫連線物件參考之變數值
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.#ctor">
            <summary>
            預設建構子，請使用包含連線參數之建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.#ctor(System.String)">
            <summary>
            建構子, 傳入此類別所使用的網頁應用程式 Ex.Http://server/utility/sql.aspx
            </summary>
            <param name="cons">網頁應用程式位址</param>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟transaction
            </summary>
            <param name="isolevel">方式</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.Finalize">
            <summary>
            解構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.Close">
            <summary>
            關閉資料庫連線
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.getDataAdapter(System.String)">
            <summary>
            取得SqlDataAdapter
            </summary>
            <param name="sqlString">查詢的SQL字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.getDataSet(System.Data.SqlClient.SqlDataAdapter,System.String)">
            <summary>
            根據SqlDataAdapter取得DataSet
            </summary>
            <param name="adapter">SqlDataAdapter物件</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.getDataSet(System.String,System.String)">
            <summary>
            根據傳入的SQL字串取得DataSet
            </summary>
            <param name="sqlString">SQL字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.getDataSet(System.String,System.String,System.Int32)">
            <summary>
            根據傳入的SQL字串取得DataSet，須包含Where條件句
            </summary>
            <param name="sqlString">SQL字串，必須包含Where條件句</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <param name="rowCount">資料筆數</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據傳入的SQL字串取得DataSet
            </summary>
            <param name="sqlString">SQL字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <param name="param">
            在Inline模式下，會直接使用param[i,0]置換sqlString中的所有參數並去掉頭一個字元，
            在Parameter模式中，param[i,0]為參數名稱,param[i,1]為參數型態，分為STRING與非STRING,param[i,2]為參數值</param>
            <param name="parseMode">參數模式，true為Inline模式，false為Parameter模式</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.updateDataSet(System.Data.DataSet)">
            <summary>
            更新DataSet至資料庫
            </summary>
            <param name="ds">要更新的資料集</param>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.executeSQL(System.String)">
            <summary>
            直接執行SQL字串
            </summary>
            <param name="sqlString">欲執行之SQL字串</param>
            <returns>受影響之資料列數目</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.isEstablished">
            <summary>
            檢查資料庫連線物件是否建立成功
            </summary>
            <returns>true:建立成功; false:建立失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ClientProcessor.exec(System.String)">
            <summary>
            執行StoreProcedure. 回傳DataSet, 回傳值以及Output參數
            </summary>
            <param name="cmdText">要執行的StoreProcedure. 可包含回傳值, Output參數. 所有參數可不需事先宣告</param>
            <returns>ArrayList. 0:DataSet; 1:回傳值; 2:Output參數的Hashtable</returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPPassiveDataSocket">
            <summary>  Passive data socket handling class
            
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPPassiveDataSocket.#ctor(com.dsc.kernal.ftp.BaseSocket)">
            <summary>  
            Constructor
            </summary>
            <param name="sock"> client socket to use
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPPassiveDataSocket.Close">
            <summary>  
            Closes underlying socket
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPPassiveDataSocket.Timeout">
            <summary>   
            Set the TCP timeout on the underlying control socket.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPPassiveDataSocket.DataStream">
            <summary>  
            Gets the stream of the connection
            </summary>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPFile">
            <summary>  
            Represents a remote file (implementation)
            </summary>
            <author>
            Bruce Blackshaw       
            </author>
            <version>      
            $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.UNKNOWN">
            <summary> Unknown remote server type</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.WINDOWS">
            <summary> Windows type</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.UNIX">
            <summary> UNIX type</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.VMS">
            <summary> VMS type</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.format">
            <summary>Date format</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.type">
            <summary> Type of file</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.isLink">
            <summary> Is this file a symbolic link?</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.linkNum">
            <summary> Number of links to file</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.filePermissions">
            <summary> Permission bits string</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.isDir">
            <summary> Is this a directory?</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.fileSize">
            <summary> Size of file</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.fileName">
            <summary> File/dir name</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.linkedFileName">
            <summary> Name of file this is linked to</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.fileOwner">
            <summary> Owner if known</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.userGroup">
            <summary> Group if known</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.lastModifiedTime">
            <summary> Last modified</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPFile.rawRep">
            <summary> Raw string</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFile.#ctor(System.Int32,System.String,System.String,System.Int64,System.Boolean,System.DateTime@)">
            <summary> 
            Constructor
            </summary>
            <param name="type">         
            type of file
            </param>
            <param name="raw">          
            raw string returned from server
            </param>
            <param name="name">         
            name of file
            </param>
            <param name="size">         
            size of file
            </param>
            <param name="isDir">        
            true if a directory
            </param>
            <param name="lastModifiedTime"> 
            last modified timestamp
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFile.#ctor(System.String,System.Int64,System.Boolean,System.DateTime)">
            <summary> 
            Constructor
            </summary>
            <param name="name">         
            name of file
            </param>
            <param name="size">         
            size of file
            </param>
            <param name="isDir">        
            true if a directory
            </param>
            <param name="lastModifiedTime"> 
            last modified timestamp
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPFile.ToString">
            <returns> 
            string representation
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.Type">
            <summary> 
            Get the type of file, eg UNIX
            </summary>
            <returns> the integer type of the file
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.Name">
            <returns> 
            Returns the name.
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.Raw">
            <returns> 
            Returns the raw server string.
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.LinkCount">
            <returns> 
            Returns or sets the number of links to the file
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.Link">
            <returns> 
            Is this file a link
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.LinkedName">
            <returns> 
            Returns the linked name.
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.Group">
            <returns> 
            Gets or sets the group.
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.Owner">
            <returns> 
            Gets or sets the owner.
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.Dir">
            <returns> 
            Gets or sets whether this is a directory
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.Permissions">
            <returns> 
            Gets or sets the permissions.
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.LastModified">
            <returns> 
            Gets last modified timestamp
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPFile.Size">
            <returns> 
            Gets size of file
            </returns>
        </member>
        <member name="T:com.dsc.kernal.db.ConnectStringFactory">
            <summary>
            取得特定連線字串取得方法之工廠類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.db.ConnectStringFactory.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.db.ConnectStringFactory.getConnectStringObject(System.String,System.String)">
            <summary>
            取得資料庫連線字串
            </summary>
            <param name="assemblyName">資料庫連線字串取得類別的組件名稱</param>
            <param name="childClassString">資料庫連線字串取得類別的類別名稱</param>
            <returns>資料庫連線類型字串物件</returns>
        </member>
        <member name="T:com.dsc.flow.data.SignOpinion">
            <summary>
            流程意見類別
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.SHOW_ALL">
            <summary>
            顯示所有流程意見
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.SHOW_NOT_EMPTY">
            <summary>
            顯示已簽核流程意見
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.workItemOID">
            <summary>
            此簽核意見關卡的工作項目識別號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.performerID">
            <summary>
            使用者ID
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.performerName">
            <summary>
            使用者姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.executiveResult">
            <summary>
            簽核結果
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.executiveComment">
            <summary>
            簽核意見
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.completedTimeLabel">
            <summary>
            簽核時間
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.name">
            <summary>
            關卡名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.SignOpinion.workItemStateType">
            <summary>
            狀態
            </summary>
        </member>
        <member name="T:com.dsc.flow.data.ReserveNoCmDocInfo">
            <summary>
            預留一個無版本控管的文件，傳入參數為原始檔案名稱（可為空白），若新增成功回傳值為XML格式的字串
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReserveNoCmDocInfo.docServerId">
            <summary>
            實體檔案應放置的文件主機的主機代號，實際的主機位址可由系統管理員內得知
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReserveNoCmDocInfo.filePathToSave">
            <summary>
            實體檔案應放置的相對路徑，即文件主機上此目錄
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReserveNoCmDocInfo.OID">
            <summary>
            無版本文件在資料庫表格NoCmDocument的OID，即附加在表單實例上時附件的OID
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ReserveNoCmDocInfo.physicalName">
            <summary>
            實體檔案需命名為此字串再加上原始的副檔名
            </summary>
        </member>
        <member name="T:com.dsc.exception.FormatErrorException">
            <summary>
            當格式錯誤的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.FormatErrorException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.exception.FileNotFoundException">
            <summary>
            當欄位未找到的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.FileNotFoundException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.exception.ConnectionWaitTimeOutException">
            <summary>
            當連線逾時使用的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.ConnectionWaitTimeOutException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.locale.LocaleString">
            <summary>
            取得語系檔內容的字串, 並且替換內文
            </summary>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getKernalLocaleString(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            取得系統核心的訊息字串
            </summary>
            <param name="fileName">核心檔案名稱, ex:com.dll.language.ini</param>
            <param name="secName">ini的節段名稱</param>
            <param name="paramName">ini的參數名稱</param>
            <param name="defaultValue">預設值</param>
            <param name="param">替代參數</param>
            <returns>該語系的字串</returns>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getOnlineHelpString(System.String,System.String,System.String)">
            <summary>
            取得線上說明的訊息字串
            </summary>
            <param name="programid">程式代碼</param>
            <param name="paramName">ini的參數名稱</param>
            <param name="defaultValue">預設值</param>
            <returns>該語系的字串</returns>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getAuthItemString(System.String,System.String)">
            <summary>
            取得權限項目的訊息字串
            </summary>
            <param name="authid">權限項目代碼(SMSAAAA002)</param>
            <param name="defaultValue">預設值</param>
            <returns>該語系的字串</returns>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getMainFrameLocaleString(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            取得系統框架的訊息字串
            </summary>
            <param name="fileName">框架檔案名稱, ex:MainFrame.js.language.ini</param>
            <param name="secName">ini的節段名稱</param>
            <param name="paramName">ini的參數名稱</param>
            <param name="defaultValue">預設值</param>
            <param name="param">替代參數</param>
            <returns>該語系的字串</returns>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getMenuLocaleString(System.String,System.String,System.Boolean)">
            <summary>
            取得系統選單語言字串
            </summary>
            <param name="progID">程式/選單代號</param>
            <param name="defaultValue">預設顯示名稱</param>
            <param name="isSystemMenu">true:選單架構; false:程式代碼</param>
            <returns>該語系顯示名稱</returns>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getUILocaleString(System.String,System.String,System.String,System.Boolean)">
            <summary>
            取得畫面語言字串
            </summary>
            <param name="className">類別名稱</param>
            <param name="fieldID">畫面欄位代號</param>
            <param name="defaultValue">預設顯示名稱</param>
            <param name="isSystemUI">true:系統UI; false:專案UI</param>
            <returns>該語系顯示名稱</returns>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getDefaultXMLLocaleString(System.String,System.String,System.String,System.Boolean)">
            <summary>
            取得Naming, NameLess資料物件語言字串
            </summary>
            <param name="childClassString">完整類別名稱</param>
            <param name="fieldName">欄位名稱</param>
            <param name="defaultValue">預設顯示名稱</param>
            <param name="isDisplayName">true:取得顯示名稱; false:取得替換字串showName</param>
            <returns>該語系顯示名稱</returns>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getTPABYALocaleString(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="BYA001">TPABYA資料表BYA001欄位</param>
            <param name="BYA002">TPABYA資料表BYA002欄位</param>
            <param name="fieldName">欄位名稱</param>
            <param name="defaultValue">預設顯示名稱</param>
            <param name="isDisplayName">true:取得顯示名稱; false:取得替換字串showName 目前無效果</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getSystemMessageString(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            取得系統訊息字串
            </summary>
            <param name="fileName">檔案名稱, ex:MainFrame.js.language.ini</param>
            <param name="secName">ini的節段名稱</param>
            <param name="paramName">ini的參數名稱</param>
            <param name="defaultValue">預設值</param>
            <param name="param">替代參數</param>
            <returns>該語系的字串</returns>
        </member>
        <member name="M:com.dsc.locale.LocaleString.getMessageString(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            取得訊息字串
            </summary>
            <param name="fileName">檔案名稱, ex:MainFrame.js.language.ini</param>
            <param name="secName">ini的節段名稱</param>
            <param name="paramName">ini的參數名稱</param>
            <param name="defaultValue">預設值</param>
            <param name="param">替代參數</param>
            <returns>該語系的字串</returns>
        </member>
        <member name="T:com.dsc.kernal.standalone.ConsoleBase">
             <summary>
             批次作業Console Program方式之基礎類別. 此類別提供Log紀錄動作以及Setting.ini檔內容讀取動作. 使用方式見SampleConsoleBatch類別
             <script>
            public class Program:ConsoleBase
            {
                static void Main(string[] args)
                {
                    m_args = args;
                    settingPath = @"C:\mySetting.ini";//指定參數檔路徑. 若不指定, 預設參數檔為執行路徑下的setting.ini
                    new Program();
                    
                }
                protected override void run(string[] args)
                {
                    //這裡可以撰寫批次執行動作
                    //1. 如果執行目錄下有setting.ini, 且該檔案有[global]區, 該區下的參數會寫到settings (Hashtable).
                    //2. 如果有設定connectString以及engineType參數, 則會自動建立engine物件. 此物件使用完畢不須close(), 
                    //   PR僅負責處理startTransaction以及commit, rollback即可
                    //3. 此區塊不需要整個用try...catch包起來
                    //4. 撰寫過程中如果需要在log註記進度, 可使用writeLog方法
                    
                }
            }    
             </script>    
             </summary>
        </member>
        <member name="F:com.dsc.kernal.standalone.ConsoleBase.progressFile">
            <summary>
            與BatchRun溝通檔案
            </summary>
        </member>
        <member name="F:com.dsc.kernal.standalone.ConsoleBase.logFile">
            <summary>
            Log檔案實體路徑
            </summary>
        </member>
        <member name="F:com.dsc.kernal.standalone.ConsoleBase.m_args">
            <summary>
            傳入之Console Program Arguments
            </summary>
        </member>
        <member name="F:com.dsc.kernal.standalone.ConsoleBase.engine">
            <summary>
            根據Setting.ini檔案中的connectString以及engineType參數所建立之I/O引擎物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.standalone.ConsoleBase.settings">
            <summary>
            對應Setting.ini檔案的Hashtable. Key值為參數名稱, Value為參數內容
            </summary>
        </member>
        <member name="F:com.dsc.kernal.standalone.ConsoleBase.settingPath">
            <summary>
            預設設定檔的路徑與檔名
            </summary>
        </member>
        <member name="M:com.dsc.kernal.standalone.ConsoleBase.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.standalone.ConsoleBase.start">
            <summary>
            啟動執行
            </summary>
        </member>
        <member name="M:com.dsc.kernal.standalone.ConsoleBase.run(System.String[])">
            <summary>
            實際執行動作的方法. 此方法必須實作
            </summary>
            <param name="args">命令列參數</param>
        </member>
        <member name="M:com.dsc.kernal.standalone.ConsoleBase.querySetting">
            <summary>
            取得Setting.ini內容. 此方法可被覆寫. 預設設定檔為執行檔執行路徑下的Setting.ini, 參數僅能取得[global]區段內容
            </summary>
        </member>
        <member name="M:com.dsc.kernal.standalone.ConsoleBase.writeLog(System.String)">
            <summary>
            將errMsg內容寫入LogFile
            </summary>
            <param name="errMsg">欲寫入的訊息</param>
        </member>
        <member name="M:com.dsc.kernal.standalone.ConsoleBase.writeLine(System.IO.StreamWriter,System.String)">
            <summary>
            寫入內容. 實際將msg寫入檔案, 並傾印到螢幕
            </summary>
            <param name="sw">Log檔案的StreamWriter物件</param>
            <param name="msg">欲寫入的訊息</param>
        </member>
        <member name="T:com.dsc.kernal.security.TriDESecurity">
            <summary>
            TriDES加密法類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.security.TriDESecurity.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.security.TriDESecurity.getPublicKey">
            <summary>
            取得加密鑰匙
            </summary>
            <returns>加解密鑰匙</returns>
        </member>
        <member name="M:com.dsc.kernal.security.TriDESecurity.encrypt(System.String,System.Byte[])">
            <summary>
            加密資料
            </summary>
            <param name="key">加密鑰匙</param>
            <param name="orivalue">明碼文</param>
            <returns>密碼文</returns>
        </member>
        <member name="M:com.dsc.kernal.security.TriDESecurity.decrypt(System.String,System.Byte[])">
            <summary>
            解密資料
            </summary>
            <param name="key">解密鑰匙.</param>
            <param name="orivalue">密碼文</param>
            <returns>明碼文</returns>
        </member>
        <member name="T:com.dsc.kernal.logon.LogonFactory">
            <summary>
            取得特定登入驗證方法之工廠類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.logon.LogonFactory.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.logon.LogonFactory.getLogonObject(System.String,System.String)">
            <summary>
            取得登入驗證物件
            </summary>
            <param name="assemblyName">登入驗證模組組件名稱</param>
            <param name="childClassString">登入驗證模組物件類別名稱</param>
            <returns>登入驗證物件</returns>
        </member>
        <member name="T:com.dsc.kernal.agent.DeepAgent">
            <summary>
            取得單頭包含多筆單身資料物件的代理器. 此類別為基底類別, 需撰寫各自的代理器繼承此類別, 並在建構子中設定存取參數.
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.DeepAgent.mDefinitionXML">
            <summary>
            定義多單身的資料結構XML
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.#ctor(System.String)">
            <summary>
            建構子, 根據傳入的參數建立SQL Server存取引擎物件
            </summary>
            <param name="param">SQL Server資料庫連結參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.#ctor(System.String,System.String)">
            <summary>
            建構子, 根據傳入的參數建立不同的I/O存取引擎
            </summary>
            <param name="engineType">I/O引擎識別字串, 參考com.dsc.kernal.factory.EngineConstants類別</param>
            <param name="param">參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.#ctor(com.dsc.kernal.factory.AbstractEngine)">
            <summary>
            根據所建立的I/O存取引擎參數建立此代理器物件
            </summary>
            <param name="engine">I/O存取引擎物件</param>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.update">
            <summary>
            更新資料物件
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.updateFormMode">
            <summary>
            更新資料庫資料. 此方法速度快, 但資料庫不得存在該筆資料. 使用於表單資料更新
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.queryHead(System.String)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.queryHead(System.String,System.Int32)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料. 此方法需由繼承類別實作
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.queryChild(com.dsc.kernal.databean.DataObject)">
            <summary>
            查詢data單頭的所有單身資料
            </summary>
            <param name="data">單頭資料物件</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.createEmptyDataObjectSet(System.String)">
            <summary>
            根據tableName建立空的DataObjectSet. 此DataObjectSet已經設定好相關參數
            </summary>
            <param name="tableName">要建立的DataObjectSet物件參考的tableName</param>
            <returns>DataObjectSet</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.queryChild(com.dsc.kernal.databean.DataObject,System.String[])">
            <summary>
            以whereClause為條件查詢data單頭的單身資料
            </summary>
            <param name="data">單頭物件</param>
            <param name="whereClause">查詢條件</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.query(System.String)">
            <summary>
            取得資料物件
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.DeepAgent.query(System.String,System.Int32)">
            <summary>
            取得完整資料物件. 此方法需由繼承類別實作.
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="P:com.dsc.kernal.agent.DeepAgent.DefinitionXML">
            <summary>
            定義多單身的資料結構XML
            </summary>
        </member>
        <member name="T:com.dsc.flow.data.ProcessPackage">
            <summary>
            流程引擎所有流程基本資訊
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.OID">
            <summary>
            流程識別碼
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.id">
            <summary>
            流程代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.name">
            <summary>
            流程名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.version">
            <summary>
            流程版本
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.publicationStatus">
            <summary>
            發布狀態
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.categoryOID">
            <summary>
            流程類別識別碼
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.categoryName">
            <summary>
            流程類別名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.userDefineMode">
            <summary>
            使用者定義模式
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.isUserInputSubject">
            <summary>
            是否自訂主旨
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.subjectTemplate">
            <summary>
            主旨樣板
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.firstActIsReqstPerform">
            <summary>
            第一個活動是否為Request
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.activityArray">
            <summary>
            此流程所擁有的Activity
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessPackage.relevantDataArray">
            <summary>
            此流程所擁有的流程參數
            </summary>
        </member>
        <member name="T:com.dsc.flow.data.ProcessInstance">
            <summary>
            代表簡單流程實例的物件類別
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessInstance.processId">
            <summary>
            流程定義代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessInstance.processName">
            <summary>
            流程名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessInstance.createdTime">
            <summary>
            流程發起時間
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessInstance.requesterId">
            <summary>
            發起者代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessInstance.requesterName">
            <summary>
            發起者姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessInstance.state">
            <summary>
            流程狀態
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessInstance.OID">
            <summary>
            流程實例識別碼
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessInstance.serialNo">
            <summary>
            流程實例序號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.ProcessInstance.subject">
            <summary>
            主旨
            </summary>
        </member>
        <member name="T:com.dsc.flow.client.ApproveForm">
            <summary>
            EasyFlow Client端簽核公用程序元件. 此版本使用ClientEngine呼叫
            </summary>
        </member>
        <member name="M:com.dsc.flow.client.ApproveForm.approveForm(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            簽核
            </summary>
            <param name="engine">所使用的ClientEngine</param>
            <param name="UserID">簽核人員編</param>
            <param name="FormID">EasyFlow端表單代號</param>
            <param name="SheetNo">EasyFlow端表單單號</param>
            <param name="FlowNo">EasyFlow端關號</param>
            <param name="BranchNo">EasyFlow端支號</param>
            <param name="SerialNo">EasyFlow端流水號</param>
            <param name="ApproveNo">EasyFlow端簽核序號</param>
            <param name="result">簽核結果, 1:同意, 2:不同意; 3:重辦; 4:會辦</param>
            <param name="Opinion">簽核意見</param>
            <param name="BackwardFlowNo">重辦時回去關卡. 若重辦回填表人, 填入Author</param>
            <returns>若成功, 則回傳1=未完成, 2=同意, 3=不同意, 4=已抽單, 否則回傳錯誤訊息</returns>
        </member>
        <member name="T:com.dsc.exception.NoSuchEngineException">
            <summary>
            當引擎種類不合法的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.NoSuchEngineException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.kernal.utility.TransmitVerification">
            <summary>
            產生傳輸驗證的靜態類別方法
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.TransmitVerification.generateHash(System.String)">
            <summary>
            根據userid產生驗證合法性的HashCode
            </summary>
            <param name="userid">使用者代號</param>
            <returns>被驗證的Hashcode</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.TransmitVerification.verificationHash(System.String,System.String)">
            <summary>
            根據userid以及HashCode驗證是否合法(Server端驗證使用)
            </summary>
            <param name="userid">使用者代號</param>
            <param name="hash">被驗證的Hashcode</param>
            <returns>true:合法; false:不合法</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.TransmitVerification.verificationHash(System.String,System.String,System.Boolean)">
            <summary>
            根據userid以及HashCode驗證是否合法.
            </summary>
            <param name="userid">使用者代號</param>
            <param name="hash">被驗證的Hashcode</param>
            <param name="isClient">true: 此驗證位於Client端; false: 此驗證位於Server端</param>
            <returns>true:合法; false:不合法</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.TransmitVerification.calHash(System.String,System.String)">
            <summary>
            此方法產生驗證合法性的HashCode演算法實體
            </summary>
            <param name="userid">不說明</param>
            <param name="ts">不說明</param>
            <returns>被驗證的Hashcode</returns>
        </member>
        <member name="T:com.dsc.kernal.utility.IDProcessor">
            <summary>
            取得唯一識別碼的工具類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.IDProcessor.getID(System.String)">
            <summary>
            根據prefix取得唯一識別碼. 此方法會將prefix加入在所取得的識別碼之前
            </summary>
            <param name="prefix">prefix</param>
            <returns>唯一識別碼</returns>
        </member>
        <member name="T:com.dsc.kernal.socket.AbstractSocketImp">
            <summary>
            SocketService所呼叫之執行方法物件之基底類別. 透過DSCSocketService公用服務接受SocketClient呼叫後, 伺服器端方法須繼承此類別後實作.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.socket.AbstractSocketImp.sendData(System.Net.Sockets.TcpClient,System.String)">
            <summary>
            將資料傳給Client端
            </summary>
            <param name="acceptClient">與Client保持連線之物件</param>
            <param name="data">欲回傳之資料</param>
        </member>
        <member name="M:com.dsc.kernal.socket.AbstractSocketImp.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.socket.AbstractSocketImp.execute(System.Collections.ArrayList,System.Net.Sockets.TcpClient,System.String)">
            <summary>
            執行方法
            </summary>
            <param name="clientPool">與伺服器連線中的所有TcpClient物件集合. 可用於廣播</param>
            <param name="currentClient">目前執行此物件方法的TcpClient物件</param>
            <param name="data">接受之資料</param>
        </member>
        <member name="M:com.dsc.kernal.socket.AbstractSocketImp.terminate">
            <summary>
            停止執行
            </summary>
        </member>
        <member name="T:com.dsc.kernal.security.DESSecurity">
            <summary>
            DES加密法類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.security.DESSecurity.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.security.DESSecurity.getPublicKey">
            <summary>
            取得加密鑰匙
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.security.DESSecurity.encrypt(System.String,System.Byte[])">
            <summary>
            加密資料
            </summary>
            <param name="key">加密鑰匙</param>
            <param name="orivalue">明碼文</param>
            <returns>密碼文</returns>
        </member>
        <member name="M:com.dsc.kernal.security.DESSecurity.decrypt(System.String,System.Byte[])">
            <summary>
            解密資料
            </summary>
            <param name="key">解密鑰匙.</param>
            <param name="orivalue">密碼文</param>
            <returns>明碼文</returns>
        </member>
        <member name="T:com.dsc.kernal.mail.MailFactory">
            <summary>
            取得寄發Email元件之工廠類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.mail.MailFactory.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.mail.MailFactory.getMailUtility(System.String,System.String)">
            <summary>
            取得EMAIL寄發物件
            </summary>
            <param name="assemblyName">EMAIL寄發組件名稱</param>
            <param name="childClassString">EMAIL寄發物件類別名稱</param>
            <returns>EMAIL寄發物件</returns>
        </member>
        <member name="T:com.dsc.flow.server.AbstractFlowAdapter">
            <summary>
            流程相關處理的底層抽象類別
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.LogPath">
            <summary>
            Log檔路徑
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.Debug">
            <summary>
            是否將流程引擎回傳XML寫入Log
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.StandardGPWebService">
            <summary>
            流程引擎WebService路徑一
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.DotJWebService">
            <summary>
            流程引擎WebService路徑二
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.LoginID">
            <summary>
            登入帳號
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.Password">
            <summary>
            登入密碼
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.SessionID">
            <summary>
            登入後識別
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.Locale">
            <summary>
            語系
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.SenderIP">
            <summary>
            SenderIP
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.ReceiverIP">
            <summary>
            ReceiverIP
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.EFSiteName">
            <summary>
            EFSiteName
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.ErrorString">
            <summary>
            錯誤訊息
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.retryTimes">
            <summary>
            執行失敗時重新執行的次數。預設為1(代表僅執行1次)
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.retryWaitingTime">
            <summary>
            執行失敗後重新執行下一次前的等待時間，單位為毫秒。預設為1000毫秒(1秒)
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.client">
            <summary>
            第一個預設呼叫WebService的WSDLClient物件
            </summary>
        </member>
        <member name="F:com.dsc.flow.server.AbstractFlowAdapter.client2">
            <summary>
            第二個保留用呼叫WebService的WSDLClient物件
            </summary>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.writeLog(System.String)">
            <summary>
            寫入Log檔公用程式. 此方法僅在Debug=true時寫入
            </summary>
            <param name="logStr">要紀錄之訊息</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.init(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            初始化流程引擎
            </summary>
            <param name="m_StandardGPWebService">預設WebService使用之組件名稱</param>
            <param name="m_DotJWebService">保留WebService使用之組件名稱</param>
            <param name="mLoginID">登入帳號</param>
            <param name="mPassword">登入密碼</param>
            <param name="mLocale">登入語系</param>
            <param name="mSenderIP">發送者的IP</param>
            <param name="mReceiverIP">接收者的IP</param>
            <param name="mEFSiteName"></param>
            <param name="logPath">紀錄Log的路徑</param>
            <param name="debug">是否要紀錄Log</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchProcessPackage">
            <summary>
            取得流程引擎所有流程資料
            </summary>
            <returns>com.dsc.flow.data.ProcessPackage物件陣列</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.getProcessPackage(com.dsc.flow.data.ProcessPackage)">
            <summary>
            取得指定流程代號的詳細資料
            </summary>
            <param name="processPackage">流程物件</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.getReserveNoCmDocInfo(System.String)">
            <summary>
            ISO文管模組_GP檔案編碼與上傳路徑資訊
            </summary>
            <param name="FileName">上傳檔案名稱</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.getProcessPackageXML(System.String)">
            <summary>
            取得指定流程代號的詳細資料
            </summary>
            <param name="processPackageID">流程代號</param>
            <returns>流程詳細資料XML</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.getReserveNoCmDocInfoXML(System.String)">
            <summary>
            ISO文管模組_GP檔案編碼與上傳路徑資訊XML
            </summary>
            <param name="fileName">上傳檔案名稱</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.logout">
            <summary>
            登出
            </summary>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.acceptWorkItem(System.String,System.String)">
            <summary>
            在單一簽核狀態下, 取出待辦事項
            </summary>
            <param name="userID">要取出的使用者代號</param>
            <param name="workItemOID">工作項目識別號</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.invokeProcess(System.String,System.String,System.String,System.String)">
            <summary>
            啟動流程
            </summary>
            <param name="processID">流程定義代號</param>
            <param name="requesterID">流程發起人</param>
            <param name="orgID">流程發起部門</param>
            <param name="subject">主旨</param>
            <returns>流程實例序號</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.invokeProcessByParameter(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            啟動流程(送入一組參數)
            </summary>
            <param name="processID">流程定義代號</param>
            <param name="requesterID">流程發起人</param>
            <param name="orgID">流程發起部門</param>
            <param name="parameterID">流程參數代號</param>
            <param name="parameterValue">參數內容</param>
            <param name="subject">主旨</param>
            <returns>流程實例序號</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.invokeProcessByFormParameter(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            啟動流程(送入表單內容XML)
            </summary>
            <param name="processID">流程定義代號</param>
            <param name="requesterID">流程發起人</param>
            <param name="orgID">流程發起部門</param>
            <param name="formOID">表單識別號</param>
            <param name="formXML">單據FormVariable</param>
            <param name="subject">主旨</param>
            <returns>流程實例序號</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.invokeProcessByFormParameterAndAddCusAct(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            啟動流程(送入表單內容XML)以及自訂流程
            </summary>
            <param name="processID">流程定義代號</param>
            <param name="requesterID">流程發起人</param>
            <param name="orgID">流程發起部門</param>
            <param name="formOID">表單識別號</param>
            <param name="formXML">單據FormVariable</param>
            <param name="subject">主旨</param>
            <param name="actDef">自訂流程內容</param>
            <returns>流程實例序號</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchPerformableWorkItems(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            取得待辦事項列表
            </summary>
            <param name="userID">要查詢的使用者</param>
            <param name="pageSize">每頁筆數</param>
            <param name="pageNo">頁數</param>
            <param name="searchByWorkItemName">工作名稱</param>
            <param name="searchByProcessSubject">主旨</param>
            <param name="searchByProcessSerialNumber">流程實例序號</param>
            <param name="searchByWorkitemCreatedTimeFrom">工作建立時間起</param>
            <param name="searchByWorkitemCreatedTimeTo">工作建立時間迄</param>
            <param name="searchByWorkAssignmentType">流程指派狀態</param>
            <param name="searchByProcessID">流程定義序號</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchPerformableWorkItems(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,com.dsc.kernal.factory.AbstractEngine)">
            <summary>
            取得待辦事項列表
            </summary>
            <param name="userID">要查詢的使用者</param>
            <param name="pageSize">每頁筆數</param>
            <param name="pageNo">頁數</param>
            <param name="searchByWorkItemName">工作名稱</param>
            <param name="searchByProcessSubject">主旨</param>
            <param name="searchByProcessSerialNumber">流程實例序號</param>
            <param name="searchByWorkitemCreatedTimeFrom">工作建立時間起</param>
            <param name="searchByWorkitemCreatedTimeTo">工作建立時間迄</param>
            <param name="searchByWorkAssignmentType">流程指派狀態</param>
            <param name="searchByProcessID">流程定義序號</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.completeWorkItem(System.String,System.String,System.String,System.String)">
            <summary>
            送出簽核(准)
            </summary>
            <param name="userID">送出動作的使用者ID</param>
            <param name="workItemOID">工作項目OID</param>
            <param name="executiveResult">意見表達結果</param>
            <param name="executiveComment">簽核意見</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.terminateProcess(System.String,System.String,System.String,System.String)">
            <summary>
            終止流程(不准)
            </summary>
            <param name="userID">送出動作的使用者ID</param>
            <param name="processSerialNumber">流程實例序號</param>
            <param name="executiveResult">意見表達結果</param>
            <param name="executiveComment">簽核意見</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchWorkFlowDiagram(System.String,System.String)">
            <summary>
            取得指定流程實例序號流程圖
            </summary>
            <param name="processSerialNumber">流程實例序號</param>
            <param name="localFilePath">暫存檔案(須包含完整路徑以及檔名)</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchProcessComments(System.String,System.String)">
            <summary>
            取得指定流程實例序號的簽核意見
            </summary>
            <param name="processSerialNumber">流程實例序號</param>
            <param name="opinionType">0:顯示所有簽核結果;1:僅顯示已簽核結果</param>
            <returns>SignOpinion物件陣列</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.abortProcessForSerialNo(System.String,System.String)">
            <summary>
            撤銷流程
            </summary>
            <param name="processSerialNumber">流程實例序號</param>
            <param name="executiveComment">撤銷意見</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.reexecuteActivity(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            退回重辦
            </summary>
            <param name="userID">處理者代號</param>
            <param name="processSerialNumber">流程實例序號</param>
            <param name="workItemOID">工作事項識別號</param>
            <param name="curActID">目前活動代號</param>
            <param name="actID">要退回的活動代號</param>
            <param name="executiveComment">退回重辦意見</param>
            <param name="reexecuteActivityType">0:退回重辦之後逐關簽核; 2:略過之前已經執行過的關卡</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.getReexecutableActivity(System.String)">
            <summary>
            取回可退回重辦關卡的活動列表
            </summary>
            <param name="workItemOID">目前關卡的工作項目識別號</param>
            <returns>BackActivity物件陣列</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchActivityIDFromWorkItemOID(System.String,System.String,System.String)">
            <summary>
            由工作項目識別號取得目前活動ID
            </summary>
            <param name="workItemOID">工作項目識別號</param>
            <param name="processID">流程定義代號</param>
            <param name="userID">使用者代號</param>
            <returns>ActivityID</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.getProcessAbortComment(System.String)">
            <summary>
            取得指定流程序號的撤銷意見
            </summary>
            <param name="processSerialNumber">流程實例序號</param>
            <returns>撤銷意見</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.changeWorkItemOwner(System.String,System.String,System.String,System.String)">
            <summary>
            工作轉派
            </summary>
            <param name="fromUserGUID">轉派者的使用者識別號</param>
            <param name="toUserGUID">被轉派者的使用者識別號</param>
            <param name="workItemOID">目前工作項目識別號</param>
            <param name="executiveComment">轉派意見</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.reassignWorkItem(System.String,System.String,System.String,System.String)">
            <summary>
            代理人轉派
            </summary>
            <param name="fromUserGUID">轉派者的使用者識別號</param>
            <param name="toUserGUID">被轉派者的使用者識別號</param>
            <param name="workItemOID">目前工作項目識別號</param>
            <param name="executiveComment">轉派意見</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchReassignedWorkItems(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            取得已轉派工作清單
            </summary>
            <param name="userID">要查詢的使用者代號</param>
            <param name="pageSize">每頁筆數</param>
            <param name="pageNo">頁數</param>
            <param name="searchByWorkItemName">工作名稱</param>
            <param name="searchByProcessSubject">主旨</param>
            <param name="searchByProcessSerialNumber">流程實例序號</param>
            <param name="searchByWorkitemCreatedTimeFrom">工作建立時間起</param>
            <param name="searchByWorkitemCreatedTimeTo">工作建立時間迄</param>
            <param name="instanceCompleteType">可追蹤的流程實例類型,0代表希望取回所有可追蹤的流程實例,1代表希望取回所有已結案的流程實例,2代表希望取回所有未結案的流程實例</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchReassignedWorkItems(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,com.dsc.kernal.factory.AbstractEngine)">
            <summary>
            取得已轉派工作清單
            </summary>
            <param name="userID">要查詢的使用者代號</param>
            <param name="pageSize">每頁筆數</param>
            <param name="pageNo">頁數</param>
            <param name="searchByWorkItemName">工作名稱</param>
            <param name="searchByProcessSubject">主旨</param>
            <param name="searchByProcessSerialNumber">流程實例序號</param>
            <param name="searchByWorkitemCreatedTimeFrom">工作建立時間起</param>
            <param name="searchByWorkitemCreatedTimeTo">工作建立時間迄</param>
            <param name="instanceCompleteType">可追蹤的流程實例類型,0代表希望取回所有可追蹤的流程實例,1代表希望取回所有已結案的流程實例,2代表希望取回所有未結案的流程實例</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.retrieveWorkAssignment(System.String,System.String,System.String)">
            <summary>
            取回已轉派工作
            </summary>
            <param name="userID">要取回的使用者</param>
            <param name="workItemOID">要取回的工作項目識別號</param>
            <param name="executiveComment">取回意見</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchRollbackableWorkItemOID(System.String,System.String)">
            <summary>
            根據流程實例序號, 取得可撤簽的workItemOID
            </summary>
            <param name="userID">使用者代號</param>
            <param name="processSerialNumber">流程實例序號</param>
            <returns>可撤簽的WorkItemOID. 若不可撤簽, 則回傳空字串</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.rollbackActivity(System.String,System.String)">
            <summary>
            撤簽
            </summary>
            <param name="userID">要撤簽的使用者</param>
            <param name="workItemOID">要撤簽的工作項目識別號</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchReassignHistory(System.String,System.String)">
            <summary>
            由工作項目識別號取得轉派紀錄
            </summary>
            <param name="userID">使用者代號</param>
            <param name="workItemOID">工作項目識別號</param>
            <returns>轉派紀錄陣列</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchFullProcInstanceWithSerialNoXML(System.String)">
            <summary>
            由流程實例序號取得完整的流程狀況(包含簽核意見以及轉派意見等). 此方法直接回傳[完成流程實例XML]
            </summary>
            <param name="processSerialNumber">流程實例序號</param>
            <returns>完成流程實例XML</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchByPassActivityOID(System.String)">
            <summary>
            由工作項目識別號取得可ByPass的活動識別號. 若該活動不可被ByPass, 則此方法回傳空字串
            </summary>
            <param name="workItemOID">工作項目識別號</param>
            <returns>可ByPass的活動識別號</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.bypassActivity(System.String)">
            <summary>
            ByPass指定的活動識別號
            </summary>
            <param name="activityOID">活動識別號</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.increaseViewTimesOfWorkAssignment(System.String,System.String)">
            <summary>
            將指定的WorkItem工作項目讀取次數增加1
            </summary>
            <param name="userID">讀取使用者代號</param>
            <param name="workItemOID">工作項目識別號</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchNoticeWorkItems(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            取得通知事項列表
            </summary>
            <param name="userID">要查詢的使用者</param>
            <param name="pageSize">每頁筆數</param>
            <param name="pageNo">頁數</param>
            <param name="searchByWorkItemName">工作名稱</param>
            <param name="searchByProcessSubject">主旨</param>
            <param name="searchByProcessSerialNumber">流程實例序號</param>
            <param name="searchByWorkitemCreatedTimeFrom">工作建立時間起</param>
            <param name="searchByWorkitemCreatedTimeTo">工作建立時間迄</param>
            <param name="searchByWorkAssignmentNoticeType">流程通知狀態</param>
            <param name="searchByProcessID">流程定義序號</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchNoticeWorkItems(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,com.dsc.kernal.factory.AbstractEngine)">
            <summary>
            取得通知事項列表
            </summary>
            <param name="userID">要查詢的使用者</param>
            <param name="pageSize">每頁筆數</param>
            <param name="pageNo">頁數</param>
            <param name="searchByWorkItemName">工作名稱</param>
            <param name="searchByProcessSubject">主旨</param>
            <param name="searchByProcessSerialNumber">流程實例序號</param>
            <param name="searchByWorkitemCreatedTimeFrom">工作建立時間起</param>
            <param name="searchByWorkitemCreatedTimeTo">工作建立時間迄</param>
            <param name="searchByWorkAssignmentNoticeType">流程通知狀態</param>
            <param name="searchByProcessID">流程定義序號</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.forwardWorkItem(System.String,System.String,System.String[],System.String)">
            <summary>
            發送通知
            </summary>
            <param name="userID">發送者使用者代號</param>
            <param name="workItemOID">工作項目識別號</param>
            <param name="acceptorOID">接收通知者識別號陣列</param>
            <param name="noticeType">通知類型. 0:流程預設;1:私人轉寄; 2:於流程中追蹤; 3:被代理時通知; 4:流程被撤銷工作被回收</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchProcInstances(System.String,System.String,System.String,System.String)">
            <summary>
            取得指定的流程定義代號的流程實例
            </summary>
            <param name="pProcessId">流程定義代號</param>
            <param name="pProcessInitialStartTime">搜尋時間起</param>
            <param name="pProcessInitialEndTime">搜尋時間迄</param>
            <param name="pProcInstanceState">流程狀態</param>
            <returns>ProcessInstance物件陣列</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.traceProcInstances(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            取得使用者可追蹤的流程實例
            </summary>
            <param name="userID">使用者代號</param>
            <param name="pageSize">每頁筆數</param>
            <param name="PageNo">頁數</param>
            <param name="tracerRoleType">流程追蹤者，0代表追蹤者為流程發起人，1代表追蹤者為流程工作處理者</param>
            <param name="instanceCompleteType">所有可追蹤的流程實例類型,0代表希望取回所有可追蹤的流程實例,1代表希望取回所有已結案的流程實例,2代表希望取回所有未結案的流程實例</param>
            <param name="searchByProcessID">流程定義代號</param>
            <param name="searchByProcessSubject">主旨</param>
            <param name="searchByProcessSerialNumber">流程實例序號</param>
            <param name="searchByWorkitemCreatedTimeFrom">工作建立時間起</param>
            <param name="searchByWorkitemCreatedTimeTo">工作建立時間迄</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchRunningWorkItemOIDs(System.String)">
            <summary>
            取得指定流程進行中的工作項目
            </summary>
            <param name="processSerialNumber">指定的流程實例序號</param>
            <returns>RunningWorkItem物件陣列</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.fetchWorkItemOIDs(System.String)">
            <summary>
            取得指定流程進行中以及已完成的工作項目
            </summary>
            <param name="processSerialNumber">指定的流程實例序號</param>
            <returns>RunningWorkItem物件陣列</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.managementReassignWorkItem(System.String,System.String,System.String)">
            <summary>
            由負責人將流程指派給其他人(代理轉派)
            </summary>
            <param name="pAcceptorOID">被指派對象的識別號</param>
            <param name="pWorkItemOID">工作項目識別號</param>
            <param name="pReassignComment">改派意見</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.managementChangeWorkItemOwner(System.String,System.String,System.String)">
            <summary>
            由負責人將流程指派給其他人(工作轉派)
            </summary>
            <param name="pAcceptorOID">被指派對象的識別號</param>
            <param name="pWorkItemOID">工作項目識別號</param>
            <param name="pReassignComment">改派意見</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.addCustomActivity(System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            將加簽資訊寫入
            </summary>
            <param name="workItemOID">要加簽目的的活動識別號</param>
            <param name="isAfter">true: 加簽在workItemOID後面; false: 加簽在workItemOID前面</param>
            <param name="xml">加簽內容xml</param>
            <param name="executiveResult">簽核結果</param>
            <param name="executiveComment">簽核意見</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.assignRelevantDataBySerialNo(System.String,System.String,System.String)">
            <summary>
            根據傳入的流程實例序號與參數代號和參數值，將參數值設定到此流程實例內，如果塞入的是個表單，則參數代號傳入表單代號；參數值傳入表單實例的XML值。
            </summary>
            <param name="pProcessInstanceSerialNo">流程實例序號</param>
            <param name="pRelevantDataId">流程參數代號或是表單代號</param>
            <param name="pRelevantDataValue">參數值或是表單XML</param>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.checkWorkItemState(System.String)">
            <summary>
            確認指定的WorkItem狀態
            </summary>
            <param name="pWorkItemOID">要確認的WorkItem識別碼</param>
            <returns>0:未開始,1:進行中,2:已暫停,3:已完成,4:已撤銷,5:已中止; 若找不到該WorkItem時回傳-1, 若發生其他的例外時則拋出例外</returns>
        </member>
        <member name="M:com.dsc.flow.server.AbstractFlowAdapter.addCustomParallelActivity(System.String,System.String)">
            <summary>
            加入平行會簽關卡
            </summary>
            <param name="pWorkItmeOID">目標活動中工作項目</param>
            <param name="pPostParallelActDefsAsXML">自訂活動定義集合</param>
        </member>
        <member name="T:com.dsc.flow.data.RunningWorkItem">
            <summary>
            流程正在進行中以及已完成的工作項目
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RunningWorkItem.workItemOID">
            <summary>
            工作項目識別號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RunningWorkItem.activityInstanceOID">
            <summary>
            活動識別
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RunningWorkItem.activityInstanceID">
            <summary>
            活動代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RunningWorkItem.activityName">
            <summary>
            活動名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RunningWorkItem.acceptors">
            <summary>
            目前工作項目的處理者
            </summary>
        </member>
        <member name="T:com.dsc.exception.TransformErrorException">
            <summary>
            當轉型失敗的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.TransformErrorException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.kernal.utility.DateTimeUtility">
            <summary>
            日期時間處理工具類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.DateTimeUtility.standardTime">
            <summary>
            標準時間字串
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.DateTimeUtility.timeZone">
            <summary>
            時區
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getStandardTime">
            <summary>
            取得標準時間
            </summary>
            <returns>標準時間參數</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.setStandardTime(System.String)">
            <summary>
            設定標準時間
            </summary>
            <param name="standardTime">標準時間</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.setTimeZone(System.String)">
            <summary>
            設定標準時間時區
            </summary>
            <param name="timeZone">時區</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getTimeZone">
            <summary>
            取得標準時間時區
            </summary>
            <returns>時區</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getLocalTime(System.String)">
            <summary>
            根據傳入的時區, 計算標準時間時區轉換後的時間
            </summary>
            <param name="timeZone">欲計算的時區</param>
            <returns>時間</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.transferTime(System.String,System.String,System.String)">
            <summary>
            計算currentTimeZone時區, 計算該時區的時間currentTime在transferTimeZone的時間
            </summary>
            <param name="currentTime">被轉換的時間</param>
            <param name="currentTimeZone">被轉換時間所在的時區</param>
            <param name="transferTimeZone">轉換後的時區</param>
            <returns>轉換後的時間</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.#ctor(System.String)">
            <summary>
            建構子, 傳入標準時區
            </summary>
            <param name="timeZone"></param>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getSystemTime2(System.String)">
            <summary>
            根據timeZone時區取得目前系統時間
            </summary>
            <param name="timeZone">時區</param>
            <returns>目前時間</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.convertDateTimeToString(System.DateTime)">
            <summary>
            將DateTime物件內容轉為YYYY/MM/DD HH:MM:SS格式字串
            </summary>
            <param name="dt">要轉換的DateTime物件</param>
            <returns>日期時間格式字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getLocalSystemTime(System.String)">
            <summary>
            取得本地端時間
            </summary>
            <param name="timeZone">時區</param>
            <returns>YYYY/MM/DD HH:MM:SS格式時間字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getSystemTime(System.String)">
            <summary>
            取得伺服器端時間. 使用使方法前, 必須設定GetSystemTimeURL這個Globalcache. 此方法並不會每次向伺服器查詢時間, 而是利用時間校正方式取得
            </summary>
            <param name="timeZone">時區</param>
            <returns>YYYY/MM/DD HH:MM:SS格式時間字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getServerTime(System.String)">
            <summary>
            透過HTTP取得伺服器時間
            </summary>
            <param name="timeZone">時區</param>
            <returns>YYYY/MM/DD HH:MM:SS格式時間字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getLastWeekDay(System.String,System.Int32)">
            <summary>
            取得today日期的前一個特定星期數的日期. 若today本身的星期數等於weekday參數, 回傳today
            </summary>
            <param name="today">要開始計算的日期</param>
            <param name="weekday">0:星期日; 依此類推, 6:星期六</param>
            <returns>特定星期數的日期</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getNextWeekDay(System.String,System.Int32)">
            <summary>
            取得today日期的下一個特定星期數. 若today本身的星期數等於weekday參數, 回傳下一個符合星期數的日期
            </summary>
            <param name="today">要開始計算的日期</param>
            <param name="weekday">0:星期日; 依此類推, 6:星期六</param>
            <returns>特定星期數的日期</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DateTimeUtility.getDayOfWeek(System.String)">
            <summary>
            回傳today的星期數
            </summary>
            <param name="today">查詢的日期</param>
            <returns>DayOfWeek物件, 可使用DayOfWeek.Sunday......方式判別</returns>
        </member>
        <member name="T:com.dsc.kernal.factory.OdbcEngine">
            <summary>
            ODBC I/O存取引擎類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.OdbcEngine.con">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.OdbcEngine.processor">
            <summary>
            資料庫存取類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.#ctor(System.String)">
            <summary>
            建構子, 根據param建立SQL I/O存取引擎物件
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟Transaction
            </summary>
            <param name="isolevel">開啟方式, 參閱System.Data.SqlClient.IsolationLevel</param>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.close">
            <summary>
            關閉此I/O
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.getProcessor">
            <summary>
            取得ODBC存取物件
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.updateData(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.updateDataFormMode(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.updateDataSet(System.Data.DataSet)">
            <summary>
            將DataSet更新至資料庫
            </summary>
            <param name="ds">要更新的DataSet</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.getDataSet(System.String,System.String)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.getDataSetLimit(System.String,System.String,System.Int32)">
            <summary>
            根據sql字串取得限制資料筆數的DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet的TableName</param>
            <param name="rowCount">限制資料筆數</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.refreshData(com.dsc.kernal.databean.DataObject)">
            <summary>
            從I/O方面取得資料更新data資料物件內容
            </summary>
            <param name="data">被更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.executeSQL(System.String)">
            <summary>
            執行SQL語句
            </summary>
            <param name="sql">SQL</param>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.executeScalar(System.String)">
            <summary>
            執行SQL語句並且回傳值
            </summary>
            <param name="sql">所執行的SQL</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.updateData(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.updateDataFormMode(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.getWhereSql(com.dsc.kernal.databean.DataObject,System.String)">
            <summary>
            根據資料物件內容設定, 建立存取I/O時的SQL條件語句
            </summary>
            <param name="data">資料物件</param>
            <param name="oriSql">更新前的SQL語句</param>
            <returns>更新後的SQL語句</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OdbcEngine.exec(System.String)">
            <summary>
            執行StoreProcedure. 可直接撰寫command text, 包含output參數. 不論該storeprocedure是否有回傳值, 可直接寫成 sp_myProc 'xx',@myout output.......
            若該StoreProcedure有回傳DataSet, 則直接取得. 若無, 回傳null
            若該StoreProcedure有return值, 此值會寫在spReturnValue
            若該StoreProceudre有output參數, 回傳參數會以Hashtable放在spOutput中, key為參數名稱, value為值
            </summary>
            <param name="cmdText">要執行的StoreProcedure名稱以及參數. 可不寫上exec或者Execute開頭</param>
            <returns>取得的DataSet</returns>
            <example>
                <code>
               DataSet ds;
               ds = engine.exec("exec testDSO '1808', @name output");
               //取得回傳DataSet
               if (ds == null)
               {
                   Console.WriteLine("ds null");
               }
               else
               {
                   Console.WriteLine(ds.Tables[0].Rows[0]["RESAK001"].ToString());
               }
               //取得回傳值
               Console.WriteLine(engine.spReturnValue.ToString());
               //取得Output參數
               IDictionaryEnumerator ie = engine.spOutput.GetEnumerator();
               while (ie.MoveNext())
               {
                   Console.WriteLine(ie.Key.ToString() + ": " + ie.Value.ToString());
               }
                </code>
            </example>
        </member>
        <member name="T:com.dsc.kernal.agent.NLAgent">
            <summary>
            由設定檔取得Agent結構的標準代理器. 此類別不需被繼承, 建立實體後, 需呼叫loadSchema指定載入類別的完整類別名稱. 
            此類別呼叫loadSchema前必須藉由指定GlobalCache.setValue("DataObjectFolder", localPath)指定AgentSchema所位於的資料夾.
            </summary>
        </member>
        <member name="F:com.dsc.kernal.agent.NLAgent.mDefinitionXML">
            <summary>
            定義多單身的資料結構XML
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.#ctor(System.String)">
            <summary>
            建構子, 根據傳入的參數建立SQL Server存取引擎物件
            </summary>
            <param name="param">SQL Server資料庫連結參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.#ctor(System.String,System.String)">
            <summary>
            建構子, 根據傳入的參數建立不同的I/O存取引擎
            </summary>
            <param name="engineType">I/O引擎識別字串, 參考com.dsc.kernal.factory.EngineConstants類別</param>
            <param name="param">參數</param>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.#ctor(com.dsc.kernal.factory.AbstractEngine)">
            <summary>
            根據所建立的I/O存取引擎參數建立此代理器物件
            </summary>
            <param name="engine">I/O存取引擎物件</param>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.loadSchema(System.String)">
            <summary>
            依據GlobalCache.getValue("DataObjectFolder")的值載入XML內容至DefinitionXML中
            </summary>
            <param name="childClassstring">完整類別路徑</param>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.update">
            <summary>
            更新資料物件
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.updateFormMode">
            <summary>
            更新資料庫資料. 此方法速度快, 但資料庫不得存在該筆資料. 使用於表單資料更新
            </summary>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.queryHead(System.String)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.queryHead(System.String,System.Int32)">
            <summary>
            僅取得單頭資料DataObjectSet. 可配合queryChild取得單身資料. 此方法需由繼承類別實作
            </summary>
            <param name="whereClause">查詢的where條件子句</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.queryChild(com.dsc.kernal.databean.DataObject)">
            <summary>
            查詢data單頭的所有單身資料
            </summary>
            <param name="data">單頭資料物件</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.createEmptyDataObjectSet(System.String)">
            <summary>
            根據tableName建立空的DataObjectSet. 此DataObjectSet已經設定好相關參數
            </summary>
            <param name="tableName">要建立的DataObjectSet物件參考的tableName</param>
            <returns>DataObjectSet</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.queryChild(com.dsc.kernal.databean.DataObject,System.String[])">
            <summary>
            以whereClause為條件查詢data單頭的單身資料
            </summary>
            <param name="data">單頭物件</param>
            <param name="whereClause">查詢條件</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.query(System.String)">
            <summary>
            取得資料物件
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.agent.NLAgent.query(System.String,System.Int32)">
            <summary>
            取得完整資料物件. 此方法需由繼承類別實作.
            </summary>
            <param name="whereClause">SQL 條件式，不包含where</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>true: 成功﹔false:失敗</returns>
        </member>
        <member name="P:com.dsc.kernal.agent.NLAgent.DefinitionXML">
            <summary>
            定義多單身的資料結構XML
            </summary>
        </member>
        <member name="T:com.dsc.exception.DefaultValueErrorException">
            <summary>
            當預設值錯誤的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.DefaultValueErrorException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.exception.DataNotFoundException">
            <summary>
            當資料未找到的例外類別
            </summary>
        </member>
        <member name="M:com.dsc.exception.DataNotFoundException.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="T:com.dsc.kernal.utility.OdbcProcessor">
            <summary>
            存取資料庫基本物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.OdbcProcessor.cons">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.OdbcProcessor.trans">
            <summary>
            Transaction物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.#ctor">
            <summary>
            預設建構子，請使用包含連線參數之建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.#ctor(System.Data.Odbc.OdbcConnection)">
            <summary>
            建構子, 傳入此類別所使用的OdbcConnection
            </summary>
            <param name="cons">OdbcConnection物件</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.#ctor(System.String)">
            <summary>
            建構子
            </summary>
            <param name="conString">資料庫連線字串</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟transaction
            </summary>
            <param name="isolevel">方式</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.Finalize">
            <summary>
            解構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.Close">
            <summary>
            關閉資料庫連線
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.getDataAdapter(System.String)">
            <summary>
            取得OdbcDataAdapter
            </summary>
            <param name="sqlString">查詢的SQL字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.getDataSet(System.Data.Odbc.OdbcDataAdapter,System.String)">
            <summary>
            根據OdbcDataAdapter取得DataSet
            </summary>
            <param name="adapter">OdbcDataAdapter物件</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.getDataSet(System.String,System.String,System.Int32)">
            <summary>
            根據傳入的SQL字串取得DataSet
            </summary>
            <param name="sqlString">SQL字串</param>
            <param name="tableName">DataSet中資料表之名稱</param>
            <param name="RowCount">限制筆數</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.getDataSet(System.String,System.String)">
            <summary>
            根據傳入的SQL字串取得DataSet
            </summary>
            <param name="sqlString">SQL字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.updateDataSet(System.Data.DataSet)">
            <summary>
            更新DataSet資料至SQL資料庫
            </summary>
            <param name="dataSet">要更新的DataSet</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.getDataAdapter(System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            取得OdbcDataAdapter
            </summary>
            <param name="sqlString">查詢的SQL字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據傳入的SQL字串取得DataSet
            </summary>
            <param name="sqlString">SQL字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.updateDataSet(System.Data.Odbc.OdbcDataAdapter,System.Data.DataSet,System.String)">
            <summary>
            將DataSet更新回資料庫
            </summary>
            <param name="adapter">OdbcDataAdapter物件</param>
            <param name="dataSet">DataSet物件</param>
            <param name="tableName">更新之DataSet中資料表名稱。null表示全部更新</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.getDataReader(System.String)">
            <summary>
            根據SQL字串取得OdbcDataReader物件
            </summary>
            <param name="sqlString">SQL字串</param>
            <returns>OdbcDataReader物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.executeScalar(System.String)">
            <summary>
            根據SQL字串取得單一數值資料
            </summary>
            <param name="sqlString">SQL字串</param>
            <returns>單一回傳物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.executeSQL(System.String)">
            <summary>
            直接執行SQL字串
            </summary>
            <param name="sqlString">欲執行之SQL字串</param>
            <returns>受影響之資料列數目</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.isEstablished">
            <summary>
            檢查資料庫連線物件是否建立成功
            </summary>
            <returns>true:建立成功; false:建立失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.setConnection(System.Data.Odbc.OdbcConnection)">
            <summary>
            設定此類別所使用的OdbcConnection物件
            </summary>
            <param name="connection">OdbcConnection物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.getConnection">
            <summary>
            取得資料庫連線物件
            </summary>
            <returns>資料庫連線物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OdbcProcessor.exec(System.String)">
            <summary>
            執行StoreProcedure. 回傳DataSet, 回傳值以及Output參數
            </summary>
            <param name="cmdText">要執行的StoreProcedure. 可包含回傳值, Output參數. 所有參數可不需事先宣告</param>
            <returns>ArrayList. 0:DataSet; 1:回傳值; 2:Output參數的Hashtable</returns>
        </member>
        <member name="T:com.dsc.kernal.utility.OracleProcessor">
            <summary>
            存取資料庫基本物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.OracleProcessor.cons">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.OracleProcessor.trans">
            <summary>
            Transaction物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.#ctor">
            <summary>
            預設建構子，請使用包含連線參數之建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.#ctor(System.Data.OracleClient.OracleConnection)">
            <summary>
            建構子, 傳入此類別所使用的OracleConnection
            </summary>
            <param name="cons">OracleConnection物件</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.#ctor(System.String)">
            <summary>
            建構子
            </summary>
            <param name="conString">資料庫連線字串</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟transaction
            </summary>
            <param name="isolevel">方式</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.Finalize">
            <summary>
            解構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.Close">
            <summary>
            關閉資料庫連線
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.getDataAdapter(System.String)">
            <summary>
            取得OracleDataAdapter
            </summary>
            <param name="OracleString">查詢的Oracle字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.getDataSet(System.Data.OracleClient.OracleDataAdapter,System.String)">
            <summary>
            根據OracleDataAdapter取得DataSet
            </summary>
            <param name="adapter">OracleDataAdapter物件</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.getDataSet(System.String,System.String,System.Int32)">
            <summary>
            根據傳入的Oracle字串取得DataSet
            </summary>
            <param name="oracleString">Oracle字串，必須包含Where 條件句，否則會發生錯誤</param>
            <param name="TableName">DataSet中資料表之名稱</param>
            <param name="RowCount">限制筆數</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.getDataSet(System.String,System.String)">
            <summary>
            根據傳入的Oracle字串取得DataSet
            </summary>
            <param name="OracleString">Oracle字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.updateDataSet(System.Data.DataSet)">
            <summary>
            更新DataSet至Oracle
            </summary>
            <param name="dataSet">要更新的DataSet</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.getDataAdapter(System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            取得OracleDataAdapter
            </summary>
            <param name="OracleString">查詢的Oracle字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據傳入的Oracle字串取得DataSet
            </summary>
            <param name="OracleString">Oracle字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.updateDataSet(System.Data.OracleClient.OracleDataAdapter,System.Data.DataSet,System.String)">
            <summary>
            將DataSet更新回資料庫
            </summary>
            <param name="adapter">OracleDataAdapter物件</param>
            <param name="dataSet">DataSet物件</param>
            <param name="tableName">更新之DataSet中資料表名稱。null表示全部更新</param>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.getDataReader(System.String)">
            <summary>
            根據Oracle字串取得OracleDataReader物件
            </summary>
            <param name="OracleString">Oracle字串</param>
            <returns>OracleDataReader物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.executeScalar(System.String)">
            <summary>
            根據Oracle字串取得單一數值資料
            </summary>
            <param name="OracleString">Oracle字串</param>
            <returns>單一回傳物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.executeSQL(System.String)">
            <summary>
            直接執行Oracle字串
            </summary>
            <param name="OracleString">欲執行之Oracle字串</param>
            <returns>受影響之資料列數目</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.isEstablished">
            <summary>
            檢查資料庫連線物件是否建立成功
            </summary>
            <returns>true:建立成功; false:建立失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.setConnection(System.Data.OracleClient.OracleConnection)">
            <summary>
            設定此類別所使用的OracleConnection物件
            </summary>
            <param name="connection">OracleConnection物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.exec(System.String)">
            <summary>
            執行StoreProcedure. 回傳DataSet, 回傳值以及Output參數
            </summary>
            <param name="cmdText">要執行的StoreProcedure. 可包含回傳值, Output參數. 所有參數可不需事先宣告</param>
            <returns>ArrayList. 0:DataSet; 1:回傳值; 2:Output參數的Hashtable</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.OracleProcessor.translateSQLToOracle(System.String)">
            <summary>
            將TSQL語法轉為Oracle語法
            </summary>
            <param name="oriSQL">TSQL</param>
            <returns>Oracle 語法</returns>
        </member>
        <member name="T:com.dsc.kernal.utility.DBProcessor">
            <summary>
            存取資料庫基本物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.DBProcessor.cons">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.DBProcessor.trans">
            <summary>
            Transaction物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.#ctor">
            <summary>
            預設建構子，請使用包含連線參數之建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.#ctor(System.Data.SqlClient.SqlConnection)">
            <summary>
            建構子, 傳入此類別所使用的SqlConnection
            </summary>
            <param name="cons">SqlConnection物件</param>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.#ctor(System.String)">
            <summary>
            傳入此類別所使用的connString
            </summary>
            <param name="conString">資料庫連線字串</param>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟transaction
            </summary>
            <param name="isolevel">方式</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.Finalize">
            <summary>
            解構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.Close">
            <summary>
            關閉資料庫連線
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.getDataAdapter(System.String)">
            <summary>
            取得SqlDataAdapter
            </summary>
            <param name="sqlString">查詢的SQL字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.getDataSet(System.Data.SqlClient.SqlDataAdapter,System.String)">
            <summary>
            根據SqlDataAdapter取得DataSet
            </summary>
            <param name="adapter">SqlDataAdapter物件</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.getDataSet(System.String,System.String,System.Int32)">
            <summary>
            根據傳入的SQL字串取得DataSet
            </summary>
            <param name="sqlString">SQL字串</param>
            <param name="tableName">DataSet中資料表之名稱</param>
            <param name="RowCount">限制筆數</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.getDataSet(System.String,System.String)">
            <summary>
            根據傳入的SQL字串取得DataSet
            </summary>
            <param name="sqlString">SQL字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.updateDataSet(System.Data.DataSet)">
            <summary>
            更新DataSet資料至SQL資料庫
            </summary>
            <param name="dataSet">要更新的DataSet</param>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.getDataAdapter(System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            取得SqlDataAdapter
            </summary>
            <param name="sqlString">查詢的SQL字串</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據傳入的SQL字串取得DataSet
            </summary>
            <param name="sqlString">SQL字串</param>
            <param name="tableName">DataSet中資料表之名稱。null表示不指定</param>
            <returns>DataSet物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.updateDataSet(System.Data.SqlClient.SqlDataAdapter,System.Data.DataSet,System.String)">
            <summary>
            將DataSet更新回資料庫
            </summary>
            <param name="adapter">SqlDataAdapter物件</param>
            <param name="dataSet">DataSet物件</param>
            <param name="tableName">更新之DataSet中資料表名稱。null表示全部更新</param>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.getDataReader(System.String)">
            <summary>
            根據SQL字串取得SqlDataReader物件
            </summary>
            <param name="sqlString">SQL字串</param>
            <returns>SqlDataReader物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.executeScalar(System.String)">
            <summary>
            根據SQL字串取得單一數值資料
            </summary>
            <param name="sqlString">SQL字串</param>
            <returns>單一回傳物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.executeSQL(System.String)">
            <summary>
            直接執行SQL字串
            </summary>
            <param name="sqlString">欲執行之SQL字串</param>
            <returns>受影響之資料列數目</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.isEstablished">
            <summary>
            檢查資料庫連線物件是否建立成功
            </summary>
            <returns>true:建立成功; false:建立失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.setConnection(System.Data.SqlClient.SqlConnection)">
            <summary>
            設定此類別所使用的SqlConnection物件
            </summary>
            <param name="connection">SqlConnection物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.getConnection">
            <summary>
            取得資料庫連線物件
            </summary>
            <returns>資料庫連線物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.DBProcessor.exec(System.String)">
            <summary>
            執行StoreProcedure. 回傳DataSet, 回傳值以及Output參數
            </summary>
            <param name="cmdText">要執行的StoreProcedure. 可包含回傳值, Output參數. 所有參數可不需事先宣告</param>
            <returns>ArrayList. 0:DataSet; 1:回傳值; 2:Output參數的Hashtable</returns>
        </member>
        <member name="T:com.dsc.kernal.utility.ConnectionPool">
            <summary>
            SQL Server的ConnectionPool物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.ConnectionPool.maxSize">
            <summary>
            最大連線數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.ConnectionPool.waitTime">
            <summary>
            等待取得連線物件時間
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.ConnectionPool.connectString">
            <summary>
            資料庫連線參數
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ConnectionPool.getConnection">
            <summary>
            取得資料庫連線物件
            </summary>
            <returns>資料庫連線物件</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ConnectionPool.getConnectionString">
            <summary>
            取得資料庫連線參數
            </summary>
            <returns>資料庫連線參數</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ConnectionPool.setConnectionString(System.String)">
            <summary>
            設定資料庫連線參數
            </summary>
            <param name="vconnectString">資料庫連線參數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ConnectionPool.getMaxSize">
            <summary>
            取得最大連線數目
            </summary>
            <returns>最大連線數目</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ConnectionPool.setMaxSize(System.Int32)">
            <summary>
            設定最大連線數目
            </summary>
            <param name="vmaxSize">最大連線數目</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ConnectionPool.getWaitTime">
            <summary>
            取得等待連線時間
            </summary>
            <returns>等待取得資料庫連線物件時間</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ConnectionPool.setWaitTime(System.Int32)">
            <summary>
            設定等待連線時間
            </summary>
            <param name="vwaitTime">等待連線時間</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ConnectionPool.getConnection(System.String)">
            <summary>
            根據connectionString取得資料庫連線物件
            </summary>
            <param name="connectionString">資料庫連線參數</param>
            <returns>資料庫連線物件</returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPControlSocket">
            <summary>  Supports client-side FTP operations
            
            </summary>
            <author>              Bruce Blackshaw
            </author>
            <version>         $Revision: 3 $
            
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.EOL">
            <summary>   Standard FTP end of line sequence</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.CONTROL_PORT">
            <summary>   The default and standard control port number for FTP</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.DEBUG_ARROW">
            <summary>   Used to flag messages</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.PASSWORD_MESSAGE">
            <summary>   Start of password message</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.log">
            <summary> Logging object</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.strictReturnCodes">
            <summary> Use strict return codes if true</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.remoteHost">
            <summary>Address of the remote host</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.controlSock">
            <summary>  The underlying socket.</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.timeout">
            <summary>  
            The timeout for the control socket
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.writer">
            <summary>  The write that writes to the control socket</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.reader">
            <summary>  The reader that reads control data from the
            control socket
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.activePortRange">
            <summary>
            Port range for active mode
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.activeIPAddress">
            <summary>
            IP address to send with PORT command
            </summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPControlSocket.nextPort">
            <summary>
            The next port number to use if activePortRange is set
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.#ctor(System.Net.IPAddress,System.Int32,System.Int32)">
            <summary>
            Constructor. Performs TCP connection and
            sets up reader/writer. Allows different control
            port to be used
            </summary>
            <param name="remoteHost">      
            Remote inet address
            </param>
            <param name="controlPort">     
            port for control stream
            </param>
            <param name="timeout">          
            the length of the timeout, in milliseconds
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.#ctor">
            <summary>   
            Default constructor
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.Initialize(com.dsc.kernal.ftp.BaseSocket,System.Net.IPAddress,System.Int32,System.Int32)">
            <summary>   
            Performs TCP connection and sets up reader/writer. 
            Allows different control port to be used
            </summary>
            <param name="sock">
             Socket instance
            </param>
            <param name="remoteHost">     
            address of remote host
            </param>
            <param name="controlPort">     
            port for control stream
            </param>
            <param name="timeout">    
            the length of the timeout, in milliseconds      
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.ConnectSocket(com.dsc.kernal.ftp.BaseSocket,System.Net.IPAddress,System.Int32)">
            <summary>   
            Establishes the socket connection
            </summary>
            <param name="socket">
             Socket instance
            </param>
            <param name="address">     
            IP address to connect to
            </param>
            <param name="port">    
            port to connect to     
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.ValidateConnection">
            <summary>   Checks that the standard 220 reply is returned
            following the initiated connection. Allow 230 as well, some proxy
            servers return it.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.InitStreams">
            <summary>  Obtain the reader/writer streams for this
            connection
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.SetActivePortRange(com.dsc.kernal.ftp.PortRange)">
            <summary>
            Set the port range to use in active mode
            </summary>
            <param name="portRange">port range to use</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.SetActiveIPAddress(System.Net.IPAddress)">
            <summary>
            Set an IP address to use for PORT commands
            </summary>
            <param name="address">IP address to use for PORT command</param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.Logout">
            <summary>  
            Quit this FTP session and clean up.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.CreateDataSocket(com.dsc.kernal.ftp.FTPConnectMode)">
            <summary>  
            Request a data socket be created on the
            server, connect to it and return our
            connected socket.
            </summary>
            <param name="connectMode">  
            The mode to connect in
            </param>
            <returns>  
            connected data socket
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.CreateDataSocketActive">
            <summary>  
            Request a data socket be created on the Client
            client on any free port, do not connect it to yet.
            </summary>
            <returns>  
            not connected data socket
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.SetDataPort(System.Net.IPEndPoint)">
            <summary>  
            Sets the data port on the server, i.e. sends a PORT
            command        
            </summary>
            <param name="ep">local endpoint
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.ToByteArray(System.UInt16)">
            <summary>  
            Convert a short into a byte array
            </summary>
            <param name="val">  value to convert
            </param>
            <returns>  a byte array
            
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.CreateDataSocketPASV">
            <summary>  
            Request a data socket be created on the
            server, connect to it and return our
            connected socket.
            </summary>
            <returns>  connected data socket
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.NewPassiveDataSocket(System.String,System.Int32)">
            <summary> Constructs a new <code>FTPDataSocket</code> object (client mode) and connect
            to the given remote host and port number.
            
            </summary>
            <param name="ipAddress">IP Address to connect to.
            </param>
            <param name="port">Remote port to connect to.
            </param>
            <returns> A new <code>FTPDataSocket</code> object (client mode) which is
            connected to the given server.
            </returns>
            <throws>  SystemException Thrown if no TCP/IP connection could be made.  </throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.NewActiveDataSocket(System.Int32)">
            <summary> 
            Constructs a new <code>FTPDataSocket</code> object (server mode) which will
            listen on the given port number.
            </summary>
            <param name="port">Remote port to listen on.
            </param>
            <returns> A new <code>FTPDataSocket</code> object (server mode) which is
            configured to listen on the given port.
            </returns>
            <throws>  SystemException Thrown if an error occurred when creating the socket.  </throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.SendCommand(System.String)">
            <summary>  Send a command to the FTP server and
            return the server's reply as a structured
            reply object
            </summary>
            <param name="command">  
            command to send
            </param>
            <returns>  reply to the supplied command
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.WriteCommand(System.String)">
            <summary>  Send a command to the FTP server. Don't
            read the reply
            
            </summary>
            <param name="command">  command to send
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.ReadReply">
            <summary>  Read the FTP server's reply to a previously
            issued command. RFC 959 states that a reply
            consists of the 3 digit code followed by text.
            The 3 digit code is followed by a hyphen if it
            is a muliline response, and the last line starts
            with the same 3 digit code.
            
            </summary>
            <returns>  structured reply object
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.ValidateReply(System.String,System.String)">
            <summary>  
            Validate the response the host has supplied against the
            expected reply. If we get an unexpected reply we throw an
            exception, setting the message to that returned by the
            FTP server
            </summary>
            <param name="reply">             the entire reply string we received
            </param>
            <param name="expectedReplyCode"> the reply we expected to receive
            
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.ValidateReply(System.String,System.String[])">
            <summary>  Validate the response the host has supplied against the
            expected reply. If we get an unexpected reply we throw an
            exception, setting the message to that returned by the
            FTP server
            
            </summary>
            <param name="reply">              the entire reply string we received
            </param>
            <param name="expectedReplyCodes"> array of expected replies
            </param>
            <returns>  an object encapsulating the server's reply
            
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.ValidateReply(com.dsc.kernal.ftp.FTPReply,System.String[])">
            <summary>  Validate the response the host has supplied against the
            expected reply. If we get an unexpected reply we throw an
            exception, setting the message to that returned by the
            FTP server
            
            </summary>
            <param name="reply">              reply object
            </param>
            <param name="expectedReplyCodes"> array of expected replies
            </param>
            <returns>  reply object
            
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.ValidateReply(com.dsc.kernal.ftp.FTPReply,System.String)">
            <summary>  Validate the response the host has supplied against the
            expected reply. If we get an unexpected reply we throw an
            exception, setting the message to that returned by the
            FTP server
            
            </summary>
            <param name="reply">              reply object
            </param>
            <param name="expectedReplyCode">  expected reply
            </param>
            <returns>  reply object
            
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.ValidateReplyCode(com.dsc.kernal.ftp.FTPReply,System.String)">
            <summary> 
            Validate reply object
            </summary>
            <param name="reply">               reference to reply object
            </param>
            <param name="expectedReplyCode">   expect reply code
            </param>
            <returns> true if valid, false if invalid
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.Log(System.String,System.Boolean)">
            <summary>  
            Log a message, checking for passwords
            </summary>
            <param name="msg">
            message to log
            </param>
            <param name="command"> 
            true if a response, false otherwise
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPControlSocket.SetSocketTimeout(com.dsc.kernal.ftp.BaseSocket,System.Int32)">
            <summary>  
            Helper method to set a socket's timeout value
            </summary>
            <param name="sock">
            socket to set timeout for
            </param>
            <param name="timeout">
            timeout value to set
            </param>
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPControlSocket.CommandSent">
            <summary>
            Event for notifying start of a transfer
            </summary> 
        </member>
        <member name="E:com.dsc.kernal.ftp.FTPControlSocket.ReplyReceived">
            <summary>
            Event for notifying start of a transfer
            </summary> 
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPControlSocket.StrictReturnCodes">
            <summary> 
            Get/Set strict checking of FTP return codes. If strict 
            checking is on (the default) code must exactly match the expected 
            code. If strict checking is off, only the first digit must match.
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPControlSocket.Timeout">
            <summary>   
            Get/Set the TCP timeout on the underlying control socket.
            </summary>
        </member>
        <member name="T:com.dsc.kernal.databean.DataObjectSet">
            <summary>
            包含資料物件DataObject的資料物件集. 在執行時期, 若由代理器agent自動建立,則各項參數會由代理器傳入; 若自行建立DataObjectSet, 則必須設定assemblyName, tableName, childClassString參數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.FILEVERSION">
            <summary>
            版號，預設為 2.0.0.0
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.errorFields">
            <summary>
            儲存錯誤欄位資訊的陣列
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.currentPage">
            <summary>
            目前頁數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.pageSize">
            <summary>
            每頁資料筆數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.dataObject">
            <summary>
            儲存所包含的所有資料物件DataObject
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.totalPage">
            <summary>
            所有頁數
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.childClassString">
            <summary>
            此資料物件集所儲存的DataObject類別名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.assemblyName">
            <summary>
            此資料物件集所儲存的DataObject類別所位於的組件名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.tableName">
            <summary>
            此資料物件集的資料物件存取的資料表名稱
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.errorString">
            <summary>
            操作此資料物件集的各項動作回傳錯誤訊息
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.reOrderFieldArray">
            <summary>
            重新排列欄位順序
            </summary>
        </member>
        <member name="F:com.dsc.kernal.databean.DataObjectSet.dataSetObject">
            <summary>
            儲存資料用資料表物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.#ctor">
            <summary>
            建構子, 初始化每頁資料筆數10筆, 目前頁數1
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getAllDataObjects">
            <summary>
            取得所有資料物件(包含已標記刪除者), 以陣列型態傳回
            </summary>
            <returns>所有資料物件陣列</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getDataObjectCount">
            <summary>
            取得所有資料物件筆數(包含刪除註記)
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getAvailableDataObjectCount">
            <summary>
            取得所有資料物件筆數(不包含刪除者)
            </summary>
            <returns>資料物件筆數</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.clear">
            <summary>
            刪除所有物件
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.removeAll">
            <summary>
            移除所有資料物件. 此方法並不會刪除物件, 僅將物件指標移除. 
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getDataObject(System.Int32)">
            <summary>
            根據索引數取得資料物件
            </summary>
            <param name="index">索引</param>
            <returns>資料物件</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getAvailableDataObject(System.Int32)">
            <summary>
            根據索引數取得資料物件. 所取回的資料物件為未刪除的
            </summary>
            <param name="index">索引</param>
            <returns>資料物件</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getDataSet">
            <summary>
            將此資料物件集轉為DataSet(尚未實作)
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.sort(System.String[0:,0:])">
            <summary>
            排序所有DataObject
            </summary>
            <param name="orderby">[x,0]:欄位名稱; [x,1]:排序方向</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.delete(com.dsc.kernal.databean.DataObject)">
            <summary>
            刪除data資料物件. 此方法僅將此資料物件註記刪除
            </summary>
            <param name="data">欲刪除的DataObject</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getPageObjects(System.Int32)">
            <summary>
            取得page頁所有的資料物件, 以陣列方式傳回. 所計算的資料物件不包含已刪除者
            </summary>
            <param name="page">欲取得的頁數</param>
            <returns>DataObject陣列</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getCurrentPageObjects">
            <summary>
            取得目前頁的資料物件, 以陣列方式傳回. 所計算的資料物件不包含已刪除者
            </summary>
            <returns>DataObject陣列</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getCurrentPageNum">
            <summary>
            取得目前所在頁數
            </summary>
            <returns>目前所在頁數</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.setCurrentPageNum(System.Int32)">
            <summary>
            設定目前頁數
            </summary>
            <param name="page">頁數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getPageSize">
            <summary>
            取得每頁資料筆數設定
            </summary>
            <returns>每頁資料筆數</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.setPageSize(System.Int32)">
            <summary>
            設定每頁資料筆數
            </summary>
            <param name="pageSize">每頁資料筆數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getTotalPageCount">
            <summary>
            根據每頁資料筆數, 計算目前資料集中總共頁數(不包含刪除註記者)
            </summary>
            <returns>所有頁數</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.checkData(com.dsc.kernal.databean.DataObject)">
            <summary>
            驗證此dataObject 是否符合不重複鍵值要求. 此方法也會呼叫DataObject的checkdata()
            </summary>
            <param name="data">要檢查的資料物件</param>
            <returns>true: 符合;false:不符合</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.add(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件data加入此資料物件集中. 加入時會檢查關鍵欄位是否重複, 資料物件內容是否合法
            </summary>
            <param name="data">欲加入的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.addDraft(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件加入此資料物件集中. 此方法會忽略錯誤檢查.(系統內部使用)
            </summary>
            <param name="data">所欲加入的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.create">
            <summary>
            建立一空的資料物件並傳回. 此方法所建立的資料物件並不會自動加入資料物件集中, 而是所建立的資料物件可以直接Alias為所繼承的類別. 必須呼叫add方法後才會加入.
            </summary>
            <returns>新的資料物件</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getAssemblyName">
            <summary>
            取得資料物件類別所位於的組件名稱
            </summary>
            <returns>組件名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.setAssemblyName(System.String)">
            <summary>
            設定資料物件類別所在的組件名稱
            </summary>
            <param name="assemblyName">組件名稱</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getChildClassString">
            <summary>
            取得資料物件的類別名稱
            </summary>
            <returns>資料物件類別名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.setChildClassString(System.String)">
            <summary>
            設定資料物件的類別名稱
            </summary>
            <param name="childClassName">類別名稱</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getTableName">
            <summary>
            取得資料物件所存取的資料表名稱
            </summary>
            <returns>資料表名稱</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.setTableName(System.String)">
            <summary>
            設定資料物件所存取的資料表名稱
            </summary>
            <param name="tableName">資料表名稱</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getFilteredObjects(System.String[],System.String[],System.String[])">
            <summary>
            根據搜尋條件取得符合條件的資料物件陣列
            </summary>
            <param name="fieldNames">欲搜尋的條件欄位名稱</param>
            <param name="operators">欲搜尋的條件各欄位運算元</param>
            <param name="fieldValues">欲搜尋的條件各欄位比較值</param>
            <returns>符合條件的搜尋結果陣列</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.getFilteredDataObjectSet(System.String)">
            <summary>
            根據sql(不包含where)過濾出符合條件的新DataObjectSet。此DataObjectSet中的物件指標皆與目前DataObjectSet一樣，
            並非複製。另外，此方法僅適用於PK為GUID欄位的DataObjectSet
            </summary>
            <param name="sql">查詢條件</param>
            <returns>符合條件的DataObject集合</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.compact">
            <summary>
            整理此資料物件集內容. 此方法會將標記刪除者以及key值重複者真正由此資料物件集當中刪除. 此方法通常於I/O更新後(例如呼叫代理器的update方法)執行.
            </summary>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.reOrderField(System.String[])">
            <summary>
            重新排列欄位的順序
            </summary>
            <param name="reOrderField">新順序的欄位名稱陣列。</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.saveXML">
            <summary>
            序列化此資料物件集, 此方法為深層序列化
            </summary>
            <returns>序列化後的XML字串</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.loadXML(System.String)">
            <summary>
            反序列化. 可由輸入的xml還原此資料物件集, 包含各項參數設定
            </summary>
            <param name="xml">代表此資料物件集的序列化字串</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.loadXML2(System.String)">
            <summary>
            反序列化. 可由輸入的xml還原此資料物件集, 不包含各項參數設定(僅由開窗使用)
            </summary>
            <param name="xml">代表此資料物件集的序列化字串</param>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.saveXML3">
            <summary>
            序列化此資料物件集, 此方法為深層序列化(包含旗標)
            </summary>
            <returns>序列化後的XML字串</returns>
        </member>
        <member name="M:com.dsc.kernal.databean.DataObjectSet.loadXML3(System.String)">
            <summary>
            反序列化. 可由輸入的xml還原此資料物件集, 包含各項參數設定, 包含旗標
            </summary>
            <param name="xml">代表此資料物件集的序列化字串</param>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObjectSet.dataObjectSchema">
            <summary>
            存放描述資料結構之SchemalXML
            </summary>
        </member>
        <member name="P:com.dsc.kernal.databean.DataObjectSet.isNameLess">
            <summary>
            是否使用XML描述資料結構
            </summary>
        </member>
        <member name="T:com.dsc.flow.data.RunningAcceptor">
            <summary>
            流程進行中或是已完成關卡的處理者資訊
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RunningAcceptor.workAssignmentOID">
            <summary>
            工作指派項目識別
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RunningAcceptor.acceptorName">
            <summary>
            處理者姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RunningAcceptor.acceptorId">
            <summary>
            處理者代號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.RunningAcceptor.acceptorOID">
            <summary>
            處理者識別號
            </summary>
        </member>
        <member name="T:com.dsc.flow.client.SendForm">
            <summary>
            EasyFlow Client端送單公用程序元件. 此版本使用ClientEngine呼叫
            </summary>
        </member>
        <member name="M:com.dsc.flow.client.SendForm.standardCreateForm(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            標準流程開單
            </summary>
            <param name="engine">所使用的ClientEngine</param>
            <param name="ClientFormID">表單代號</param>
            <param name="ClientGUID">AP端表單識別號</param>
            <param name="ClientSheetNo">AP端表單單號</param>
            <param name="FillID">填表人員編</param>
            <param name="FillName">填表人姓名</param>
            <param name="ApplyID">申請人員編</param>
            <param name="ApplyName">申請人姓名</param>
            <param name="Subject">主旨</param>
            <param name="ConditionStr">條件陣列字串. 格式為[欄位名稱]-[C,T,N,D]-[值];.....</param>
            <returns>一維字串陣列, 包含兩個元素. 若第一個元素值為error, 則第二個元素為錯誤訊息. 否則第一個元素為EasyFlow端FormID, 第二個元素為EasyFlow端SheetNo</returns>
        </member>
        <member name="M:com.dsc.flow.client.SendForm.customizeCreateForm(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            程式化塞流程開單
            </summary>
            <param name="engine">所使用的ClientEngine</param>
            <param name="ClientFormID">表單代號</param>
            <param name="ClientGUID">AP端表單識別號</param>
            <param name="ClientSheetNo">AP端表單單號</param>
            <param name="FillID">填表人員編</param>
            <param name="FillName">填表人姓名</param>
            <param name="ApplyID">申請人員編</param>
            <param name="ApplyName">申請人姓名</param>
            <param name="Subject">主旨</param>
            <param name="FlowSetStr">包含resdb資料物件結構的DataObjectSet序列化字串</param>
            <returns>一維字串陣列, 包含兩個元素. 若第一個元素值為error, 則第二個元素為錯誤訊息. 否則第一個元素為EasyFlow端FormID, 第二個元素為EasyFlow端SheetNo</returns>
        </member>
        <member name="M:com.dsc.flow.client.SendForm.addFlow(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String)">
            <summary>
            加簽
            </summary>
            <param name="engine">所使用的ClientEngine</param>
            <param name="FormID">EasyFlow端表單代號</param>
            <param name="SheetNo">EasyFlow端表單單號</param>
            <param name="FlowNo">要加簽的目前關卡關號</param>
            <param name="FlowStr">包含resdb資料物件結構的DataObjectSet序列化字串</param>
            <returns>一維字串陣列, 包含兩個元素. 若第一個元素值為error, 則第二個元素為錯誤訊息. 否則此兩個元素值皆為success</returns>
        </member>
        <member name="M:com.dsc.flow.client.SendForm.getDefaultStandardFlow(com.dsc.kernal.factory.AbstractEngine,System.String,System.String,System.String,System.String)">
            <summary>
            取得標準流程
            </summary>
            <param name="engine">所使用的ClientEngine</param>
            <param name="ClientFormID">EasyFlow端表單代號</param>
            <param name="FillID">填表人員編</param>
            <param name="ApplyID">申請人員編</param>
            <param name="ConditionStr">條件陣列字串. 格式為[欄位名稱]-[C,T,N,D]-[值];.....</param>
            <returns>包含resdb資料物件結構的DataObjectSet序列化字串. 取回後, 可還原為DataObject. 所包含的資料物件Namespace: ServerProject.system.flow.FlowSet</returns>
        </member>
        <member name="F:com.dsc.kernal.utility.SessionProperty.MAX_ENTRY">
            <summary>
            單一區段內容大小
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadInteger(System.String,System.String,System.Int32)">
            <summary>取得特定區段特定參數的整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadInteger(System.String,System.String)">
            <summary>取得特定區段特定參數的整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadInteger(System.String,System.Int32)">
            <summary>取得目前區段特定參數的整數值</summary>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadInteger(System.String)">
            <summary>取得目前區段特定參數的整數值</summary>
            <param name="key">參數名</param>
            <returns>所取得的整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadString(System.String,System.String,System.String)">
            <summary>取得特定區段特定參數的字串值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的字串值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadString(System.String,System.String)">
            <summary>取得特定區段特定參數的字串值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的字串值. 若該區段或參數不存在則回傳空字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadString(System.String)">
            <summary>取得目前區段特定參數的字串值</summary>
            <param name="key">參數名</param>
            <returns>所取得的字串值. 若該區段或參數不存在則回傳空字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadLong(System.String,System.String,System.Int64)">
            <summary>取得特定區段特定參數的長整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadLong(System.String,System.String)">
            <summary>取得特定區段特定參數的長整數值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadLong(System.String,System.Int64)">
            <summary>取得目前區段特定參數的長整數值</summary>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadLong(System.String)">
            <summary>取得目前區段特定參數的長整數值</summary>
            <param name="key">參數名</param>
            <returns>所取得的長整數值. 若該區段或參數不存在則回傳0</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadByteArray(System.String,System.String)">
            <summary>取得特定區段特定參數的Base64字串原始byte[]</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的byte[]. 若該區段或參數不存在則回傳null</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadByteArray(System.String)">
            <summary>取得目前區段特定參數的Base64字串原始byte[]</summary>
            <param name="key">參數名</param>
            <returns>所取得的byte[]. 若該區段或參數不存在則回傳null</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadBoolean(System.String,System.String,System.Boolean)">
            <summary>取得特定區段特定參數的布林值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadBoolean(System.String,System.String)">
            <summary>取得特定區段特定參數的布林值</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳false</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadBoolean(System.String,System.Boolean)">
            <summary>取得目前區段特定參數的布林值</summary>
            <param name="key">參數名</param>
            <param name="defVal">預設值</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳預設值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.ReadBoolean(System.String)">
            <summary>取得目前區段特定參數的布林值</summary>
            <param name="key">參數名</param>
            <returns>所取得的布林值. 若該區段或參數不存在則回傳false</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.String,System.Int32)">
            <summary>將整數值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.Int32)">
            <summary>將整數值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.String,System.String)">
            <summary>將字串值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.String)">
            <summary>將字串值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.String,System.Int64)">
            <summary>將長整數值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.Int64)">
            <summary>將長整數值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.String,System.Byte[])">
            <summary>將byte[]轉換成Base64後寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.Byte[])">
            <summary>將byte[]轉換成Base64後寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>將byte[]轉換成Base64後寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <param name="offset">要開始寫入的索引</param>
            <param name="length">要寫入的byte數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.String,System.Boolean)">
            <summary>將布林值寫入特定區段的參數</summary>
            <param name="section">區段</param>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.Write(System.String,System.Boolean)">
            <summary>將布林值寫入目前區段的參數</summary>
            <param name="key">參數名</param>
            <param name="value">寫入的值</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.DeleteKey(System.String,System.String)">
            <summary>從特定區段刪除參數</summary>
            <param name="section">區段</param>
            <param name="key">要刪除的參數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.DeleteKey(System.String)">
            <summary>從目前區段刪除參數</summary>
            <param name="section">區段</param>
            <param name="key">要刪除的參數</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.DeleteSection(System.String)">
            <summary>刪除特定區段</summary>
            <param name="section">要刪除的區段</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.GetSectionNames">
            <summary>取得INI檔案所有區段名稱</summary>
            <returns>包含所有區段名稱的ArrayList</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.GetPropertyNames(System.String)">
            <summary>
            取得特定區段的所有參數名稱
            </summary>
            <param name="secName">區段</param>
            <returns>包含所有參數名稱的ArrayList</returns>
        </member>
        <member name="F:com.dsc.kernal.utility.SessionProperty.m_Filename">
            <summary>
            INI檔案路徑
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.SessionProperty.m_Section">
            <summary>
            目前區段
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.getProperty(System.String,System.String)">
            <summary>
            根據區段名稱, 欄位名稱取得內容值
            </summary>
            <param name="secName">區段名稱</param>
            <param name="keyName">欄位名稱</param>
            <returns>內容值</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.setProperty(System.String,System.String,System.String)">
            <summary>
            根據區段名稱, 欄位名稱設定內容
            </summary>
            <param name="secName">區段名稱</param>
            <param name="keyName">欄位名稱</param>
            <param name="keyValue">欄位內容</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.getEncodeProperty(System.String,System.String)">
            <summary>
            根據區段名稱, 欄位名稱取得Base64處理過後的字串並還原內容值
            </summary>
            <param name="secName">區段名稱</param>
            <param name="keyName">欄位名稱</param>
            <returns>原始內容</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.setEncodeProperty(System.String,System.String,System.String)">
            <summary>
            根據區段名稱, 欄位名稱, 將欄位內容作Base64轉換後存入
            </summary>
            <param name="secName">區段名稱</param>
            <param name="keyName">欄位名稱</param>
            <param name="keyValue">原始欄位內容</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.load(System.String)">
            <summary>
            取得INI檔案
            </summary>
            <param name="filePath">檔案路徑</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.SessionProperty.save">
            <summary>
            儲存內容
            </summary>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="P:com.dsc.kernal.utility.SessionProperty.Filename">
            <summary>取得或設定ini檔案路徑</summary>
            <value>INI檔案路徑</value>
        </member>
        <member name="P:com.dsc.kernal.utility.SessionProperty.Section">
            <summary>取得或設定目前所處理的區段名稱</summary>
            <value>區段名稱</value>
        </member>
        <member name="T:com.dsc.kernal.utility.ExceptionPool">
            <summary>
            例外處理存取類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionPool.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="F:com.dsc.kernal.utility.ExceptionPool.exceptionStack">
            <summary>
            儲存例外參數訊息
            </summary>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionPool.push(System.Exception,System.String,System.String)">
            <summary>
            加入例外
            </summary>
            <param name="exception">例外物件</param>
            <param name="userID">建立使用者</param>
            <param name="className">來源類別名稱</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionPool.pop">
            <summary>
            取得所有例外物件
            </summary>
            <returns>例外物件陣列</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionPool.traceBack">
            <summary>
            追蹤所有例外訊息
            </summary>
            <returns>例外訊息回傳字串</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionPool.flushToFile(System.String)">
            <summary>
            將例外訊息內容儲存至檔案
            </summary>
            <param name="filePath">檔案路徑</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.utility.ExceptionPool.clear">
            <summary>
            清除此物件內所有例外
            </summary>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="T:com.dsc.kernal.factory.OleDbEngine">
            <summary>
            ODBC I/O存取引擎類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.OleDbEngine.con">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.OleDbEngine.processor">
            <summary>
            資料庫存取類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.#ctor(System.String)">
            <summary>
            建構子, 根據param建立SQL I/O存取引擎物件
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟Transaction
            </summary>
            <param name="isolevel">開啟方式, 參閱System.Data.SqlClient.IsolationLevel</param>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.close">
            <summary>
            關閉此I/O
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.getProcessor">
            <summary>
            取得ODBC存取物件
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.updateData(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.updateDataFormMode(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.updateDataSet(System.Data.DataSet)">
            <summary>
            將DataSet更新至資料庫
            </summary>
            <param name="ds">要更新的DataSet</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.getDataSet(System.String,System.String)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.getDataSetLimit(System.String,System.String,System.Int32)">
            <summary>
            根據sql字串取得限制資料筆數的DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet的TableName</param>
            <param name="rowCount">限制資料筆數</param>
            <returns></returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.refreshData(com.dsc.kernal.databean.DataObject)">
            <summary>
            從I/O方面取得資料更新data資料物件內容
            </summary>
            <param name="data">被更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.executeSQL(System.String)">
            <summary>
            執行SQL語句
            </summary>
            <param name="sql">SQL</param>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.executeScalar(System.String)">
            <summary>
            執行SQL語句並且回傳值
            </summary>
            <param name="sql">所執行的SQL</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.updateData(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.updateDataFormMode(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.getWhereSql(com.dsc.kernal.databean.DataObject,System.String)">
            <summary>
            根據資料物件內容設定, 建立存取I/O時的SQL條件語句
            </summary>
            <param name="data">資料物件</param>
            <param name="oriSql">更新前的SQL語句</param>
            <returns>更新後的SQL語句</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.OleDbEngine.exec(System.String)">
            <summary>
            執行StoreProcedure. 可直接撰寫command text, 包含output參數. 不論該storeprocedure是否有回傳值, 可直接寫成 sp_myProc 'xx',@myout output.......
            若該StoreProcedure有回傳DataSet, 則直接取得. 若無, 回傳null
            若該StoreProcedure有return值, 此值會寫在spReturnValue
            若該StoreProceudre有output參數, 回傳參數會以Hashtable放在spOutput中, key為參數名稱, value為值
            </summary>
            <param name="cmdText">要執行的StoreProcedure名稱以及參數. 可不寫上exec或者Execute開頭</param>
            <returns>取得的DataSet</returns>
            <example>
                <code>
               DataSet ds;
               ds = engine.exec("exec testDSO '1808', @name output");
               //取得回傳DataSet
               if (ds == null)
               {
                   Console.WriteLine("ds null");
               }
               else
               {
                   Console.WriteLine(ds.Tables[0].Rows[0]["RESAK001"].ToString());
               }
               //取得回傳值
               Console.WriteLine(engine.spReturnValue.ToString());
               //取得Output參數
               IDictionaryEnumerator ie = engine.spOutput.GetEnumerator();
               while (ie.MoveNext())
               {
                   Console.WriteLine(ie.Key.ToString() + ": " + ie.Value.ToString());
               }
                </code>
            </example>
        </member>
        <member name="T:com.dsc.kernal.security.RSASecurity">
            <summary>
            RSA加密法類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.security.RSASecurity.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.security.RSASecurity.getPublicKey">
            <summary>
            取得公開金鑰
            </summary>
            <returns>公開金鑰</returns>
        </member>
        <member name="M:com.dsc.kernal.security.RSASecurity.encrypt(System.String,System.Byte[])">
            <summary>
            加密資料
            </summary>
            <param name="key">加密鑰匙</param>
            <param name="orivalue">明碼文</param>
            <returns>密碼文</returns>
        </member>
        <member name="M:com.dsc.kernal.security.RSASecurity.decrypt(System.String,System.Byte[])">
            <summary>
            解密資料
            </summary>
            <param name="key">解密鑰匙.</param>
            <param name="orivalue">密碼文</param>
            <returns>明碼文</returns>
        </member>
        <member name="F:com.dsc.kernal.schedule.CheckSchedule.SettingMessage">
            <summary>
            設定有誤時的錯誤訊息
            </summary>
        </member>
        <member name="M:com.dsc.kernal.schedule.CheckSchedule.#ctor">
            <summary>
            建構子
            </summary>
        </member>
        <member name="M:com.dsc.kernal.schedule.CheckSchedule.IsRanToday(System.String)">
            <summary>
            根據設定檔回傳今天是否已執行
            </summary>
            <param name="xml">排程設定</param>
            <returns>true:是;false:否</returns>
        </member>
        <member name="M:com.dsc.kernal.schedule.CheckSchedule.IsRanSomeDay(System.String,System.DateTime)">
            <summary>
            根據設定檔回傳特定日期是否已執行
            </summary>
            <param name="xml">排程設定</param>
            <param name="rday">特定日期</param>
            <returns>true:是;false:否</returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.Logger">
            <summary>  
            Logger class that mimics log4net Logger class
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.Logger.globalLevel">
            <summary> Level of all loggers</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Logger.format">
            <summary>Date format</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Logger.loggers">
            <summary> Hash of all loggers that exist</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Logger.appenders">
            <summary> Vector of all appenders</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Logger.ts">
            <summary> Timestamp</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.Logger.clazz">
            <summary> Class name for this logger</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.#ctor(System.String)">
            <summary> 
            Constructor
            </summary>
            <param name="clazz">    
            class this logger is for
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.GetLogger(System.Type)">
            <summary> Get a logger for the supplied class
            
            </summary>
            <param name="clazz">   full class name
            </param>
            <returns>  logger for class
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.GetLogger(System.String)">
            <summary> 
            Get a logger for the supplied class
            </summary>
            <param name="clazz">   full class name
            </param>
            <returns>  logger for class
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.AddAppender(com.dsc.kernal.ftp.Appender)">
            <summary> 
            Add an appender to our list
            </summary>
            <param name="newAppender">
            new appender to add
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Shutdown">
            <summary> Close and remove all appenders and loggers</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Log(com.dsc.kernal.ftp.Level,System.String,System.Exception)">
            <summary> Log a message 
            
            </summary>
            <param name="level">    log level
            </param>
            <param name="message">  message to log
            </param>
            <param name="t">        throwable object
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.OurLog(com.dsc.kernal.ftp.Level,System.String,System.Exception)">
            <summary> 
            Log a message to our logging system
            </summary>
            <param name="level">    log level
            </param>
            <param name="message">  message to log
            </param>
            <param name="t">        throwable object
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Info(System.String)">
            <summary> Log an info level message
            
            </summary>
            <param name="message">  message to log
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Info(System.String,System.Exception)">
            <summary> Log an info level message
            
            </summary>
            <param name="message">  message to log
            </param>
            <param name="t">        throwable object
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Warn(System.String)">
            <summary> Log a warning level message
            
            </summary>
            <param name="message">  message to log
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Warn(System.String,System.Exception)">
            <summary> Log a warning level message
            
            </summary>
            <param name="message">  message to log
            </param>
            <param name="t">        throwable object
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Error(System.String)">
            <summary> Log an error level message
            
            </summary>
            <param name="message">  message to log
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Error(System.String,System.Exception)">
            <summary> Log an error level message
            
            </summary>
            <param name="message">  message to log
            </param>
            <param name="t">        throwable object
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Fatal(System.String)">
            <summary> Log a fatal level message
            
            </summary>
            <param name="message">  message to log
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Fatal(System.String,System.Exception)">
            <summary> Log a fatal level message
            
            </summary>
            <param name="message">  message to log
            </param>
            <param name="t">        throwable object
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Debug(System.String)">
            <summary> Log a debug level message
            
            </summary>
            <param name="message">  message to log
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.Debug(System.String,System.Exception)">
            <summary> Log a debug level message
            
            </summary>
            <param name="message">  message to log
            </param>
            <param name="t">        throwable object
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.IsEnabledFor(com.dsc.kernal.ftp.Level)">
            <summary> Is logging enabled for the supplied level?
            
            </summary>
            <param name="level">  level to test for
            </param>
            <returns> true   if enabled
            </returns>
        </member>
        <member name="M:com.dsc.kernal.ftp.Logger.#cctor">
            <summary> Determine the logging level</summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.Logger.CurrentLevel">
            <summary> 
            Set all loggers to this level
            </summary>
        </member>
        <member name="P:com.dsc.kernal.ftp.Logger.DebugEnabled">
            <summary> 
            Is debug logging enabled?
            </summary>
            <returns> true if enabled
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.Logger.InfoEnabled">
            <summary> Is info logging enabled for the supplied level?
            
            </summary>
            <returns> true if enabled
            </returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.FTPReply">
            <summary>  Encapsulates the FTP server reply
            
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPReply.replyCode">
            <summary>  Reply code</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPReply.replyText">
            <summary>  Reply text</summary>
        </member>
        <member name="F:com.dsc.kernal.ftp.FTPReply.data">
            <summary> Lines of data returned, e.g. FEAT</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPReply.#ctor(System.String,System.String)">
            <summary>  Constructor. Only to be constructed
            by this package, hence package access
            
            </summary>
            <param name="replyCode"> the server's reply code
            </param>
            <param name="replyText"> the server's reply text
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPReply.#ctor(System.String,System.String,System.String[])">
            <summary>  Constructor. Only to be constructed
            by this package, hence package access
            
            </summary>
            <param name="replyCode"> the server's reply code
            </param>
            <param name="replyText"> the server's full reply text
            </param>
            <param name="data">      data lines contained in reply text
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FTPReply.#ctor(System.String)">
            <summary>  Constructor. Only to be constructed
            by this package, hence package access
            
            </summary>
            <param name="rawReply"> the server's raw reply
            </param>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPReply.ReplyCode">
            <summary>  Getter for reply code
            
            </summary>
            <returns> server's reply code
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPReply.ReplyText">
            <summary>  Getter for reply text
            
            </summary>
            <returns> server's reply text
            </returns>
        </member>
        <member name="P:com.dsc.kernal.ftp.FTPReply.ReplyData">
            <summary> Getter for reply data lines
            
            </summary>
            <returns> array of data lines returned (if any). Null
            if no data lines
            </returns>
        </member>
        <member name="T:com.dsc.kernal.ftp.FileAppender">
            <summary>  
            Appends log statements to a file
            </summary>
            <author>       Bruce Blackshaw
            </author>
            <version>      $Revision: 3 $
            </version>
        </member>
        <member name="F:com.dsc.kernal.ftp.FileAppender.log">
            <summary> Destination</summary>
        </member>
        <member name="M:com.dsc.kernal.ftp.FileAppender.#ctor(System.String)">
            <summary> Constructor
            
            </summary>
            <param name="file">     file to log to
            </param>
            <throws>  IOException </throws>
        </member>
        <member name="M:com.dsc.kernal.ftp.FileAppender.Log(System.String)">
            <summary> 
            Log a message
            </summary>
            <param name="msg"> message to log
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FileAppender.Log(System.Exception)">
            <summary> 
            Log a stack trace
            </summary>
            <param name="t"> throwable object
            </param>
        </member>
        <member name="M:com.dsc.kernal.ftp.FileAppender.Close">
            <summary> 
            Close this appender
            </summary>
        </member>
        <member name="T:com.dsc.kernal.factory.DB2Engine">
            <summary>
            Db2 Server I/O存取引擎類別
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.DB2Engine.con">
            <summary>
            資料庫連線物件
            </summary>
        </member>
        <member name="F:com.dsc.kernal.factory.DB2Engine.processor">
            <summary>
            資料庫存取類別
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.#ctor(System.String)">
            <summary>
            建構子, 根據param建立DB2 I/O存取引擎物件
            </summary>
            <param name="param">建構引擎所需參數</param>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.startTransaction(System.Data.IsolationLevel)">
            <summary>
            開啟Transaction
            
            .NET Isolation Enumeration 對應 DB2 Isolation Levels
            ReadCommitted                         > Cursor Stability (default)
            ReadUncommitted                      > Uncommitted Read
            RepeatableRead                        > Read Stability
            Serializable                                > Repeatable Read
            Chaos                                        > not supported
            Snapshot                                   > 未明確說明是否支援
            Unspecified                                > 未明確說明是否支援
            </summary>
            <param name="isolevel">開啟方式, 參閱System.Data.IsolationLevel與IBM網站</param>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.commit">
            <summary>
            commit
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.rollback">
            <summary>
            rollback
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.close">
            <summary>
            關閉此I/O
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.getProcessor">
            <summary>
            取得Oracle Server存取物件, 此方法為Oracle I/O存取引擎特有
            </summary>
            <returns>OracleProcessor物件</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.updateData(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.updateDataFormMode(com.dsc.kernal.databean.DataObjectSet)">
            <summary>
            將資料物件集內容更新至I/O. 此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件集</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.updateDataSet(System.Data.DataSet)">
            <summary>
            將DataSet更新至資料庫
            </summary>
            <param name="ds">要更新的DataSet</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.getDataSet(System.String,System.String)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.getDataSetLimit(System.String,System.String,System.Int32)">
            <summary>
            根據sql字串取得限制資料筆數的DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet的TableName</param>
            <param name="rowCount">限制資料筆數</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.getDataSet(System.String,System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            根據sql字串取得DataSet
            </summary>
            <param name="sql">查詢字串</param>
            <param name="tableName">建立在DataSet中的TableName</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.refreshData(com.dsc.kernal.databean.DataObject)">
            <summary>
            從I/O方面取得資料更新data資料物件內容
            </summary>
            <param name="data">被更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.executeSQL(System.String)">
            <summary>
            執行Oracle語句
            </summary>
            <param name="Oracle">Oracle</param>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.executeScalar(System.String)">
            <summary>
            執行SQL語句並且回傳值
            </summary>
            <param name="sql">所執行的SQL</param>
            <returns>回傳值</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.updateData(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.updateDataFormMode(com.dsc.kernal.databean.DataObject)">
            <summary>
            將資料物件更新至I/O,此方法不檢查資料是否存在
            </summary>
            <param name="data">欲更新的資料物件</param>
            <returns>true: 成功; false: 失敗</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.getWhereSQL(com.dsc.kernal.databean.DataObject,System.String)">
            <summary>
            根據資料物件內容設定, 建立存取I/O時的Oracle條件語句
            </summary>
            <param name="data">資料物件</param>
            <param name="oriOracle">更新前的Oracle語句</param>
            <returns>更新後的Oracle語句</returns>
        </member>
        <member name="M:com.dsc.kernal.factory.DB2Engine.exec(System.String)">
            <summary>
            執行StoreProcedure. 可直接撰寫command text, 包含output參數. 不論該storeprocedure是否有回傳值, 可直接寫成 sp_myProc 'xx',@myout output.......
            若該StoreProcedure有回傳DataSet, 則直接取得. 若無, 回傳null
            若該StoreProcedure有return值, 此值會寫在spReturnValue
            若該StoreProceudre有output參數, 回傳參數會以Hashtable放在spOutput中, key為參數名稱, value為值
            </summary>
            <param name="cmdText">要執行的StoreProcedure名稱以及參數. 可不寫上exec或者Execute開頭</param>
            <returns>取得的DataSet</returns>
            <example>
                <code>
               DataSet ds;
               ds = engine.exec("exec testDSO '1808', @name output");
               //取得回傳DataSet
               if (ds == null)
               {
                   Console.WriteLine("ds null");
               }
               else
               {
                   Console.WriteLine(ds.Tables[0].Rows[0]["RESAK001"].ToString());
               }
               //取得回傳值
               Console.WriteLine(engine.spReturnValue.ToString());
               //取得Output參數
               IDictionaryEnumerator ie = engine.spOutput.GetEnumerator();
               while (ie.MoveNext())
               {
                   Console.WriteLine(ie.Key.ToString() + ": " + ie.Value.ToString());
               }
                </code>
            </example>
        </member>
        <member name="T:com.dsc.kernal.factory.SocketEngine">
            <summary>
            Socket I/O存取引擎(尚未實作)
            </summary>
        </member>
        <member name="M:com.dsc.kernal.factory.SocketEngine.#ctor(System.String)">
            <summary>
            建構子, 根據param建立Socket I/O存取引擎物件
            </summary>
            <param name="param">建構引擎所需參數</param>
        </member>
        <member name="T:com.dsc.flow.server.FlowFactory">
            <summary>
            動態產生FlowAdapter實體之工廠類別
            </summary>
        </member>
        <member name="M:com.dsc.flow.server.FlowFactory.getAdapter(System.String)">
            <summary>
            動態建立指定的FlowAdapter實體
            </summary>
            <param name="classname">欲建立的FlowAdapter之組件名稱</param>
            <returns>FlowAdapter實體</returns>
        </member>
        <member name="T:com.dsc.flow.data.TraceProcessInstance">
            <summary>
            代表可追蹤的流程實例的物件類別
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.OID">
            <summary>
            流程實例識別碼
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.createdTime">
            <summary>
            流程發起時間
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.processName">
            <summary>
            流程名稱
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.serialNo">
            <summary>
            流程實例序號
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.requesterName">
            <summary>
            發起者姓名
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.state">
            <summary>
            流程狀態
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.allowByPass">
            <summary>
            是否允許ByPass
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.subject">
            <summary>
            主旨
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.runningActNames">
            <summary>
            目前處理活動名稱。若多個處理活動同時進行，會以;符號串接。若要獨立取得各名稱，除使用;做Split外，
            建議直接使用runningActNameList字串陣列取得
            </summary>
        </member>
        <member name="F:com.dsc.flow.data.TraceProcessInstance.runningActNameList">
            <summary>
            目前處理活動名稱陣列。各處理活動為一個元素
            </summary>
        </member>
    </members>
</doc>
